[
    {
        "p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country",
        "g_str": [
            "SELECT country ,  count(*) FROM singer GROUP BY country",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country",
        "g_str": [
            "SELECT country ,  count(*) FROM singer GROUP BY country",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Name, COUNT(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name, Capacity FROM stadium WHERE Stadium_ID = (SELECT Stadium_ID FROM concert WHERE Year >= 2014 GROUP BY Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
            "concert_singer"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.Name, T2.Capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
            "concert_singer"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "concert_singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "concert_singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT concert_Name, Theme, COUNT(Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID",
        "g_str": [
            "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.concert_Name, T1.Theme, COUNT(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID, T1.concert_Name, T1.Theme",
        "g_str": [
            "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Name, COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Name, COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID",
        "g_str": [
            "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT StuID, COUNT(*) FROM Has_Pet GROUP BY StuID",
        "g_str": [
            "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Fname, T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Fname, T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T2.StuID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.ContId, T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent",
        "g_str": [
            "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.ContId, T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent",
        "g_str": [
            "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",
        "g_str": [
            "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",
        "g_str": [
            "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryName, CountryId FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)",
        "g_str": [
            "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT CountryName, CountryId FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)",
        "g_str": [
            "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year",
        "g_str": [
            "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year",
        "g_str": [
            "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN continents AS T3 ON T2.Continent = T3.ContId WHERE T3.Continent = 'Europe' GROUP BY T2.CountryName HAVING COUNT(*) >= 3",
        "g_str": [
            "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN continents AS T3 ON T2.Continent = T3.ContId WHERE T3.Continent = 'Europe' GROUP BY T2.CountryName HAVING COUNT(*) >= 3",
        "g_str": [
            "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",
        "g_str": [
            "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",
        "g_str": [
            "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT FullName, Id FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 3)",
        "g_str": [
            "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY DestAirport ORDER BY COUNT(FlightNo) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City FROM airports WHERE AirportCode = (SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY SourceAirport ORDER BY COUNT(FlightNo) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City",
        "g_str": [
            "SELECT count(*) ,  city FROM employee GROUP BY city",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City",
        "g_str": [
            "SELECT count(*) ,  city FROM employee GROUP BY city",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1",
        "g_str": [
            "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location",
        "g_str": [
            "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location",
        "g_str": [
            "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Name FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM hiring GROUP BY Shop_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Name FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM hiring GROUP BY Shop_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.Name, COUNT(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID",
        "g_str": [
            "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Name, COUNT(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID",
        "g_str": [
            "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID",
        "g_str": [
            "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID",
        "g_str": [
            "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3",
        "g_str": [
            "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3",
        "g_str": [
            "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT T1.Template_Type_Code, COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code",
        "g_str": [
            "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Template_Type_Code, COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code",
        "g_str": [
            "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Document_ID, COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID",
        "g_str": [
            "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID",
        "g_str": [
            "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Document_ID, T1.Document_Name, COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Document_ID, T1.Document_Name, COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Document_ID, Document_Name FROM Documents WHERE Document_ID = (SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown",
        "g_str": [
            "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
            "course_teach"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
            "course_teach"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT T1.Name, COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID",
        "g_str": [
            "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Name, COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID",
        "g_str": [
            "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
            "museum_visit"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Museum_ID, Name FROM museum WHERE Museum_ID = (SELECT Museum_ID FROM visit GROUP BY Museum_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
            "museum_visit"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10",
        "g_str": [
            "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code",
        "g_str": [
            "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code",
        "g_str": [
            "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT year, COUNT(*) FROM matches GROUP BY year",
        "g_str": [
            "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT year, COUNT(*) FROM matches GROUP BY year",
        "g_str": [
            "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT hand, COUNT(*) FROM players GROUP BY hand",
        "g_str": [
            "SELECT count(*) ,  hand FROM players GROUP BY hand",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT hand, COUNT(*) FROM players GROUP BY hand",
        "g_str": [
            "SELECT count(*) ,  hand FROM players GROUP BY hand",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T3.killed) > 10",
        "g_str": [
            "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
            "battle_death"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT department_name, department_id FROM Departments WHERE department_id = (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT course_name, course_id FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) <= 2)",
        "g_str": [
            "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT course_id, course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) < 2)",
        "g_str": [
            "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.semester_id, T2.semester_name FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT semester_name, semester_id FROM Semesters WHERE semester_id = (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.degree_summary_name FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T2.transcript_id HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.transcript_id, T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT address_id, line_1, line_2 FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students GROUP BY current_address_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT transcript_date, transcript_id FROM Transcripts WHERE transcript_id = (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.transcript_date, T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1",
        "g_str": [
            "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language ORDER BY COUNT(id) ASC LIMIT 1",
        "g_str": [
            "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language",
        "g_str": [
            "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language",
        "g_str": [
            "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by",
        "g_str": [
            "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by",
        "g_str": [
            "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality",
        "g_str": [
            "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
            "poker_player"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality",
        "g_str": [
            "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
            "poker_player"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
            "poker_player"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
            "poker_player"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
            "poker_player"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
            "poker_player"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
            "voter_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number = (SELECT contestant_number FROM VOTES GROUP BY contestant_number ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
            "voter_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT c.Continent FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode GROUP BY c.Continent ORDER BY COUNT(cl.Language) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode HAVING COUNT(*) >= 3",
        "g_str": [
            "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2",
        "g_str": [
            "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",
        "g_str": [
            "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Continent, SUM(Population), AVG(LifeExpectancy) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72",
        "g_str": [
            "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "orchestra"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "orchestra"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company",
        "g_str": [
            "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company",
        "g_str": [
            "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
            "orchestra"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
            "orchestra"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)",
        "g_str": [
            "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)",
        "g_str": [
            "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade",
        "g_str": [
            "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade",
        "g_str": [
            "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
            "network_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
            "network_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name, COUNT(friend_id) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.name, COUNT(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT student_id, COUNT(student_id) FROM Likes GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT student_id, COUNT(student_id) FROM Likes GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.name, COUNT(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)",
        "g_str": [
            "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.owner_id, T2.zip_code FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)",
        "g_str": [
            "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)",
        "g_str": [
            "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT D.name, T.date_of_treatment FROM Dogs AS D JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT D.name, T.date_of_treatment FROM Dogs AS D JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
            "singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "select citizenship from singer group by citizenship order by count(*) desc limit 1",
            "singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)",
        "g_str": [
            "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)",
        "g_str": [
            "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID",
        "g_str": [
            "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID",
        "g_str": [
            "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
            "singer"
        ],
        "hardness": "medium"
    }
]