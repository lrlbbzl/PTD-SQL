[
    {
        "p_str": "SELECT T1.Stadium_ID, COUNT(*) FROM stadium AS T1 JOIN singer_in_concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Maker, T1.FullName, COUNT(*) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Maker, T1.FullName",
        "g_str": [
            "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Id, T1.Maker, COUNT(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Maker",
        "g_str": [
            "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.FullName, COUNT(*) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.FullName",
        "g_str": [
            "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Id, T1.FullName, COUNT(*) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Id, T1.FullName",
        "g_str": [
            "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Model, COUNT(Make) FROM car_names GROUP BY Model ORDER BY COUNT(Make) DESC LIMIT 1",
        "g_str": [
            "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Maker, Id FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 3)",
        "g_str": [
            "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT Country) FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2)",
        "g_str": [
            "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2)",
        "g_str": [
            "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select sourceairport as airportcode, count(*) from flights group by sourceairport union select destairport as airportcode, count(*) from flights group by destairport order by count(*) asc limit 1",
        "g_str": [
            "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Abbreviation, Country FROM airlines WHERE uid = (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Abbreviation, Country FROM airlines WHERE Airline = (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(FlightNo) < 200",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(FlightNo) < 200",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Template_Type_Code, COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code",
        "g_str": [
            "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Template_Type_Code, COUNT(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code",
        "g_str": [
            "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Hometown, COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Hometown",
        "g_str": [
            "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Hometown HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT T2.ID, T2.Name, T2.Level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID GROUP BY T1.visitor_ID ORDER BY SUM(T1.Total_spent) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
            "museum_visit"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT tourney_name FROM matches GROUP BY tourney_id HAVING COUNT(*) > 10",
        "g_str": [
            "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT T2.first_name, T2.last_name, T2.ranking_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id GROUP BY T1.winner_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.first_name, T2.last_name, T3.ranking_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id GROUP BY T1.winner_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT players.first_name, AVG(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",
        "g_str": [
            "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT first_name, AVG(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",
        "g_str": [
            "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT players.first_name, SUM(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",
        "g_str": [
            "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT players.first_name, SUM(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",
        "g_str": [
            "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date",
        "g_str": [
            "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date",
        "g_str": [
            "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.id, T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T1.caused_by_ship_id ORDER BY SUM(T1.injured) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
            "battle_death"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT department_name, department_id FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.semester_id IN (SELECT semester_id FROM Semesters GROUP BY semester_id HAVING COUNT(*) = 2) AND T2.degree_program_id IN (SELECT degree_program_id FROM Degree_Programs GROUP BY degree_program_id HAVING COUNT(*) = 2)",
        "g_str": [
            "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program_id IN (SELECT T3.degree_program_id FROM Student_Enrolment AS T3 WHERE T3.student_id = T2.student_id AND T3.semester_id = T2.semester_id GROUP BY T3.degree_program_id HAVING COUNT(*) = 2) GROUP BY T1.student_id, T2.semester_id",
        "g_str": [
            "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.degree_program_id, T2.degree_summary_description FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id ,  count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT course_name FROM Courses WHERE course_id = (SELECT course_id FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.course_name FROM Students AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT address_id, line_1, line_2, line_3 FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students GROUP BY current_address_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.student_course_id, COUNT(*) FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T1.transcript_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT course_id, student_enrolment_id FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)",
        "g_str": [
            "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
            "tvshow"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2",
        "g_str": [
            "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
            "tvshow"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT state FROM AREA_CODE_STATE WHERE state = (SELECT state FROM VOTES GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
            "voter_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "guage FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(*) = 1",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "guage FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(*) = 1",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "trict, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",
        "g_str": [
            "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm",
        "g_str": [
            "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT governmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY governmentForm",
        "g_str": [
            "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",
        "g_str": [
            "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Name, T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage GROUP BY CountryCode)",
        "g_str": [
            "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage GROUP BY CountryCode)",
        "g_str": [
            "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' GROUP BY CountryCode HAVING MAX(Percentage))",
        "g_str": [
            "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'",
        "g_str": [
            "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' GROUP BY T2.CountryCode HAVING MAX(T2.Percentage) = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')",
        "g_str": [
            "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"Spanish\" AND T2.IsOfficial = true AND T2.Percentage > 50",
        "g_str": [
            "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Record_Format FROM orchestra GROUP BY Record_Format ORDER BY COUNT(*) ASC",
        "g_str": [
            "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.name, COUNT(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T2.student_id HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.name FROM Dogs AS T2 JOIN Treatments AS T1 ON T2.dog_id = T1.dog_id GROUP BY T2.dog_id HAVING SUM(T1.cost_of_treatment) <= 1000",
        "g_str": [
            "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
            "dog_kennels"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) <= 1000)",
        "g_str": [
            "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
            "dog_kennels"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT owner_id, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Treatments GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.owner_id, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.owner_id, T2.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = [specific_code]",
        "g_str": [
            "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
            "real_estate_properties"
        ],
        "hardness": "medium"
    }
]