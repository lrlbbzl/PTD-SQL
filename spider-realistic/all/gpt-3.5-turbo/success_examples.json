[{"p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country ORDER BY COUNT(Singer_ID)", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country ORDER BY COUNT(Singer_ID)", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme", "g_str": ["SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown ORDER BY COUNT(Teacher_ID)", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown ORDER BY COUNT(Teacher_ID)", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT T2.ID, T2.Name, T2.Age FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID GROUP BY T1.visitor_ID HAVING COUNT(*) > 1", "g_str": ["SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT T1.Museum_ID, T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T2.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code ORDER BY COUNT(player_id)", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code ORDER BY COUNT(player_id)", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by ORDER BY COUNT(*) DESC", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by ORDER BY COUNT(*) DESC", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.owner_id, T2.zip_code FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.owner_id, T2.zip_code FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship ORDER BY COUNT(Singer_ID)", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["select citizenship from singer group by citizenship order by count(*) desc limit 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30", "g_str": ["SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2014 INTERSECT SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2015", "g_str": ["SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2014 INTERSECT SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2015", "g_str": ["SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' INTERSECT SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog'", "g_str": ["select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = \"cat\" INTERSECT SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = \"dog\"", "g_str": ["SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT StuID FROM Student EXCEPT SELECT t1.StuID FROM Student AS t1 JOIN Has_Pet AS t2 ON t1.StuID  =  t2.StuID JOIN Pets AS t3 ON t2.PetID  =  t3.PetID WHERE t3.PetType  =  \"cat\"", "g_str": ["SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT StuID FROM Student EXCEPT SELECT t1.StuID FROM Student AS t1 JOIN Has_Pet AS t2 ON t1.StuID  =  t2.StuID JOIN Pets AS t3 ON t2.PetID  =  t3.PetID WHERE t3.PetType  =  \"cat\"", "g_str": ["SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = 'APG' INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = 'CVO'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = 'APG' INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = 'CVO'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportName  =  \"CVO\" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportName  =  \"APG\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportName  =  \"CVO\" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportName  =  \"APG\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000", "g_str": ["SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000", "g_str": ["SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher EXCEPT SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID", "g_str": ["SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher EXCEPT SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID", "g_str": ["SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT T1.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.year = 2013 INTERSECT SELECT T1.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.year = 2016", "g_str": ["SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = \"WTA Championships\" INTERSECT SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = \"Australian Open\"", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "wta_1"], "hardness": "extra"}, {"p_str": "SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = \"WTA Championships\" INTERSECT SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = \"Australian Open\"", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "wta_1"], "hardness": "extra"}, {"p_str": "SELECT last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = \"North Carolina\" EXCEPT SELECT last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id", "g_str": ["SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = \"North Carolina\" EXCEPT SELECT last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id", "g_str": ["SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.degree_summary_name  =  \"Masters\" INTERSECT SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.degree_summary_name  =  \"Bachelors\"", "g_str": ["SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.degree_summary_name  =  \"Masters\" INTERSECT SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.degree_summary_name  =  \"Bachelors\"", "g_str": ["SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T2.series_name, T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = \"Ben Jones\" INTERSECT SELECT T2.series_name, T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = \"Michael Chang\"", "g_str": ["SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "tvshow"], "hardness": "extra"}, {"p_str": "SELECT T2.series_name, T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = \"Ben Jones\" INTERSECT SELECT T2.series_name, T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = \"Michael Chang\"", "g_str": ["SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "tvshow"], "hardness": "extra"}, {"p_str": "SELECT id FROM TV_Channel EXCEPT SELECT t1.id FROM TV_Channel AS t1 JOIN Cartoon AS t2 ON t1.id  =  t2.Channel WHERE t2.Directed_by = \"Ben Jones\"", "g_str": ["SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT id FROM TV_Channel EXCEPT SELECT t1.id FROM TV_Channel AS t1 JOIN Cartoon AS t2 ON t1.id  =  t2.Channel WHERE t2.Directed_by = \"Ben Jones\"", "g_str": ["SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT T3.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state WHERE T2.contestant_name = 'Kelly Clauss'", "g_str": ["SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' UNION SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'", "g_str": ["SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' UNION SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'", "g_str": ["SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') UNION SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')", "g_str": ["select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) > 2", "g_str": ["SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2", "g_str": ["SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT email_address FROM professionals WHERE state  =  \"Hawaii\" UNION SELECT email_address FROM professionals WHERE state  =  \"Wisconsin\"", "g_str": ["SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT email_address FROM professionals WHERE state  =  \"Hawaii\" UNION SELECT email_address FROM professionals WHERE state  =  \"Wisconsin\"", "g_str": ["SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955", "g_str": ["SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955", "g_str": ["SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "singer"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age > 20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age > 20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000", "g_str": ["SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000", "g_str": ["SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015", "g_str": ["SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015", "g_str": ["SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T2.Name ,  T2.Capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T1.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1", "g_str": ["select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)", "g_str": ["SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)", "g_str": ["SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)", "g_str": ["SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)", "g_str": ["SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT T2.Name FROM singer AS T2 JOIN singer_in_concert AS T1 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = 2014", "g_str": ["SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT T2.Name FROM singer AS T2 JOIN singer_in_concert AS T1 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = 2014", "g_str": ["SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name, Country FROM singer WHERE Song_Name LIKE \"%Hey%\"", "g_str": ["SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name, Country FROM singer WHERE Song_Name LIKE \"%Hey%\"", "g_str": ["SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM pets WHERE weight > 10", "g_str": ["SELECT count(*) FROM pets WHERE weight  >  10", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM pets WHERE weight > 10", "g_str": ["SELECT count(*) FROM pets WHERE weight  >  10", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Has_Pet  JOIN Pets ON Has_Pet.PetID = Pets.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = \"dog\" AND Student.Sex = \"female\"", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Has_Pet  JOIN Pets ON Has_Pet.PetID = Pets.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = \"dog\" AND Student.Sex = \"female\"", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType IN ('cat', 'dog')))", "g_str": ["SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType IN ('cat', 'dog')))", "g_str": ["SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT PetID, weight FROM Pets WHERE pet_age > 1", "g_str": ["SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID, weight FROM Pets WHERE pet_age > 1", "g_str": ["SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT LName  FROM Student  INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE PetType = 'cat' AND pet_age = 3", "g_str": ["SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT LName FROM Student  INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE PetType = 'cat' AND pet_age = 3", "g_str": ["SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "g_str": ["select avg(age) from student where stuid not in (select stuid from has_pet)", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "g_str": ["select avg(age) from student where stuid not in (select stuid from has_pet)", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970", "g_str": ["SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970", "g_str": ["SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model WHERE T1.Year  >  1980", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model WHERE T1.Year  >  1980", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France')", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France')", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4", "g_str": ["SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974", "g_str": ["select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "car_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980", "g_str": ["SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980", "g_str": ["select avg(horsepower) from cars_data where year  <  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000", "g_str": ["select distinct year from cars_data where weight between 3000 and 4000;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000", "g_str": ["select distinct year from cars_data where weight between 3000 and 4000;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT MAX(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980", "g_str": ["select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportCode, AirportName FROM airports WHERE AirportName = 'Anthony'", "g_str": ["SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportCode, AirportName FROM airports WHERE AirportName = 'Anthony';", "g_str": ["SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM airlines WHERE Country = 'USA'", "g_str": ["SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airlines WHERE Country = 'USA'", "g_str": ["SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE City = 'Aberdeen'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE City = 'Aberdeen'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport = 'APG'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport = 'APG'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = 'ATO'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = 'ATO'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = \"AHD\" AND Airline = \"United Airlines\"", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport = \"AHD\" AND Airline = \"United Airlines\"", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT Airline FROM flights WHERE SourceAirport = \"AHD\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Airline FROM flights WHERE SourceAirport = \"AHD\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Airline FROM flights WHERE DestAirport = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Airline FROM flights WHERE DestAirport = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = \"United Airlines\")", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = \"United Airlines\")", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport = 'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport = 'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = 'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = 'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  \"Aberdeen\" OR DestAirport  =  \"Abilene\"", "g_str": ["SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  \"Aberdeen\" OR DestAirport  =  \"Abilene\"", "g_str": ["SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)", "g_str": ["SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)", "g_str": ["SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'", "g_str": ["select name from teacher where hometown != \"little lever urban district\"", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'", "g_str": ["select name from teacher where hometown != \"little lever urban district\"", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher WHERE Age = 32 OR Age = 33", "g_str": ["SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Age = 32 OR Age = 33", "g_str": ["SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)", "g_str": ["SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange WHERE Course_ID = (SELECT Course_ID FROM course WHERE Course = 'Math'))", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange WHERE Course_ID IN (SELECT Course_ID FROM course WHERE Course = 'math'))", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM visitor WHERE Age < 30", "g_str": ["SELECT count(*) FROM visitor WHERE age  <  30", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT Name FROM visitor WHERE Level_of_membership  >  'lv 4' ORDER BY Level_of_membership DESC", "g_str": ["SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT AVG(Age) FROM visitor WHERE Level_of_membership  <=  4", "g_str": ["SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT Museum_ID, Name FROM museum GROUP BY Museum_ID, Name ORDER BY Num_of_Staff DESC LIMIT 1", "g_str": ["SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009", "g_str": ["SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'", "g_str": ["SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT Name FROM museum WHERE Num_of_Staff  >  (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010)", "g_str": ["SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "museum_visit"], "hardness": "hard"}, {"p_str": "SELECT sum(T2.Total_spent) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T1.Level_of_membership  =  1", "g_str": ["SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA'", "g_str": ["SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA'", "g_str": ["SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016", "g_str": ["SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016", "g_str": ["SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT winner_name  FROM matches  JOIN players ON matches.winner_id = players.player_id  JOIN rankings ON players.player_id = rankings.player_id  WHERE tourney_name = \"Australian Open\"  ORDER BY ranking_points DESC  LIMIT 1", "g_str": ["SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT winner_name  FROM matches  JOIN players ON matches.winner_id = players.player_id  JOIN rankings ON players.player_id = rankings.player_id  WHERE tourney_name = \"Australian Open\"  ORDER BY ranking_points DESC  LIMIT 1", "g_str": ["SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM ship WHERE disposition_of_ship = \"Captured\"", "g_str": ["SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT name, date FROM battle WHERE id IN (SELECT lost_in_battle FROM ship WHERE name IN ('Lettice', 'HMS Atalanta'))", "g_str": ["SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')", "g_str": ["SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT course_description FROM Courses WHERE course_name LIKE '%math%'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT course_description FROM Courses WHERE course_name LIKE '%math%'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\"", "g_str": ["SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\"", "g_str": ["SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT cell_mobile_number FROM students WHERE first_name = \"Timmothy\" AND last_name = \"Ward\";", "g_str": ["SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT cell_mobile_number FROM Students WHERE first_name = \"Timmothy\" AND last_name = \"Ward\";", "g_str": ["select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "g_str": ["select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "g_str": ["select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\"", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\"", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Cartoon INNER JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Written_by = 'Joseph Kuh'", "g_str": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Cartoon INNER JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Written_by = 'Joseph Kuh'", "g_str": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"", "g_str": ["SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM TV_Channel WHERE Language = \"English\"", "g_str": ["SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM TV_Channel WHERE Language = \"English\"", "g_str": ["SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'", "g_str": ["SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'", "g_str": ["SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')", "g_str": ["SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')", "g_str": ["SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT pixel_aspect_ratio_PAR, country FROM TV_Channel WHERE language != 'English'", "g_str": ["SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT pixel_aspect_ratio_PAR, country FROM TV_Channel WHERE language != 'English'", "g_str": ["SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height > 200", "g_str": ["SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height > 200", "g_str": ["SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Name FROM people WHERE Nationality != 'Russia'", "g_str": ["SELECT Name FROM people WHERE Nationality != \"Russia\"", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name FROM people WHERE Nationality != 'Russia'", "g_str": ["SELECT Name FROM people WHERE Nationality != \"Russia\"", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT MAX(created) FROM votes WHERE state = 'CA'", "g_str": ["SELECT max(created) FROM votes WHERE state  =  'CA'", "voter_1"], "hardness": "easy"}, {"p_str": "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'", "g_str": ["SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM COUNTRY WHERE IndepYear > 1950", "g_str": ["SELECT Name FROM country WHERE IndepYear  >  1950", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE IndepYear > 1950", "g_str": ["SELECT Name FROM country WHERE IndepYear  >  1950", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE governmentform = \"Republic\"", "g_str": ["SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE governmentform = \"Republic\"", "g_str": ["SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT sum(SurfaceArea) FROM country WHERE Region = \"Caribbean\"", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT sum(SurfaceArea) FROM country WHERE Region = \"Caribbean\"", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT t2.Continent FROM country AS t1 JOIN country AS t2 ON t1.Code  =  t2.Code WHERE t1.Name  =  \"Anguilla\"", "g_str": ["SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT t2.Continent FROM country AS t1 JOIN country AS t2 ON t1.Code  =  t2.Code WHERE t1.Name  =  \"Anguilla\"", "g_str": ["SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Population, LifeExpectancy FROM country WHERE Name = \"Brazil\"", "g_str": ["SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Population, LifeExpectancy FROM country WHERE Name = \"Brazil\"", "g_str": ["SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT region, population FROM country WHERE name = 'Angola'", "g_str": ["SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT region, population FROM country WHERE name = 'Angola'", "g_str": ["SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy ASC LIMIT 1", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy ASC LIMIT 1", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "g_str": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "g_str": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "g_str": ["SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "g_str": ["SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "g_str": ["SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "g_str": ["SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.Continent = 'Asia'  GROUP BY Language  ORDER BY COUNT(*) DESC  LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Language  FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  GROUP BY Language  ORDER BY COUNT(*) DESC  LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(*) = 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(Language) = 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT Language) FROM countrylanguage WHERE IsOfficial  =  \"T\" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)", "g_str": ["SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Language) FROM country AS t1 JOIN countrylanguage AS t2 ON t1.Code  =  t2.CountryCode WHERE t1.IndepYear  <  1930 AND t2.IsOfficial  =  \"T\"", "g_str": ["SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT c1.Name FROM country AS c1 WHERE c1.Continent  =  'Africa' AND c1.Population  <  (SELECT MIN(c2.Population) FROM country AS c2 WHERE c2.Continent  =  'Asia')", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT city.Name FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "g_str": ["select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM country WHERE Continent = 'Asia'", "g_str": ["SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE Continent = 'Asia'", "g_str": ["SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000", "g_str": ["SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;", "g_str": ["SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT sum(Population) as total_population, avg(Population) as average_population  FROM country  WHERE Continent = 'North America' AND SurfaceArea > 3000", "g_str": ["select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "world_1"], "hardness": "hard"}, {"p_str": "SELECT sum(Population) as total_population, avg(Population) as average_population  FROM country  WHERE Continent = 'North America' AND SurfaceArea > 3000", "g_str": ["select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM city WHERE Population > 160000 AND Population < 900000", "g_str": ["SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "world_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM city WHERE population BETWEEN 160000 AND 900000", "g_str": ["select name from city where population between 160000 and 900000", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Nationality <> 'USA'", "g_str": ["SELECT Name FROM conductor WHERE Nationality != 'USA'", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Nationality <> 'USA'", "g_str": ["SELECT Name FROM conductor WHERE Nationality != 'USA'", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'", "g_str": ["SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler WHERE grade = 10", "g_str": ["SELECT name FROM Highschooler WHERE grade  =  10", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler WHERE grade = 10", "g_str": ["SELECT name FROM Highschooler WHERE grade  =  10", "network_1"], "hardness": "easy"}, {"p_str": "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)", "g_str": ["SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)", "g_str": ["SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "g_str": ["SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "hard"}, {"p_str": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "g_str": ["SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "g_str": ["SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "g_str": ["SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM likes WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle')", "g_str": ["SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM likes WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle')", "g_str": ["SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T2.name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T2.name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)", "g_str": ["SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)", "g_str": ["SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Y'", "g_str": ["SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Y'", "g_str": ["SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Citizenship != 'French'", "g_str": ["SELECT Name FROM singer WHERE Citizenship != \"France\"", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer WHERE Citizenship != 'French'", "g_str": ["SELECT Name FROM singer WHERE Citizenship != \"France\"", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)", "g_str": ["SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)", "g_str": ["SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "singer"], "hardness": "medium"}, {"p_str": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'", "g_str": ["SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'", "g_str": ["SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)", "g_str": ["select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)", "g_str": ["select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT weight FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'dog' AND T2.pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')", "g_str": ["SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT weight FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'dog' AND T2.pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')", "g_str": ["SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)", "g_str": ["SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT T2.PetType, T2.weight FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pet_age = (SELECT MIN(pet_age) FROM Pets)", "g_str": ["SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName", "g_str": ["SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Year = 1980", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Year = 1980", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'", "g_str": ["SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'", "g_str": ["SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Name FROM employee ORDER BY Age ASC", "g_str": ["SELECT name FROM employee ORDER BY age", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT Name FROM employee ORDER BY Age ASC", "g_str": ["SELECT name FROM employee ORDER BY age", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT Manager_name, District  FROM shop  WHERE Number_products = (SELECT MAX(Number_products) FROM shop)", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Manager_name, District  FROM shop  WHERE Number_products = (SELECT MAX(Number_products) FROM shop)", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation ORDER BY Bonus DESC LIMIT 1)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE Bonus = (SELECT MAX(Bonus) FROM evaluation)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher ORDER BY Age ASC", "g_str": ["SELECT Name FROM teacher ORDER BY Age ASC", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher ORDER BY Age ASC", "g_str": ["SELECT Name FROM teacher ORDER BY Age ASC", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)", "g_str": ["SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)", "g_str": ["SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon ORDER BY Title ASC", "g_str": ["SELECT Title FROM Cartoon ORDER BY title", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon ORDER BY Title ASC", "g_str": ["SELECT Title FROM Cartoon ORDER BY title", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "g_str": ["SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "g_str": ["SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1", "g_str": ["select production_code ,  channel from cartoon order by original_air_date desc limit 1", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1", "g_str": ["select production_code ,  channel from cartoon order by original_air_date desc limit 1", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Money_Rank FROM poker_player JOIN (SELECT People_ID FROM people WHERE Height = (SELECT MAX(Height) FROM people)) AS T ON poker_player.People_ID = T.People_ID", "g_str": ["SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Money_Rank FROM poker_player JOIN (SELECT People_ID FROM people WHERE Height = (SELECT MAX(Height) FROM people)) AS T ON poker_player.People_ID = T.People_ID", "g_str": ["SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1", "g_str": ["SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT population, name, headofstate FROM country ORDER BY surfacearea DESC LIMIT 1", "g_str": ["SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "g_str": ["SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "g_str": ["SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "network_1"], "hardness": "hard"}, {"p_str": "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "g_str": ["SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "network_1"], "hardness": "hard"}, {"p_str": "SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code WHERE Treatments.cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments)", "g_str": ["SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "singer"], "hardness": "medium"}]