[
    "SELECT count(*) FROM singer",
    "SELECT count(*) FROM singer",
    "SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC",
    "SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC",
    "SELECT AVG (Age) ,  MIN (Age) ,  MAX (Age) FROM singer WHERE Country  =  'France'",
    "SELECT AVG (Age) ,  MIN (Age) ,  MAX (Age) FROM singer WHERE Country  =  'French'",
    "SELECT Name ,  Song_release_year FROM singer ORDER BY Age ASC LIMIT 1",
    "SELECT Name ,  Song_release_year FROM singer WHERE Age  = (SELECT MIN(Age) FROM singer)",
    "SELECT DISTINCT Country FROM singer WHERE Age  >  20",
    "SELECT DISTINCT Country FROM singer WHERE Age  >  20",
    "SELECT Country ,  count(Singer_ID) FROM singer GROUP BY Country",
    "SELECT count(*) ,  Country FROM singer GROUP BY Country",
    "SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
    "SELECT Song_Name FROM singer WHERE Age  >  (SELECT avg(Age) FROM singer)",
    "SELECT Location ,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",
    "SELECT Location ,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",
    "SELECT max(Capacity) ,  avg(Capacity) FROM stadium",
    "SELECT AVG(Average) ,  MAX(Highest) FROM stadium",
    "SELECT Name ,  Capacity FROM stadium ORDER BY Average DESC LIMIT 1",
    "SELECT Name ,  Capacity FROM stadium ORDER BY Average DESC LIMIT 1",
    "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015",
    "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015",
    "SELECT T1.Name ,  count(T2.concert_ID) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Name",
    "SELECT T1.Stadium_ID ,  count(T2.concert_ID) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Stadium_ID",
    "SELECT T1.Name ,  T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  >=  2014 GROUP BY T1.Stadium_ID ORDER BY count(T2.concert_ID) DESC LIMIT 1",
    "SELECT Name ,  Capacity FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year  >  2013 GROUP BY Stadium_ID ORDER BY COUNT(concert_ID) DESC LIMIT 1)",
    "SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1",
    "SELECT Year FROM concert GROUP BY Year ORDER BY count(concert_ID) DESC LIMIT 1",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert)",
    "SELECT Name FROM stadium LEFT JOIN concert ON Stadium_ID  =  Stadium_ID WHERE Stadium_ID  IS NULL",
    "SELECT DISTINCT Country FROM singer WHERE Age >40 UNION SELECT DISTINCT Country FROM singer WHERE Age <30",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year  =  2014)",
    "SELECT DISTINCT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  !=  2014",
    "SELECT T1.concert_Name ,  T1.Theme ,  count(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID",
    "SELECT T1.concert_Name ,  T1.Theme ,  count(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID",
    "SELECT T1.Name ,  count(T2.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Singer_ID",
    "SELECT T1.Name ,  count(T2.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T3.Year  =  2014",
    "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T3.Year  =  2014",
    "SELECT Name ,  Country FROM singer WHERE Song_Name LIKE '%Hey%'",
    "SELECT Name ,  Country FROM singer WHERE Song_Name LIKE '%Hey%'",
    "SELECT DISTINCT Name ,  Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year  =  2014 OR Year  =  2015)",
    "SELECT DISTINCT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014 INTERSECT SELECT DISTINCT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2015",
    "SELECT count(concert_ID) FROM concert WHERE Stadium_ID  = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)",
    "SELECT count(concert_ID) FROM concert WHERE Stadium_ID  =  (SELECT Highest FROM stadium)",
    "SELECT count(*) FROM Pets WHERE weight  >  10",
    "SELECT count(*) FROM Pets WHERE weight  >  10",
    "SELECT weight FROM Pets WHERE PetType  =  'dog' ORDER BY pet_age ASC LIMIT 1",
    "SELECT min(weight) FROM Pets WHERE PetType  =  'dog'",
    "SELECT PetType ,  max(weight) FROM Pets GROUP BY PetType",
    "SELECT PetType, max(weight) FROM Pets GROUP BY PetType",
    "SELECT count(PetID) FROM Has_Pet JOIN Student ON Has_Pet.StuID  =  Student.StuID WHERE Student.Age  >  20",
    "SELECT count(DISTINCT T2.PetID) FROM Pets AS T1 JOIN Has_Pet AS T3 ON T1.PetID  =  T3.PetID JOIN Student AS T4 ON T3.StuID  =  T4.StuID WHERE T4.Age  >  20",
    "SELECT count(PetID) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID  =  T2.PetID JOIN Student AS T3 ON T2.StuID  =  T3.StuID WHERE PetType  =  'dog' AND Sex  =  'F'",
    "SELECT count(PetID) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID  =  T2.PetID JOIN Student AS T3 ON T2.StuID  =  T3.StuID WHERE PetType  =  'dog' AND Sex  =  'female'",
    "SELECT count(DISTINCT PetType) FROM Pets",
    "SELECT count(DISTINCT PetType) FROM Pets",
    "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' OR T3.PetType  =  'dog'",
    "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' OR T3.PetType  =  'dog'",
    "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'cat')) INTERSECT SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'dog'))",
    "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'cat')) INTERSECT SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'dog'))",
    "SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat')",
    "SELECT Major ,  Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'cat'))",
    "SELECT DISTINCT T1.StuID FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T3 JOIN Pets AS T4 ON T3.PetID  =  T4.PetID WHERE T4.PetType  =  'cat')",
    "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  'cat')",
    "SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat')) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog'))",
    "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'dog' AND T3.PetType  !=  'cat'",
    "SELECT PetType ,  weight FROM Pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT PetType ,  weight FROM Pets WHERE pet_age  = (SELECT min(pet_age) FROM Pets)",
    "SELECT PetID ,  weight FROM Pets WHERE pet_age  >  1",
    "SELECT PetID ,  weight FROM Pets WHERE pet_age  >  1",
    "SELECT PetType ,  AVG (pet_age) ,  MAX (pet_age) FROM Pets GROUP BY PetType",
    "SELECT PetType ,  AVG (pet_age) ,  MAX (pet_age) FROM Pets GROUP BY PetType",
    "SELECT PetType ,  AVG (weight) FROM Pets GROUP BY PetType",
    "SELECT PetType ,  AVG (weight) FROM Pets GROUP BY PetType",
    "SELECT DISTINCT T1.Fname ,  T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID",
    "SELECT DISTINCT T1.Fname ,  T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID",
    "SELECT T3.PetID FROM Pets AS T3 JOIN Has_Pet AS T2 ON T3.PetID  =  T2.PetID JOIN Student AS T1 ON T2.StuID  =  T1.StuID WHERE T1.LName  =  'Smith'",
    "SELECT PetID FROM Pets WHERE PetID IN (SELECT PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE LName = 'Smith')",
    "SELECT count(T2.PetID) ,  T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID",
    "SELECT T1.StuID ,  count(T2.PetID) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID",
    "SELECT T1.Fname ,  T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1",
    "SELECT T1.Fname ,  T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1",
    "SELECT DISTINCT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.pet_age  =  3",
    "SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' AND T3.pet_age  =  3",
    "SELECT avg(Age) FROM Student WHERE NOT EXISTS (SELECT * FROM Has_Pet WHERE Student.StuID  =  Has_Pet.StuID)",
    "SELECT avg(Age) FROM Student WHERE NOT EXISTS (SELECT * FROM Has_Pet WHERE Student.StuID  =  Has_Pet.StuID)",
    "SELECT count(*) FROM continents",
    "SELECT count(*) FROM continents",
    "SELECT T1.ContId ,  T1.Continent ,  count(T2.CountryId) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId",
    "SELECT T1.ContId ,  T1.Continent ,  count(T2.CountryId) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId",
    "SELECT count(*) FROM countries",
    "SELECT count(DISTINCT CountryId) FROM countries",
    "SELECT T1.FullName, T1.Id, COUNT(T2.Model) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId GROUP BY T1.Id",
    "SELECT T1.FullName, T1.Id, count(T2.Model) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id",
    "SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Horsepower  = (SELECT min(Horsepower) FROM cars_data)",
    "SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Horsepower  = (SELECT min(Horsepower) FROM cars_data)",
    "SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight <  (SELECT avg(Weight) FROM cars_data))",
    "SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight  <  (SELECT avg(Weight) FROM cars_data))",
    "SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN cars_data AS T3 ON T2.MakeId  =  T3.Id WHERE T3.Year  =  1970",
    "SELECT DISTINCT T1.FullName FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.Id JOIN model_list AS T3 ON T1.Id  =  T3.Maker JOIN car_names AS T4 ON T3.Model  =  T4.Model WHERE T2.Year  =  1970",
    "SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Year  =   (SELECT min(Year) FROM cars_data)",
    "SELECT T4.Maker ,  T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Id WHERE T1.Year  =   (SELECT min(Year) FROM cars_data)",
    "SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Year  >  1980",
    "SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.Id WHERE T2.Year  >  1980",
    "SELECT T2.Continent ,  count(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T3 ON T1.Country  =  T3.CountryId JOIN continents AS T2 ON T3.Continent  =  T2.ContId GROUP BY T2.Continent",
    "SELECT T1.Continent ,  count(DISTINCT T3.Id) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent",
    "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryName ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryName ORDER BY count(*) DESC LIMIT 1",
    "SELECT count(T2.Model) ,  T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.Make GROUP BY T1.FullName",
    "SELECT count(T2.Model) ,  T1.Id ,  T1.FullName FROM car_makers AS T1 JOIN car_names AS T3 ON T1.Id  =  T3.Make JOIN model_list AS T4 ON T1.Id  =  T4.Maker GROUP BY T1.Id",
    "SELECT Accelerate FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Id WHERE T2.Make  =  'amc' AND T3.Model  =  'hornet sportabout'",
    "SELECT Accelerate FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'AMC Hornet Sportabout (SW)'",
    "SELECT count(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T2 ON T2.CountryId  =  T1.Country WHERE T2.CountryName  = 'France'",
    "SELECT count(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'France'",
    "SELECT count(DISTINCT T1.Model) FROM car_names AS T1 JOIN countries AS T2 ON T1.MakeId  =  T2.CountryId WHERE T2.CountryName  =  'usa'",
    "SELECT count(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId  =  T2.Id JOIN countries AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'United States'",
    "SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  4",
    "SELECT AVG (MPG) FROM cars_data WHERE Cylinders  =  4",
    "SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND Year  =  1974",
    "SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND Year  =  1974",
    "SELECT T1.Maker ,  T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker",
    "SELECT T1.Maker ,  T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker",
    "SELECT DISTINCT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE EXISTS (SELECT * FROM car_makers AS T3 WHERE T3.Country  =  T1.CountryId)",
    "SELECT DISTINCT T1.CountryName ,  T1.CountryId FROM countries AS T1 WHERE T1.CountryId  IN  (SELECT T2.Country FROM car_makers AS T2)",
    "SELECT count(*) FROM cars_data WHERE Horsepower  >  150",
    "SELECT count(*) FROM cars_data WHERE Horsepower  >  150",
    "SELECT AVG (Weight) ,  Year FROM cars_data GROUP BY Year",
    "SELECT AVG(Weight), Year FROM cars_data GROUP BY Year",
    "SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*)  >=  3",
    "SELECT CountryName FROM countries WHERE Continent  =  (SELECT ContId FROM continents WHERE Continent  =  'Europe') GROUP BY CountryId HAVING COUNT(*)  >=  3",
    "SELECT max(Horsepower) ,  Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE Cylinders  =  3",
    "SELECT max(T1.Horsepower) ,  T4.Maker FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Id WHERE T1.Cylinders  =  3",
    "SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.MPG  = (SELECT max(MPG) FROM cars_data)",
    "SELECT Model FROM car_names JOIN cars_data ON MakeId = Id ORDER BY MPG DESC LIMIT 1",
    "SELECT avg(Horsepower) FROM cars_data WHERE Year  <  1980",
    "SELECT avg(Horsepower) FROM cars_data WHERE Year  <  1980",
    "SELECT avg(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo'",
    "SELECT avg(Edispl) FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Id  =  T2.Id JOIN model_list AS T3 ON T2.Id  =  T3.Maker JOIN car_names AS T4 ON T3.Model  =  T4.Model WHERE T2.Id  =  'Volvo'",
    "SELECT max(Accelerate) ,  Cylinders FROM cars_data GROUP BY Cylinders",
    "SELECT max(Accelerate) FROM cars_data GROUP BY Cylinders",
    "SELECT T1.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.ModelId GROUP BY T1.Model ORDER BY count(T1.Make) DESC LIMIT 1",
    "SELECT T1.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.ModelId GROUP BY T1.Make ORDER BY count(T1.Model) DESC LIMIT 1",
    "SELECT count(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Cylinders  >  4",
    "SELECT count(*) FROM cars_data WHERE Cylinders  >  4",
    "SELECT count(*) FROM cars_data WHERE Year  =  1980",
    "SELECT count(*) FROM cars_data WHERE Year  =  1980",
    "SELECT count(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId  =  T2.Id JOIN model_list AS T3 ON T2.Id  =  T3.Maker WHERE T2.FullName  =  'American Motor Company'",
    "SELECT count(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T2.Id  =  T1.MakeId JOIN model_list AS T3 ON T2.Id  =  T3.Maker WHERE T2.FullName  =  'American Motor Company'",
    "SELECT FullName ,  Id FROM car_makers WHERE Id IN (SELECT Maker FROM (SELECT Maker, COUNT(Model) AS ModelCount FROM model_list GROUP BY Maker) AS T1 WHERE ModelCount  >  3)",
    "SELECT T1.Maker ,  T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T2.Maker HAVING count(*)  >  3",
    "SELECT DISTINCT T3.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.Model  =  T3.Model JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id WHERE T1.FullName  = 'General Motors' AND T4.Weight  >  3500",
    "SELECT DISTINCT T3.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T4 ON T2.Model  =  T4.Model JOIN cars_data AS T5 ON T4.MakeId  =  T5.Id WHERE (T1.Maker  =  'General Motors' OR T5.Weight  >  3500)",
    "SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000",
    "SELECT Year FROM cars_data WHERE Weight  <  4000 UNION SELECT Year FROM cars_data WHERE Weight  >  3000",
    "SELECT Horsepower FROM cars_data WHERE Accelerate  =  (SELECT max(Accelerate) FROM cars_data)",
    "SELECT Horsepower FROM cars_data WHERE Accelerate  =  (SELECT max(Accelerate) FROM cars_data)",
    "SELECT T1.Cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' AND T1.Accelerate  =   (SELECT min(Accelerate) FROM cars_data)",
    "SELECT min(Accelerate) FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Id  =  T2.Id JOIN car_names AS T3 ON T1.MakeId  =  T3.MakeId JOIN model_list AS T4 ON T3.Model  =  T4.Model WHERE T2.Id  =  'volvo'",
    "SELECT count(T1.Id) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Accelerate  >  (SELECT max(Accelerate) FROM cars_data)",
    "SELECT count(T1.Id) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Accelerate  >  (SELECT max(Accelerate) FROM cars_data)",
    "SELECT count(DISTINCT T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country HAVING count(*)  >  2",
    "SELECT count(DISTINCT T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE (SELECT count(*) FROM car_makers AS T3 WHERE T3.Country  =  T1.CountryId)  >  2",
    "SELECT count(*) FROM cars_data WHERE Cylinders  >  6",
    "SELECT count(*) FROM cars_data WHERE Cylinders  >  6",
    "SELECT Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE Cylinders  =  4 ORDER BY Horsepower DESC LIMIT 1",
    "SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Cylinders  =  4 ORDER BY T1.Horsepower DESC LIMIT 1",
    "SELECT T2.MakeId ,  T2.Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.MakeId  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM cars_data) AND T1.Cylinders  <=  3",
    "SELECT T1.MakeId ,  T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  <  4 AND T2.Horsepower  >  (SELECT min(Horsepower) FROM cars_data)",
    "SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980",
    "SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980",
    "SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Id WHERE T1.Weight  <  3500 AND T4.FullName  !=  'Ford Motor Company'",
    "SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id JOIN car_makers AS T3 ON T1.Make  =  T3.Id WHERE T2.Weight  <  3500 AND T3.Maker  !=  'Ford'",
    "SELECT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T2.Id  IS  NULL",
    "SELECT CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId  =  car_makers.Country WHERE car_makers.Country IS NULL",
    "SELECT Id ,  Maker FROM car_makers WHERE Maker IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) >= 2) AND Id IN (SELECT Id FROM car_makers GROUP BY Id HAVING COUNT(*) > 3)",
    "SELECT Id, Maker FROM car_makers WHERE Id IN (SELECT Maker FROM (SELECT Maker, COUNT(Model) AS ModelCount FROM model_list GROUP BY Maker) AS T1 WHERE ModelCount >= 2) AND Id IN (SELECT MakeId FROM (SELECT MakeId, COUNT(Id) AS CarCount FROM car_names GROUP BY MakeId) AS T2 WHERE CarCount > 3)",
    "SELECT CountryId ,  CountryName FROM countries WHERE Country IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*)  >  3) OR Country IN (SELECT Maker FROM model_list WHERE Model  =  'fiat')",
    "SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT CountryId FROM car_makers GROUP BY CountryId HAVING COUNT(*) > 3) OR CountryId IN (SELECT CountryId FROM car_makers WHERE Maker IN (SELECT Maker FROM model_list WHERE Maker = 'Fiat'))",
    "SELECT Country FROM airlines WHERE Airline  =  'JetBlue Airways'",
    "SELECT Country FROM airlines WHERE Airline  =  'Jetblue Airways'",
    "SELECT Abbreviation FROM airlines WHERE Airline  =  'JetBlue Airways'",
    "SELECT Abbreviation FROM airlines WHERE Airline  =  'Jetblue Airways'",
    "SELECT Airline ,  Abbreviation FROM airlines WHERE Country  =  'USA'",
    "SELECT Airline ,  Abbreviation FROM airlines WHERE Country  =  'USA'",
    "SELECT AirportCode ,  AirportName FROM airports WHERE City  =  'Anthony'",
    "SELECT AirportCode ,  AirportName FROM airports WHERE City  =  'Anthony'",
    "SELECT count(*) FROM airlines",
    "SELECT count(*) FROM airlines",
    "SELECT count(*) FROM airports",
    "SELECT count(*) FROM airports",
    "SELECT count(*) FROM flights",
    "SELECT count(*) FROM flights",
    "SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'",
    "SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'",
    "SELECT count(*) FROM airlines WHERE Country  =  'USA'",
    "SELECT count(DISTINCT T1.uid) FROM airlines AS T1 JOIN airports AS T2 ON T2.Country  =  'USA'",
    "SELECT City ,  Country FROM airports WHERE AirportName  =  'Alton'",
    "SELECT City ,  Country FROM airports WHERE AirportName  =  'Alton'",
    "SELECT AirportName FROM airports WHERE AirportCode  =  'AKO'",
    "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'",
    "SELECT AirportName FROM airports WHERE City  =  'Aberdeen'",
    "SELECT AirportName FROM airports WHERE City  =  'Aberdeen'",
    "SELECT count(*) FROM flights WHERE SourceAirport  =  'APG'",
    "SELECT count(*) FROM flights WHERE SourceAirport  =  'APG'",
    "SELECT count(*) FROM flights WHERE DestAirport  =  'ATO'",
    "SELECT count(*) FROM flights WHERE DestAirport  =  'ATO'",
    "SELECT count(*) FROM flights WHERE SourceAirport  =  'Aberdeen'",
    "SELECT count(*) FROM flights WHERE SourceAirport  =  'ABR'",
    "SELECT count(*) FROM flights WHERE DestAirport  =  'ABR'",
    "SELECT count(*) FROM flights WHERE DestAirport  =  'Aberdeen'",
    "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  'Aberdeen' AND T3.City  =  'Ashley'",
    "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  'Aberdeen' AND T3.City  =  'Ashley'",
    "SELECT count(FlightNo) FROM flights WHERE Airline  =  'JetBlue Airways'",
    "SELECT count(*) FROM flights WHERE Airline  =  'JetBlue'",
    "SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.Abbreviation  =  'United Airlines' AND T3.AirportCode  =  'ASY'",
    "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.Airline  =  'United Airlines' AND T3.AirportName  =  'ASY'",
    "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.Airline  =  'United Airlines' AND T3.AirportCode  =  'AHD'",
    "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.Airline  =  'United Airlines' AND T3.AirportName  =  'AHD'",
    "SELECT count(FlightNo) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T1.Airline  =  'United Airlines' AND T2.City  =  'Aberdeen'",
    "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T1.Airline  =  'United Airlines' AND T3.City  =  'Aberdeen'",
    "SELECT City FROM airports JOIN flights ON AirportCode  =  DestAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "SELECT City FROM airports JOIN flights ON AirportCode  =  SourceAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1",
    "SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode GROUP BY T2.City ORDER BY count(T1.SourceAirport) DESC LIMIT 1",
    "SELECT AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport JOIN flights AS T3 ON T1.AirportCode  =  T3.DestAirport GROUP BY T1.AirportCode ORDER BY count(T2.SourceAirport) + count(T3.DestAirport) DESC LIMIT 1",
    "SELECT AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport JOIN flights AS T3 ON T1.AirportCode  =  T3.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "SELECT AirportCode FROM airports JOIN flights ON AirportCode  =  SourceAirport OR AirportCode  =  DestAirport GROUP BY AirportCode ORDER BY count(*) LIMIT 1",
    "SELECT AirportCode FROM airports JOIN flights ON AirportCode  =  SourceAirport OR AirportCode  =  DestAirport GROUP BY AirportCode ORDER BY count(*) ASC LIMIT 1",
    "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline ORDER BY count(*) DESC LIMIT 1",
    "SELECT Abbreviation ,  Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.uid ORDER BY count(*) LIMIT 1",
    "SELECT T1.Abbreviation ,  T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.uid ORDER BY count(*) LIMIT 1",
    "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  = 'AHD'",
    "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportCode  = 'AHD'",
    "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  = 'AHD'",
    "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  = 'AHD'",
    "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' AND T2.SourceAirport  =  'CVO'",
    "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' AND T2.SourceAirport  =  'CVO'",
    "SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport  =  'APG') EXCEPT SELECT Airline FROM flights WHERE SourceAirport  =  'APG'",
    "SELECT DISTINCT Airline FROM flights WHERE SourceAirport  =  'CVO' EXCEPT SELECT DISTINCT Airline FROM flights WHERE SourceAirport  =  'APG'",
    "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline HAVING count(*)  >=  10",
    "SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(FlightNo) >= 10)",
    "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(T2.FlightNo)  <  200",
    "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline HAVING count(*)  <  200",
    "SELECT FlightNo FROM flights WHERE Airline  =  'United Airlines'",
    "SELECT FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  'United Airlines'",
    "SELECT FlightNo FROM flights WHERE SourceAirport  =  'APG'",
    "SELECT FlightNo FROM flights WHERE SourceAirport  =  'APG'",
    "SELECT FlightNo FROM flights WHERE DestAirport  =  'APG'",
    "SELECT FlightNo FROM flights WHERE DestAirport  =  'APG'",
    "SELECT FlightNo FROM flights WHERE SourceAirport  =  'Aberdeen'",
    "SELECT FlightNo FROM flights WHERE SourceAirport  =  'ABR'",
    "SELECT FlightNo FROM flights WHERE DestAirport  =  'Aberdeen'",
    "SELECT FlightNo FROM flights WHERE DestAirport  =  'ABR'",
    "SELECT count(*) FROM flights WHERE DestAirport  =  'Aberdeen' OR DestAirport  =  'Abilene'",
    "SELECT count(*) FROM flights WHERE DestAirport  =  'ABR' OR DestAirport  =  'ABI'",
    "SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)",
    "SELECT * FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)",
    "SELECT count(*) FROM employee",
    "SELECT count(*) FROM employee",
    "SELECT Name FROM employee ORDER BY Age",
    "SELECT Name FROM employee ORDER BY Age",
    "SELECT count(*) ,  City FROM employee GROUP BY City",
    "SELECT count(Employee_ID) ,  City FROM employee GROUP BY City",
    "SELECT City FROM employee WHERE Age <30 GROUP BY City HAVING COUNT(*) > 1",
    "SELECT City FROM employee WHERE Age  <  30 GROUP BY City HAVING count(*)  >  1",
    "SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location",
    "SELECT count(Shop_ID) ,  Location FROM shop GROUP BY Location",
    "SELECT Manager_name ,  District FROM shop ORDER BY Number_products DESC LIMIT 1",
    "SELECT Manager_name ,  District FROM shop ORDER BY Number_products DESC LIMIT 1",
    "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "SELECT Name ,  Location ,  District FROM shop ORDER BY Number_products DESC",
    "SELECT Name ,  Location ,  District FROM shop ORDER BY Number_products DESC",
    "SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)",
    "SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)",
    "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.Employee_ID HAVING count(*)  = (SELECT max(count(*)) FROM evaluation GROUP BY Employee_ID)",
    "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Bonus  =  (SELECT max(Bonus) FROM evaluation)",
    "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Bonus  =  (SELECT max(Bonus) FROM evaluation)",
    "SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Employee_ID  IS NULL",
    "SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Employee_ID  IS NULL",
    "SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING count(T2.Employee_ID)  = (SELECT max(count(T3.Employee_ID)) FROM hiring AS T3 GROUP BY T3.Shop_ID)",
    "SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING count(T2.Employee_ID)  = (SELECT max(T3.count) FROM (SELECT count(T4.Employee_ID) as count FROM hiring AS T4 GROUP BY T4.Shop_ID) AS T3)",
    "SELECT Name FROM shop WHERE NOT EXISTS (SELECT * FROM hiring WHERE Shop_ID  = Shop_ID)",
    "SELECT Name FROM shop LEFT JOIN hiring ON Shop_ID  =  Shop_ID WHERE Employee_ID  IS NULL",
    "SELECT count(T1.Employee_ID) ,  T2.Name FROM shop AS T2 JOIN hiring AS T1 ON T2.Shop_ID  =  T1.Shop_ID GROUP BY T1.Shop_ID",
    "SELECT count(T1.Employee_ID) ,  T2.Name FROM shop AS T2 JOIN hiring AS T1 ON T2.Shop_ID  =  T1.Shop_ID GROUP BY T1.Shop_ID",
    "SELECT sum(Bonus) FROM evaluation",
    "SELECT sum(Bonus) FROM evaluation",
    "SELECT * FROM hiring",
    "SELECT * FROM hiring",
    "SELECT District FROM shop WHERE Number_products  <  3000 AND shop.District IN (SELECT District FROM shop WHERE Number_products  >  10000)",
    "SELECT District FROM shop WHERE Number_products  <  3000 AND Number_products  >  10000 GROUP BY District",
    "SELECT count(DISTINCT Location) FROM shop",
    "SELECT count(DISTINCT Location) FROM shop",
    "SELECT count(*) FROM Documents",
    "SELECT count(*) FROM Documents",
    "SELECT Document_ID ,  Document_Name ,  Document_Description FROM Documents",
    "SELECT Document_ID ,  Document_Name ,  Document_Description FROM Documents",
    "SELECT Document_Name ,  Template_ID FROM Documents WHERE Document_Description  LIKE  '%w%'",
    "SELECT Document_Name ,  Template_ID FROM Documents WHERE Document_Description  LIKE  '%w%'",
    "SELECT T1.Document_ID ,  T1.Template_ID ,  T2.Template_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T1.Document_Name  =  'Robbin CV'",
    "SELECT Documents.Document_ID, Templates.Template_ID, Ref_Template_Types.Template_Type_Description FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Documents.Document_Name  =  'Robbin CV'",
    "SELECT count(DISTINCT Template_ID) FROM Templates",
    "SELECT count(DISTINCT Template_ID) FROM Templates",
    "SELECT count(DISTINCT Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code  =  'PPT'",
    "SELECT count(DISTINCT Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code  =  'PPT'",
    "SELECT T1.Template_ID ,  count(T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID",
    "SELECT T1.Template_ID ,  count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID",
    "SELECT Template_ID ,  Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Template_ID ,  Template_Type_Code ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Template_ID ,  T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID ,  T1.Template_Type_Code HAVING count(*)  = (SELECT max(count(*)) FROM Templates AS T3 JOIN Documents AS T4 ON T3.Template_ID  =  T4.Template_ID GROUP BY T3.Template_ID ,  T3.Template_Type_Code)",
    "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING count(*)  >  1",
    "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING count(*)  >  1",
    "SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)",
    "SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)",
    "SELECT count(*) FROM Templates",
    "SELECT count(*) FROM Templates",
    "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates",
    "SELECT Templates.Template_ID ,  Templates.Version_Number ,  Ref_Template_Types.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code",
    "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types",
    "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types",
    "SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  'PP' OR Template_Type_Code  =  'PPT'",
    "SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  'PP' OR Template_Type_Code  =  'PPT'",
    "SELECT count(Template_ID) FROM Templates WHERE Template_Type_Code  =  'CV'",
    "SELECT count(Template_ID) FROM Templates WHERE Template_Type_Code  =  'CV'",
    "SELECT Version_Number ,  Template_Type_Code FROM Templates WHERE Version_Number  >  5",
    "SELECT Version_Number ,  Template_Type_Code FROM Templates WHERE Version_Number  >  5",
    "SELECT T1.Template_Type_Code ,  count(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code",
    "SELECT T1.Template_Type_Code ,  count(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code",
    "SELECT T2.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING count(*)  = (SELECT max(count(*)) FROM Templates GROUP BY Template_Type_Code)",
    "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING count(T2.Template_ID)  <  3",
    "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T2.Template_Type_Code HAVING count(*)  <  3",
    "SELECT min(Version_Number) ,  Template_Type_Code FROM Templates GROUP BY Template_Type_Code",
    "SELECT min(Version_Number) ,  Template_Type_Code FROM Templates GROUP BY Template_Type_Code",
    "SELECT Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base'",
    "SELECT Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base'",
    "SELECT Document_Name FROM Documents JOIN Templates ON Templates.Template_ID  =  Documents.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code  = 'BK'",
    "SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code  = 'BK'",
    "SELECT T1.Template_Type_Code ,  count(T2.Document_ID) FROM Ref_Template_Types AS T1 JOIN Documents AS T2 ON T1.Template_Type_Code  =  T2.Template_ID GROUP BY T1.Template_Type_Code",
    "SELECT T1.Template_Type_Code ,  count(T2.Document_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T3 ON T1.Template_Type_Code  =  T3.Template_Type_Code JOIN Documents AS T2 ON T2.Template_ID  =  T3.Template_ID GROUP BY T1.Template_Type_Code",
    "SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Template_Type_Code ORDER BY count(Document_ID) DESC LIMIT 1",
    "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_Type_Code  =  T3.Template_Type_Code GROUP BY T2.Template_Type_Code HAVING count(*)  = (SELECT max(count(*)) FROM Templates AS T4 JOIN Documents AS T5 ON T4.Template_Type_Code  =  T5.Template_Type_Code GROUP BY T4.Template_Type_Code)",
    "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates)",
    "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates)",
    "SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types",
    "SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types",
    "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  = 'AD'",
    "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  =  'AD'",
    "SELECT Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Template_Type_Code  =  Template_Type_Code WHERE Template_Type_Description  =  'Book'",
    "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description  =  'Book'",
    "SELECT DISTINCT T2.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID  =  T3.Template_ID",
    "SELECT DISTINCT T2.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID  =  T3.Template_ID",
    "SELECT Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Template_Type_Description  =  'Presentation'",
    "SELECT Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  = 'Presentation'",
    "SELECT count(*) FROM Paragraphs",
    "SELECT count(*) FROM Paragraphs",
    "SELECT count(Paragraph_ID) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Summer Show'",
    "SELECT count(Paragraph_ID) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Summer Show'",
    "SELECT * FROM Paragraphs WHERE Paragraph_Text  =  'Korea '",
    "SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",
    "SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'",
    "SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'",
    "SELECT Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  = 'Customer reviews'",
    "SELECT Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Customer reviews'",
    "SELECT T1.Document_ID ,  count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID",
    "SELECT T1.Document_ID ,  count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID",
    "SELECT T1.Document_ID, T1.Document_Name, count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name",
    "SELECT T1.Document_ID, T1.Document_Name, count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID",
    "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2",
    "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2",
    "SELECT T1.Document_ID ,  T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ,  T1.Document_Name ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Document_ID ,  T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ,  T1.Document_Name HAVING count(*)  = (SELECT max(count(*)) FROM Paragraphs GROUP BY Document_ID)",
    "SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID GROUP BY Paragraphs.Document_ID ORDER BY count(*) ASC LIMIT 1",
    "SELECT Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T2.Document_ID ORDER BY count(*) ASC LIMIT 1",
    "SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T2.Document_ID HAVING count(*)  =  1 AND count(*)  =  2",
    "SELECT Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID HAVING count(*)  >=  1 AND count(*)  <=  2",
    "SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Paragraph_Text  =  'Brazil' AND T2.Paragraph_Text  =  'Ireland'",
    "SELECT DISTINCT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Paragraph_Text  =  'Brazil' AND T2.Paragraph_Text  =  'Ireland'",
    "SELECT count(*) FROM teacher",
    "SELECT count(*) FROM teacher",
    "SELECT Name FROM teacher ORDER BY Age",
    "SELECT Name FROM teacher ORDER BY Age ASC",
    "SELECT Age, Hometown FROM teacher",
    "SELECT Age ,  Hometown FROM teacher",
    "SELECT Name FROM teacher WHERE Hometown != ' Little Lever Urban District'",
    "SELECT Name FROM teacher WHERE Hometown !=  ' Little Lever Urban District'",
    "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown",
    "SELECT Hometown ,  count(Teacher_ID) FROM teacher GROUP BY Hometown",
    "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 1",
    "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 1",
    "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2",
    "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID",
    "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID",
    "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID ORDER BY T1.Name",
    "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID ORDER BY T1.Name",
    "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math'",
    "SELECT DISTINCT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math'",
    "SELECT T1.Name ,  count(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID",
    "SELECT T1.Name ,  count(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID",
    "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING count(*)  >=  2",
    "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM (SELECT Teacher_ID, COUNT(Course_ID) AS num_courses FROM course_arrange GROUP BY Teacher_ID) AS T WHERE num_courses  >=  2)",
    "SELECT DISTINCT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Teacher_ID  IS  NULL",
    "SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT DISTINCT Teacher_ID FROM course_arrange)",
    "SELECT count(*) FROM visitor WHERE Age  <  30",
    "SELECT Name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "SELECT avg(Age) FROM visitor WHERE Level_of_membership  <=  4",
    "SELECT T1.Name ,  T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T1.Level_of_membership  >  4 ORDER BY T1.Age DESC",
    "SELECT Museum_ID ,  Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1",
    "SELECT AVG (Num_of_Staff) FROM museum WHERE Open_Year  <  2009",
    "SELECT Open_Year ,  Num_of_Staff FROM museum WHERE Name  =  'Plaza Museum'",
    "SELECT Name FROM museum WHERE Num_of_Staff  >  (SELECT min(Num_of_Staff) FROM museum) AND Open_Year  >  2010",
    "SELECT T1.ID ,  T1.Name ,  T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T2.visitor_ID HAVING count(*)  >  1",
    "SELECT T1.ID ,  T1.Name ,  T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Total_spent  =  (SELECT max(Total_spent) FROM visit)",
    "SELECT T1.Museum_ID ,  T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID  =  T2.Museum_ID GROUP BY T1.Museum_ID ,  T1.Name HAVING count(T2.visitor_ID)  = (SELECT max(T3.count) FROM (SELECT count(visitor_ID) as count FROM visit GROUP BY Museum_ID) as T3)",
    "SELECT Name FROM museum LEFT JOIN visit ON Museum_ID = Museum_ID WHERE visitor_ID IS NULL LIMIT 1",
    "SELECT T1.Name ,  T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T2.visitor_ID ORDER BY sum(T2.Num_of_Ticket) DESC LIMIT 1",
    "SELECT AVG (Num_of_Ticket) ,  MAX (Num_of_Ticket) FROM visit",
    "SELECT sum(Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID WHERE T2.Level_of_membership  =  1",
    "SELECT Name FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  <  2009) INTERSECT SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2011))",
    "SELECT count(DISTINCT T1.ID) FROM visitor AS T1 LEFT JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID LEFT JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  <=  2010 GROUP BY T2.visitor_ID HAVING count(T2.visitor_ID)  =  0",
    "SELECT count(*) FROM museum WHERE Open_Year  >  2013 OR Open_Year  <  2008",
    "SELECT count(*) FROM players",
    "SELECT count(*) FROM players",
    "SELECT count(*) FROM matches",
    "SELECT count(*) FROM matches",
    "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "SELECT avg(T1.winner_age) ,  avg(T1.loser_age) FROM (SELECT (YEAR(CURRENT_DATE) - YEAR(T2.birth_date)) AS winner_age , (YEAR(CURRENT_DATE) - YEAR(T3.birth_date)) AS loser_age FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id JOIN players AS T3 ON T1.loser_id  =  T3.player_id) AS T4",
    "SELECT avg(2019 - year(birth_date)) FROM players WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)",
    "SELECT avg(rank) FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id",
    "SELECT avg(ranking) FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id",
    "SELECT max(loser_rank) FROM matches",
    "SELECT min(rank) FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.loser_id",
    "SELECT COUNT(DISTINCT country_code) FROM players",
    "SELECT count(DISTINCT country_code) FROM players",
    "SELECT count(DISTINCT T2.last_name) FROM players AS T1 JOIN matches AS T3 ON T1.player_id  =  T3.loser_id WHERE T3.loser_id  =  T1.player_id",
    "SELECT COUNT (DISTINCT loser_name) FROM matches",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.year  =  2013 AND T2.year  =  2016",
    "SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.year  =  2013 AND T2.year  =  2016",
    "SELECT count(*) FROM matches WHERE year  = 2013 OR year  = 2016",
    "SELECT count(*) FROM matches WHERE year  =  2013 OR year  =  2016",
    "SELECT country_code ,  first_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_id IN (SELECT tourney_id FROM matches WHERE tourney_name  =  'WTA Championships') AND tourney_id IN (SELECT tourney_id FROM matches WHERE tourney_name  =  'Australian Open'))",
    "SELECT first_name ,  country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name  =  'WTA Championships') AND player_id IN (SELECT winner_id FROM matches WHERE tourney_name  =  'Australian Open')",
    "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "SELECT CONCAT(first_name,' ',last_name) as full_name FROM players ORDER BY birth_date",
    "SELECT first_name ,  last_name FROM players WHERE hand  =  'left' OR hand  =  'L' ORDER BY birth_date",
    "SELECT first_name || ' ' || last_name as full_name FROM players WHERE hand  =  'left' ORDER BY birth_date",
    "SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.tours  =  (SELECT max(tours) FROM rankings)",
    "SELECT first_name ,  country_code FROM players WHERE tours  =  (SELECT max(tours) FROM rankings)",
    "SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1",
    "SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.first_name ,  T1.last_name ,  sum(T3.ranking_points) FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id JOIN rankings AS T3 ON T1.player_id  =  T3.player_id GROUP BY T2.winner_id ORDER BY sum(T3.ranking_points) DESC LIMIT 1",
    "SELECT T1.first_name ,  T1.last_name ,  sum(T3.ranking_points) FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id JOIN rankings AS T3 ON T1.player_id  =  T3.player_id GROUP BY T2.winner_id ORDER BY count(T2.match_num) DESC LIMIT 1",
    "SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id JOIN matches AS T3 ON T1.player_id  =  T3.winner_id WHERE T3.tourney_name  =  'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1",
    "SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id JOIN matches AS T3 ON T1.player_id  =  T3.winner_id WHERE T3.tourney_name  =  'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1",
    "SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.minutes  =  (SELECT max(minutes) FROM matches) UNION SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.loser_id WHERE T2.minutes  =  (SELECT max(minutes) FROM matches)",
    "SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.minutes  =  (SELECT max(minutes) FROM matches) UNION SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.loser_id WHERE T2.minutes  =  (SELECT max(minutes) FROM matches)",
    "SELECT avg(T2.ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "SELECT T1.first_name ,  avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "SELECT sum(T2.ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id",
    "SELECT T1.first_name ,  sum(T2.ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "SELECT country_code FROM players GROUP BY country_code ORDER BY count(player_id) DESC LIMIT 1",
    "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50",
    "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "SELECT count(*) ,  year FROM matches GROUP BY year",
    "SELECT count(*) ,  year FROM matches GROUP BY year",
    "SELECT T1.first_name ,  T1.last_name ,  T2.rank FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.rank  <=  3 ORDER BY T1.birth_date DESC LIMIT 3",
    "SELECT T1.first_name ,  T1.last_name ,  T2.rank FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T1.birth_date ASC LIMIT 3",
    "SELECT count(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T1.tourney_name  = 'WTA Championships' AND T2.hand  = 'left'",
    "SELECT count(T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T1.winner_hand  =  'left' AND T1.tourney_name  =  'WTA Championships'",
    "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking_points  = (SELECT max(ranking_points) FROM rankings)",
    "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking_points  = (SELECT max(ranking_points) FROM rankings)",
    "SELECT hand ,  count(*) FROM players GROUP BY hand",
    "SELECT hand ,  count(*) FROM players GROUP BY hand",
    "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "SELECT name ,  date ,  result FROM battle",
    "SELECT T1.date ,  max(T2.killed) as max_kill ,  min(T2.killed) as min_kill FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.date",
    "SELECT avg(injured) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id JOIN battle AS T3 ON T2.lost_in_battle  =  T3.id",
    "SELECT killed ,  injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "SELECT name ,  result FROM battle WHERE bulgarian_commander  <>  'Boril'",
    "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id JOIN ship AS T3 ON T1.id  =  T3.lost_in_battle GROUP BY T2.caused_by_ship_id HAVING sum(T2.killed)  >  10",
    "SELECT T1.id ,  T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T2.caused_by_ship_id ORDER BY sum(T2.injured) DESC LIMIT 1",
    "SELECT DISTINCT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "SELECT count(DISTINCT result) FROM battle",
    "SELECT count(DISTINCT T1.id) FROM battle AS T1 WHERE NOT EXISTS (SELECT * FROM ship AS T2 WHERE T2.tonnage  =  225 AND T2.lost_in_battle  =  T1.id)",
    "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' AND T2.disposition_of_ship  =  'lost' AND T3.name  =  'HMS Atalanta' AND T3.disposition_of_ship  =  'lost'",
    "SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  !=  'English Channel'",
    "SELECT note FROM death WHERE note LIKE '%East%'",
    "SELECT line_1 ,  line_2 FROM Addresses",
    "SELECT line_1 ,  line_2 FROM Addresses",
    "SELECT count(*) FROM Courses",
    "SELECT count(*) FROM Courses",
    "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "SELECT course_description FROM Courses WHERE course_name  LIKE  '%math%'",
    "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "SELECT T1.department_name ,  T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(T2.degree_program_id) DESC LIMIT 1",
    "SELECT T1.department_name ,  T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "SELECT count(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id",
    "SELECT count(DISTINCT degree_program_id) FROM Degree_Programs",
    "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "SELECT count(DISTINCT degree_program_id) FROM Degree_Programs",
    "SELECT count(degree_program_id) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  = 'engineering'",
    "SELECT count(degree_program_id) FROM Degree_Programs WHERE department_id  =  'engineering'",
    "SELECT section_name ,  section_description FROM Sections",
    "SELECT section_name ,  section_description FROM Sections",
    "SELECT T2.course_name ,  T2.course_id FROM SECTION AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "SELECT T1.course_id ,  T1.course_name FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <  2",
    "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "SELECT T1.semester_id ,  T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ,  T1.semester_name ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.first_name, T1.student_id, T2.semester_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Semesters AS T3 ON T2.semester_id  =  T3.semester_id GROUP BY T2.semester_id ORDER BY count(T2.student_id) DESC LIMIT 1",
    "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_program_id  =  2 AND T2.semester_id  =  1 GROUP BY T1.student_id",
    "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE (SELECT count(*) FROM Student_Enrolment AS T3 WHERE T3.student_id  =  T1.student_id AND T3.semester_id  =  1)  =  2 GROUP BY T1.student_id",
    "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  = 'Bachelor'",
    "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Degree_Programs AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_summary_name  =  'Bachelors'",
    "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(T2.student_id) DESC LIMIT 1",
    "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id HAVING count(*)  = (SELECT max(count(*)) FROM Student_Enrolment GROUP BY degree_program_id)",
    "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(T2.student_id) DESC LIMIT 1",
    "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, count(T2.student_enrolment_id) as enrollments FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollments DESC LIMIT 1",
    "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id , count(T2.student_enrolment_id) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(T2.student_enrolment_id) DESC LIMIT 1",
    "SELECT DISTINCT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.semester_id  IS  NULL",
    "SELECT Semesters.semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id WHERE Student_Enrolment.semester_id  IS NULL",
    "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1",
    "SELECT DISTINCT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id LEFT JOIN Student_Enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  = 'North Carolina' AND T3.student_id  IS NULL",
    "SELECT DISTINCT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id LEFT JOIN Student_Enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  = 'North Carolina' AND T3.student_id  IS NULL",
    "SELECT transcript_date ,  transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id, COUNT(*) FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)",
    "SELECT transcript_date ,  transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id, COUNT(*) FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)",
    "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "SELECT first_name ,  middle_name ,  last_name FROM Students WHERE student_id  = (SELECT min(student_id) FROM Student_Enrolment)",
    "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered LIMIT 1",
    "SELECT first_name ,  middle_name ,  last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1",
    "SELECT first_name ,  middle_name ,  last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left LIMIT 1",
    "SELECT first_name FROM Students WHERE permanent_address_id  !=  current_address_id",
    "SELECT first_name FROM Students WHERE permanent_address_id  !=  current_address_id LIMIT 1",
    "SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3, T2.city, T2.zip_postcode, T2.state_province_county, T2.country, T2.other_address_details FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id GROUP BY T1.current_address_id ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id OR T1.address_id  =  T2.permanent_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "SELECT AVG(transcript_date) FROM Transcripts",
    "SELECT AVG (transcript_date) FROM Transcripts",
    "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "SELECT count(*) FROM Transcripts",
    "SELECT count(*) FROM Transcripts",
    "SELECT max(transcript_date) FROM Transcripts",
    "SELECT max(transcript_date) FROM Transcripts",
    "SELECT count(DISTINCT T2.transcript_id) ,  T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id  =  T2.student_course_id GROUP BY T1.student_course_id",
    "SELECT count(DISTINCT T1.student_course_id) as count, T2.student_enrolment_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id  =  T2.student_enrolment_id GROUP BY T1.course_id ORDER BY count DESC LIMIT 1",
    "SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "SELECT transcript_date ,  transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE student_id LIKE '%Master%') AND semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE student_id LIKE '%Bachelor%')",
    "SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Masters') AND semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Bachelors')",
    "SELECT count(DISTINCT T1.current_address_id) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id",
    "SELECT DISTINCT * FROM Addresses WHERE address_id  IN (SELECT current_address_id FROM Students) OR address_id  IN (SELECT permanent_address_id FROM Students)",
    "SELECT * FROM Students ORDER BY last_name DESC",
    "SELECT * FROM Students ORDER BY last_name DESC",
    "SELECT section_name ,  section_description FROM Sections WHERE section_id  =  'h'",
    "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' OR T1.cell_mobile_number  =  '09700166582'",
    "SELECT DISTINCT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' OR T1.cell_mobile_number  =  '09700166582'",
    "SELECT Title FROM Cartoon ORDER BY Title",
    "SELECT Title FROM Cartoon ORDER BY Title",
    "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones'",
    "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones'",
    "SELECT count(*) FROM Cartoon WHERE Written_by  =  'Joseph Kuhr'",
    "SELECT count(*) FROM Cartoon WHERE Written_by  =  'Joseph Kuhr'",
    "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date",
    "SELECT T1.Title, T1.Directed_by FROM Cartoon AS T1 JOIN TV_series AS T2 ON T1.Channel  =  T2.Channel WHERE T2.Air_Date  =  T1.Original_air_date ORDER BY T2.Air_Date ASC",
    "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones' OR Directed_by  =  'Brandon Vietti'",
    "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones' OR Directed_by  =  'Brandon Vietti'",
    "SELECT Country ,  count(id) FROM TV_Channel GROUP BY Country ORDER BY count(id) DESC LIMIT 1",
    "SELECT Country ,  count(id) FROM TV_Channel GROUP BY Country ORDER BY count(id) DESC LIMIT 1",
    "SELECT COUNT (DISTINCT series_name) ,  COUNT (DISTINCT Content) FROM TV_Channel",
    "SELECT COUNT (DISTINCT series_name) ,  COUNT (DISTINCT Content) FROM TV_Channel",
    "SELECT Content FROM TV_Channel WHERE series_name  =  'Sky Radio'",
    "SELECT Content FROM TV_Channel WHERE Series_name  =  'Sky Radio'",
    "SELECT Package_Option FROM TV_Channel WHERE series_name  =  'Sky Radio'",
    "SELECT Package_Option FROM TV_Channel WHERE series_name  =  'Sky Radio'",
    "SELECT count(*) FROM TV_Channel WHERE Language  =  'English'",
    "SELECT count(*) FROM TV_Channel WHERE Language  =  'English'",
    "SELECT Language ,  count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) LIMIT 1",
    "SELECT Language ,  count(id) FROM TV_Channel GROUP BY Language ORDER BY count(id) LIMIT 1",
    "SELECT Language ,  count(id) FROM TV_Channel GROUP BY Language",
    "SELECT Language ,  count(id) FROM TV_Channel GROUP BY Language",
    "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  =  'The Rise of the Blue Beetle!'",
    "SELECT series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  = 'The Rise of the Blue Beetle'",
    "SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  = 'Sky Radio'",
    "SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  'Sky Radio'",
    "SELECT Episode FROM TV_series ORDER BY Rating",
    "SELECT Episode FROM TV_series ORDER BY Rating",
    "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",
    "SELECT Title, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",
    "SELECT min(Share) ,  max(Share) FROM TV_series",
    "SELECT max(Share) ,  min(Share) FROM TV_series",
    "SELECT Air_Date FROM TV_series WHERE Episode  =  'A Love of a Lifetime'",
    "SELECT Air_Date FROM TV_series WHERE Title  =  'A Love of a Lifetime'",
    "SELECT Weekly_Rank FROM TV_series WHERE Episode  =  'A Love of a Lifetime'",
    "SELECT Weekly_Rank FROM TV_series WHERE Title  =  'A Love of a Lifetime'",
    "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  = 'A Love of a Lifetime'",
    "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'A Love of a Lifetime'",
    "SELECT Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  'Sky Radio'",
    "SELECT Episode FROM TV_series WHERE series_name  =  'Sky Radio'",
    "SELECT count(*) ,  Directed_by FROM Cartoon GROUP BY Directed_by",
    "SELECT Directed_by, count(*) FROM Cartoon GROUP BY Directed_by",
    "SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1",
    "SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1",
    "SELECT Package_Option ,  series_name FROM TV_Channel WHERE Hight_definition_TV  =  True",
    "SELECT Package_Option ,  series_name FROM TV_Channel WHERE Hight_definition_TV  =  True",
    "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  'Todd Casey'",
    "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  'Todd Casey'",
    "SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT id FROM Cartoon WHERE Written_by  =  'Todd Casey')",
    "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  !=  'Todd Casey' OR T2.Written_by  IS NULL",
    "SELECT T1.series_name ,  T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  'Ben Jones' OR T2.Directed_by  =  'Michael Chang'",
    "SELECT T1.series_name ,  T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel JOIN TV_series AS T3 ON T1.id  =  T3.Channel WHERE T2.Directed_by  =  'Ben Jones' OR T2.Directed_by  =  'Michael Chang'",
    "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language  !=  'English'",
    "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language  !=  'English'",
    "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING count(*)  >  2)",
    "SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(*)  >  2",
    "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT id FROM Cartoon WHERE Directed_by  =  'Ben Jones')",
    "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT id FROM Cartoon WHERE Directed_by  =  'Ben Jones')",
    "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT id FROM Cartoon WHERE Directed_by  =  'Ben Jones')",
    "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  'Ben Jones')",
    "SELECT count(*) FROM poker_player",
    "SELECT count(*) FROM poker_player",
    "SELECT T2.Name ,  T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC",
    "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "SELECT Final_Table_Made ,  Best_Finish FROM poker_player ORDER BY Final_Table_Made DESC",
    "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "SELECT avg(Earnings) FROM poker_player",
    "SELECT AVG(Earnings) FROM poker_player",
    "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "SELECT max(Final_Table_Made) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE Earnings  <  200000",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Final_Table_Made  >  0 ORDER BY T2.Final_Table_Made",
    "SELECT T2.Name FROM people AS T2 JOIN poker_player AS T1 ON T2.People_ID  =  T1.People_ID WHERE T1.Final_Table_Made  >  0 ORDER BY T1.Final_Table_Made",
    "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  = (SELECT min(Earnings) FROM poker_player)",
    "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  = (SELECT min(Earnings) FROM poker_player)",
    "SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID WHERE people.Height  =  (SELECT max(Height) FROM people)",
    "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  =  (SELECT max(Height) FROM people)",
    "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200",
    "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "SELECT Nationality ,  count(*) FROM people GROUP BY Nationality",
    "SELECT Nationality ,  count(*) FROM people GROUP BY Nationality",
    "SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1",
    "SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1",
    "SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >=  2",
    "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID)  >=  2",
    "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "SELECT Name ,  Birth_Date FROM people ORDER BY Name",
    "SELECT Name FROM people WHERE Nationality != 'Russia'",
    "SELECT Name FROM people WHERE Nationality !=  'Russia'",
    "SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID  =  poker_player.People_ID WHERE poker_player.Poker_Player_ID  IS  NULL",
    "SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Poker_Player_ID  IS NULL",
    "SELECT count(DISTINCT Nationality) FROM people",
    "SELECT count(DISTINCT Nationality) FROM people",
    "SELECT count(DISTINCT state) FROM AREA_CODE_STATE",
    "SELECT contestant_number ,  contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",
    "SELECT vote_id ,  phone_number ,  state FROM VOTES",
    "SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE",
    "SELECT max(created) FROM VOTES WHERE state  =  'CA'",
    "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name  !=  'Jessie Alloway'",
    "SELECT DISTINCT T2.state ,  T1.created FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state  =  T2.state",
    "SELECT T1.contestant_number ,  T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T2.contestant_number HAVING count(*)  >=  2",
    "SELECT T1.contestant_number ,  T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(T2.contestant_number) ASC LIMIT 1",
    "SELECT count(*) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state  =  T2.state WHERE T1.state  =  'NY' OR T1.state  =  'CA'",
    "SELECT count(DISTINCT T1.contestant_number) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.contestant_number  IS  NULL",
    "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state GROUP BY T2.state HAVING count(*)  = (SELECT max(count(*)) FROM VOTES GROUP BY state)",
    "SELECT T1.created ,  T2.state ,  T1.phone_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state  =  T2.state JOIN CONTESTANTS AS T3 ON T1.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Tabatha Gehling'",
    "SELECT DISTINCT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.contestant_name  =  'Tabatha Gehling' AND T1.contestant_number IN ( SELECT T3.contestant_number FROM CONTESTANTS AS T3 WHERE T3.contestant_name  =  'Kelly Clauss' )",
    "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'",
    "SELECT Name FROM country WHERE IndepYear  >  1950",
    "SELECT Name FROM country WHERE IndepYear  >  1950",
    "SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic'",
    "SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic'",
    "SELECT sum(SurfaceArea) FROM country WHERE Region  =  'Caribbean'",
    "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Caribbean'",
    "SELECT Continent FROM country WHERE Name  =  'Anguilla'",
    "SELECT Continent FROM country WHERE Name  =  'Anguilla'",
    "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  = 'Kabul'",
    "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  = 'Kabul'",
    "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1",
    "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1",
    "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil'",
    "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil'",
    "SELECT Region ,  Population FROM country WHERE Name  =  'Angola'",
    "SELECT Region ,  Population FROM country WHERE Name  =  'Angola'",
    "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  'Central Africa'",
    "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Central Africa'",
    "SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1",
    "SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1",
    "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'",
    "SELECT count(T1.ID) ,  max(T1.GNP) FROM country AS T1 WHERE T1.Continent  =  'Asia'",
    "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic'",
    "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic'",
    "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'",
    "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'",
    "SELECT count(ID) FROM city WHERE District  =  'Gelderland'",
    "SELECT sum(Population) FROM city WHERE District  =  'Gelderland' AND CountryCode  IN (SELECT Code FROM country WHERE Name  =  'Netherlands')",
    "SELECT AVG (GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  'US Territory'",
    "SELECT AVG (GNP) ,  SUM (Population) FROM country WHERE Continent  =  'North America'",
    "SELECT count(DISTINCT Language) FROM countrylanguage",
    "SELECT count(DISTINCT Language) FROM countrylanguage",
    "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa'",
    "SELECT count(DISTINCT T1.GovernmentForm) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  = 'Africa'",
    "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  = 'Aruba'",
    "SELECT count(DISTINCT T1.Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Aruba'",
    "SELECT count(Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Afghanistan' AND T1.IsOfficial  =  'True'",
    "SELECT count(Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Afghanistan' AND T1.IsOfficial  =  'T'",
    "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent HAVING count(DISTINCT T2.Language)  >  (SELECT count(DISTINCT Language) FROM countrylanguage) ORDER BY count(DISTINCT T2.Language) DESC LIMIT 1",
    "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY count(T2.CountryCode) DESC LIMIT 1",
    "SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 WHERE T1.Language  =  'English' INTERSECT SELECT COUNT(DISTINCT T2.CountryCode) FROM countrylanguage AS T2 WHERE T2.Language  =  'Dutch'",
    "SELECT count(DISTINCT T1.Code) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.Language  =  'Dutch'",
    "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'French')",
    "SELECT Name FROM country WHERE Name IN (SELECT Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE Language  =  'English') AND Name IN (SELECT Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE Language  =  'French')",
    "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'official' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French' AND T2.IsOfficial  =  'official'",
    "SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.Language  =  'French'",
    "SELECT count(DISTINCT Continent) FROM country JOIN countrylanguage ON Code = CountryCode WHERE Language  =  'Chinese'",
    "SELECT count(DISTINCT T1.Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese'",
    "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch'",
    "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch' OR T2.Language  =  'English'",
    "SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch'",
    "SELECT DISTINCT Name FROM country WHERE Code IN (SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language  =  'English') UNION SELECT DISTINCT Name FROM country WHERE Code IN (SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language  =  'Dutch')",
    "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Continent  =  'Asia' ORDER BY Percentage DESC LIMIT 1",
    "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Continent  =  'Asia' GROUP BY Language ORDER BY count(*) DESC LIMIT 1",
    "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm  =  'Republic') GROUP BY Language HAVING count(*)  =  1",
    "SELECT Language FROM countrylanguage WHERE Language NOT IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING count(*) > 1) AND CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic')",
    "SELECT Name FROM city JOIN countrylanguage ON city.CountryCode  =  countrylanguage.CountryCode WHERE Population  =  (SELECT max(Population) FROM city) AND Language  =  'English'",
    "SELECT Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' ORDER BY T1.Population DESC LIMIT 1",
    "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1",
    "SELECT Name ,  Population ,  LifeExpectancy FROM country JOIN countrylanguage ON Code  =  CountryCode WHERE Language  =  'Asian' ORDER BY Population DESC LIMIT 1",
    "SELECT avg(LifeExpectancy) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  !=  'English' OR T2.IsOfficial  !=  'false'",
    "SELECT avg(LifeExpectancy) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  !=  'English' OR T2.IsOfficial  !=  'false'",
    "SELECT sum(Population) FROM city WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English')",
    "SELECT sum(Population) FROM city WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English')",
    "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE HeadOfState  =  'Beatrix' AND IsOfficial  =  'T'",
    "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE HeadOfState  =  'Beatrix' AND IsOfficial  =  'T'",
    "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.IndepYear  <  1930 AND T2.IsOfficial  =  'official'",
    "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.IndepYear  <  1930",
    "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT max(SurfaceArea) FROM country WHERE Continent  =  'Europe')",
    "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT max(SurfaceArea) FROM country WHERE Continent  =  'Europe')",
    "SELECT Name FROM country WHERE Continent  =  'Africa' AND Population  <  (SELECT max(Population) FROM country WHERE Continent  =  'Asia')",
    "SELECT Name FROM country WHERE Continent  =  'Africa' AND Population  <  (SELECT max(Population) FROM country WHERE Continent  =  'Asia')",
    "SELECT Name FROM country WHERE Continent  =  'Asia' AND Population  >  (SELECT max(Population) FROM country WHERE Continent  =  'Africa')",
    "SELECT Name FROM country WHERE Continent  =  'Asia' AND Population  >  (SELECT max(Population) FROM country WHERE Continent  =  'Africa')",
    "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English')",
    "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English')",
    "SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  !=  'English' AND T2.IsOfficial  =  'F'",
    "SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  !=  'English' AND T2.IsOfficial  =  0",
    "SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  !=  'English' AND T1.GovernmentForm  !=  'Republic'",
    "SELECT Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  !=  'English' AND T1.GovernmentForm  !=  'Republic'",
    "SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent  =  'Europe') AND CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English' AND IsOfficial  =  'F')",
    "SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent  =  'Europe') AND CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English' AND IsOfficial  =  'T')",
    "SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Asia' AND T3.Language  =  'Chinese' AND T3.IsOfficial  =  'True'",
    "SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Asia' AND T3.Language  =  'Chinese' AND T3.IsOfficial  =  1",
    "SELECT Name ,  IndepYear ,  SurfaceArea FROM country ORDER BY Population LIMIT 1",
    "SELECT Name ,  IndepYear ,  SurfaceArea FROM country ORDER BY Population LIMIT 1",
    "SELECT Population ,  Name ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "SELECT Name ,  Population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "SELECT T1.Name ,  count(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING count(T2.Language)  >=  3",
    "SELECT T1.Name ,  count(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING count(T2.Language)  >  2",
    "SELECT District ,  count(ID) FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "SELECT District ,  count(Name) FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "SELECT GovernmentForm, sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "SELECT GovernmentForm ,  sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72",
    "SELECT Continent ,  sum(Population) ,  avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "SELECT count(*) FROM country WHERE Continent  =  'Asia'",
    "SELECT count(*) FROM country WHERE Continent  =  'Asia'",
    "SELECT Name FROM country WHERE Continent  =  'Europe' AND Population  =  80000",
    "SELECT Name FROM country WHERE Continent  =  'Europe' AND Population  =  80000",
    "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000",
    "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000",
    "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(CountryCode) DESC LIMIT 1",
    "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(CountryCode) DESC LIMIT 1",
    "SELECT Language FROM countrylanguage WHERE Percentage  = (SELECT max(Percentage) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Population  >  (SELECT max(Population) FROM country)) GROUP BY CountryCode",
    "SELECT T1.Code,  T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T2.CountryCode HAVING T2.Percentage  =  100",
    "SELECT count(DISTINCT T1.Name) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Spanish' AND T2.Percentage  =  (SELECT max(Percentage) FROM countrylanguage WHERE Language  =  'Spanish')",
    "SELECT count(DISTINCT T1.Code) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Spanish' AND T2.IsOfficial  =  'True'",
    "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Spanish' ORDER BY T2.Percentage DESC LIMIT 1",
    "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Spanish' AND T2.IsOfficial  =  'T'",
    "SELECT count(*) FROM conductor",
    "SELECT count(*) FROM conductor",
    "SELECT Name FROM conductor ORDER BY Age",
    "SELECT Name FROM conductor ORDER BY Age",
    "SELECT Name FROM conductor WHERE Nationality  <>  'USA'",
    "SELECT Name FROM conductor WHERE Nationality  !=  'USA'",
    "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "SELECT AVG (Attendance) FROM show",
    "SELECT AVG(Attendance) FROM show",
    "SELECT max(Share) as max_share, min(Share) as min_share FROM performance WHERE Type  !=  'Live final'",
    "SELECT max(Share) as max_share, min(Share) as min_share FROM performance WHERE Type  !=  'Live final'",
    "SELECT count(DISTINCT Nationality) FROM conductor",
    "SELECT count(DISTINCT Nationality) FROM conductor",
    "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING count(*)  >  1",
    "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING count(*)  >  1",
    "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Year_of_Founded  >  2008",
    "SELECT DISTINCT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Year_of_Founded  >  2008",
    "SELECT Record_Company ,  count(Orchestra_ID) FROM orchestra GROUP BY Record_Company",
    "SELECT count(*) ,  Record_Company FROM orchestra GROUP BY Record_Company",
    "SELECT Major_Record_Format, COUNT(Major_Record_Format) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(Major_Record_Format) ASC",
    "SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC",
    "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1",
    "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(Orchestra_ID) DESC LIMIT 1",
    "SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID WHERE performance.Orchestra_ID  IS NULL",
    "SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID WHERE performance.Orchestra_ID  IS NULL",
    "SELECT T1.Record_Company FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID  =  T3.Orchestra_ID JOIN show AS T4 ON T3.Performance_ID  =  T4.Performance_ID WHERE T1.Year_of_Founded  <  2003 OR T1.Year_of_Founded  >  2003",
    "SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <  2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >  2003",
    "SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD'",
    "SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD'",
    "SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T1.Year_of_Founded HAVING count(*)  >  1",
    "SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID  =  T3.Orchestra_ID JOIN show AS T4 ON T3.Performance_ID  =  T4.Performance_ID GROUP BY T1.Conductor_ID HAVING count(*)  >  1",
    "SELECT count(*) FROM Highschooler",
    "SELECT count(*) FROM Highschooler",
    "SELECT name ,  grade FROM Highschooler",
    "SELECT name ,  grade FROM Highschooler",
    "SELECT grade FROM Highschooler",
    "SELECT grade FROM Highschooler",
    "SELECT grade FROM Highschooler WHERE name  =  'Kyle'",
    "SELECT grade FROM Highschooler WHERE name  =  'Kyle'",
    "SELECT name FROM Highschooler WHERE grade  =  10",
    "SELECT name FROM Highschooler WHERE grade  =  10",
    "SELECT ID FROM Highschooler WHERE name  =  'Kyle'",
    "SELECT ID FROM Highschooler WHERE name  =  'Kyle'",
    "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "SELECT T1.ID ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID",
    "SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID",
    "SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID",
    "SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id OR T1.ID  =  T2.friend_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID HAVING count(T2.friend_id)  >=  3",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id OR T1.ID  =  T2.friend_id GROUP BY T1.ID HAVING count(*)  >=  3",
    "SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T3 ON T1.ID  =  T3.student_id JOIN Highschooler AS T2 ON T3.friend_id  =  T2.ID WHERE T1.name  =  'Kyle'",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.name  =  'Kyle'",
    "SELECT count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.name  = 'Kyle'",
    "SELECT count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.name  =  'Kyle'",
    "SELECT DISTINCT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T2.student_id IS NULL",
    "SELECT DISTINCT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T2.student_id IS NULL",
    "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)",
    "SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)",
    "SELECT DISTINCT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id WHERE T2.friend_id  =  T3.liked_id",
    "SELECT DISTINCT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id WHERE T2.friend_id  =  T3.liked_id",
    "SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.ID  IN (SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id  IN (SELECT T3.student_id FROM Likes AS T3 WHERE T3.liked_id  =  T1.ID))",
    "SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID  IN (SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id  IN (SELECT T3.student_id FROM Likes AS T3 WHERE T3.liked_id  =  T1.ID))",
    "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "SELECT T1.name ,  count(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id",
    "SELECT T1.name ,  count(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id ORDER BY count(T2.liked_id) DESC LIMIT 1",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id HAVING count(T2.liked_id)  >=  2",
    "SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID HAVING count(T2.liked_id)  >=  2",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID HAVING T1.grade  >  5 AND count(*)  >=  2",
    "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.grade  >  5 GROUP BY T1.ID HAVING count(*)  >=  2",
    "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.ID WHERE T2.name  = 'Kyle'",
    "SELECT count(liked_id) FROM Likes JOIN Highschooler ON Likes.student_id  =  Highschooler.ID WHERE Highschooler.name  =  'Kyle'",
    "SELECT avg(T1.grade) FROM Highschooler AS T1 WHERE T1.ID  IN (SELECT DISTINCT T2.friend_id FROM Friend AS T2 WHERE T2.student_id  IN (SELECT DISTINCT T3.ID FROM Highschooler AS T3))",
    "SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)",
    "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)",
    "SELECT min(grade) FROM Highschooler WHERE ID  NOT IN (SELECT friend_id FROM Friend UNION SELECT student_id FROM Friend)",
    "SELECT DISTINCT T1.state FROM Owners AS T1 WHERE T1.state  IN (SELECT T2.state FROM Professionals AS T2)",
    "SELECT DISTINCT T1.state FROM Owners AS T1 WHERE T1.state  IN (SELECT T2.state FROM Professionals AS T2)",
    "SELECT avg(age) FROM Dogs WHERE dog_id  IN (SELECT dog_id FROM Treatments)",
    "SELECT avg(age) FROM Dogs WHERE dog_id  IN (SELECT dog_id FROM Treatments)",
    "SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.state  =  'Indiana' OR (SELECT count(*) FROM Treatments WHERE professional_id  =  T1.professional_id)  >  2",
    "SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.state  =  'Indiana' OR (SELECT count(*) FROM Treatments AS T3 WHERE T3.professional_id  =  T1.professional_id)  >  2",
    "SELECT T1.name FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.cost_of_treatment  <=  1000",
    "SELECT DISTINCT T1.name FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Owners AS T3 ON T1.owner_id  =  T3.owner_id GROUP BY T1.dog_id HAVING sum(T2.cost_of_treatment)  <=  1000",
    "SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT first_name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT first_name FROM Dogs)",
    "SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs)",
    "SELECT professional_id ,  role_code ,  email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)",
    "SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.professional_id  IS NULL",
    "SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 WHERE T1.owner_id IN (SELECT T2.owner_id FROM Owners AS T2 JOIN Dogs AS T3 ON T2.owner_id = T3.owner_id GROUP BY T2.owner_id ORDER BY count(T3.dog_id) DESC LIMIT 1)",
    "SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id, T1.first_name, T1.last_name HAVING count(T2.dog_id)  = (SELECT max(count(T3.dog_id)) FROM Owners AS T4 JOIN Dogs AS T3 ON T4.owner_id  =  T3.owner_id)",
    "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(T2.dog_id) DESC LIMIT 1",
    "SELECT T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_code ORDER BY count(T1.breed_code) DESC LIMIT 1",
    "SELECT T3.owner_id ,  T3.last_name FROM Owners AS T3 JOIN (SELECT T2.owner_id , sum(T1.cost_of_treatment) AS total_cost FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id  =  T2.dog_id GROUP BY T2.owner_id) AS T4 ON T3.owner_id  =  T4.owner_id ORDER BY T4.total_cost DESC LIMIT 1",
    "SELECT T1.owner_id ,  T1.last_name ,  sum(T3.cost_of_treatment) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T2.cost_of_treatment HAVING T2.cost_of_treatment  = (SELECT min(cost_of_treatment) FROM Treatments)",
    "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T2.treatment_type_code HAVING sum(T2.cost_of_treatment)  = (SELECT min(sum(cost_of_treatment)) FROM Treatments GROUP BY treatment_type_code)",
    "SELECT T1.owner_id, T1.zip_code, sum(T3.cost_of_treatment) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id, T1.zip_code ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.dog_id JOIN Dogs AS T3 ON T1.owner_id  =  T3.owner_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1",
    "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)",
    "SELECT DISTINCT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(T2.treatment_id)  >=  2",
    "SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)",
    "SELECT first_name ,  last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments))",
    "SELECT Treatments.date_of_treatment ,  Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id",
    "SELECT Treatments.date_of_treatment ,  Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id",
    "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "SELECT T1.first_name ,  T1.last_name ,  T3.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Sizes AS T3 ON T2.size_code  =  T3.size_code",
    "SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Sizes AS T3 ON T2.size_code  =  T3.size_code",
    "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "SELECT T1.name ,  T3.date_of_treatment FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code JOIN Treatments AS T3 ON T1.dog_id  =  T3.dog_id WHERE T1.breed_code  = (SELECT breed_code FROM Breeds GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1)",
    "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T1.breed_code  =  T3.breed_code WHERE T1.breed_code  = (SELECT breed_code FROM Breeds GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1)",
    "SELECT T2.first_name ,  T1.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.state  = 'Virginia'",
    "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "SELECT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "SELECT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T2.age ORDER BY T2.age ASC LIMIT 1",
    "SELECT T2.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  = (SELECT min(age) FROM Dogs)",
    "SELECT DISTINCT T1.email_address FROM Professionals AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.state  =  'Hawaii' OR T2.state  =  'Wisconsin'",
    "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "SELECT date_arrived ,  date_departed FROM Dogs",
    "SELECT date_arrived ,  date_departed FROM Dogs",
    "SELECT count(DISTINCT T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.dog_id  IS NOT NULL",
    "SELECT count(DISTINCT dog_id) FROM Treatments",
    "SELECT count(DISTINCT professional_id) FROM Treatments",
    "SELECT count(DISTINCT professional_id) FROM Treatments",
    "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'",
    "SELECT role_code ,  street ,  city ,  state FROM Professionals WHERE city LIKE '%West%'",
    "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "SELECT count(dog_id) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)",
    "SELECT count(dog_id) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)",
    "SELECT max(cost_of_treatment) FROM Treatments",
    "SELECT max(cost_of_treatment) FROM Treatments",
    "SELECT count(DISTINCT T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.dog_id  IS NULL",
    "SELECT count(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.dog_id  IS NULL",
    "SELECT count(DISTINCT T1.owner_id) FROM Owners AS T1 WHERE NOT EXISTS (SELECT 1 FROM Dogs AS T2 WHERE T2.owner_id  =  T1.owner_id AND T2.abandoned_yn  =  'no')",
    "SELECT count(DISTINCT T1.owner_id) FROM Owners AS T1 WHERE NOT EXISTS (SELECT 1 FROM Dogs AS T2 WHERE T2.owner_id = T1.owner_id)",
    "SELECT count(DISTINCT T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.professional_id  IS  NULL",
    "SELECT count(DISTINCT T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.professional_id  IS  NULL",
    "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "SELECT AVG(age) FROM Dogs",
    "SELECT AVG(age) FROM Dogs",
    "SELECT max(age) FROM Dogs",
    "SELECT max(age) FROM Dogs",
    "SELECT charge_type ,  charge_amount FROM Charges",
    "SELECT charge_type ,  charge_amount FROM Charges",
    "SELECT max(charge_amount) FROM Charges",
    "SELECT max(charge_amount) FROM Charges WHERE charge_type  =  'expensive'",
    "SELECT email_address ,  cell_number ,  home_phone FROM Professionals",
    "SELECT email_address ,  cell_number ,  home_phone FROM Professionals",
    "SELECT T1.breed_name ,  T2.size_description FROM Breeds AS T1 CROSS JOIN Sizes AS T2",
    "SELECT DISTINCT T1.breed_name ,  T2.size_description FROM Breeds AS T1 JOIN Dogs AS T3 ON T1.breed_code  =  T3.breed_code JOIN Sizes AS T2 ON T3.size_code  =  T2.size_code",
    "SELECT T1.first_name ,  T3.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "SELECT T1.first_name ,  T3.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "SELECT count(*) FROM singer",
    "SELECT count(*) FROM singer",
    "SELECT Name FROM singer ORDER BY Net_Worth_Millions",
    "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "SELECT Birth_Year, Citizenship FROM singer",
    "SELECT Birth_Year ,  Citizenship FROM singer",
    "SELECT Name FROM singer WHERE Citizenship != 'France'",
    "SELECT Name FROM singer WHERE Citizenship  !=  'French'",
    "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "SELECT Citizenship ,  count(*) FROM singer GROUP BY Citizenship",
    "SELECT count(*) ,  Citizenship FROM singer GROUP BY Citizenship",
    "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1",
    "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1",
    "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "SELECT max(Net_Worth_Millions) ,  Citizenship FROM singer GROUP BY Citizenship",
    "SELECT T1.Title ,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "SELECT T1.Title ,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING count(*)  >  1",
    "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING count(*)  >  1",
    "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE song.Singer_ID  IS NULL",
    "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 AND Birth_Year  >  1955",
    "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 AND Birth_Year  >  1955 GROUP BY Citizenship",
    "SELECT count(*) FROM Other_Available_Features",
    "SELECT T2.feature_type_name FROM Ref_Feature_Types AS T2 JOIN Other_Available_Features AS T1 ON T2.feature_type_code  =  T1.feature_type_code WHERE T1.feature_name  = 'AirCon'",
    "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code",
    "SELECT property_name FROM Properties WHERE (property_type_code  =  'H' OR property_type_code  =  'A') AND room_count  >  1"
]