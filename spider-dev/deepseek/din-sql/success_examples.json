[{"p_str": "SELECT count(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC", "g_str": ["SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC", "g_str": ["SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT AVG (Age) ,  MIN (Age) ,  MAX (Age) FROM singer WHERE Country  =  'France'", "g_str": ["SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT AVG (Age) ,  MIN (Age) ,  MAX (Age) FROM singer WHERE Country  =  'French'", "g_str": ["SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age  >  20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age  >  20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT Country ,  count(Singer_ID) FROM singer GROUP BY Country", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  Country FROM singer GROUP BY Country", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)", "g_str": ["SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Song_Name FROM singer WHERE Age  >  (SELECT avg(Age) FROM singer)", "g_str": ["SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Location ,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000", "g_str": ["SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Location ,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000", "g_str": ["SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Capacity FROM stadium ORDER BY Average DESC LIMIT 1", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Capacity FROM stadium ORDER BY Average DESC LIMIT 1", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015", "g_str": ["SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015", "g_str": ["SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  count(T2.concert_ID) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Name", "g_str": ["SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  >=  2014 GROUP BY T1.Stadium_ID ORDER BY count(T2.concert_ID) DESC LIMIT 1", "g_str": ["SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT Name ,  Capacity FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year  >  2013 GROUP BY Stadium_ID ORDER BY COUNT(concert_ID) DESC LIMIT 1)", "g_str": ["select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY count(concert_ID) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert)", "g_str": ["SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year  =  2014)", "g_str": ["SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT T1.concert_Name ,  T1.Theme ,  count(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID", "g_str": ["SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.concert_Name ,  T1.Theme ,  count(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID", "g_str": ["select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  count(T2.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Singer_ID", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  count(T2.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T3.Year  =  2014", "g_str": ["SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name ,  Country FROM singer WHERE Song_Name LIKE '%Hey%'", "g_str": ["SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Country FROM singer WHERE Song_Name LIKE '%Hey%'", "g_str": ["SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014 INTERSECT SELECT DISTINCT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2015", "g_str": ["SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT count(concert_ID) FROM concert WHERE Stadium_ID  = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)", "g_str": ["select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT count(concert_ID) FROM concert WHERE Stadium_ID  =  (SELECT Highest FROM stadium)", "g_str": ["select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Pets WHERE weight  >  10", "g_str": ["SELECT count(*) FROM pets WHERE weight  >  10", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Pets WHERE weight  >  10", "g_str": ["SELECT count(*) FROM pets WHERE weight  >  10", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT weight FROM Pets WHERE PetType  =  'dog' ORDER BY pet_age ASC LIMIT 1", "g_str": ["SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT min(weight) FROM Pets WHERE PetType  =  'dog'", "g_str": ["SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType ,  max(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, max(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT count(PetID) FROM Has_Pet JOIN Student ON Has_Pet.StuID  =  Student.StuID WHERE Student.Age  >  20", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT PetType) FROM Pets", "g_str": ["SELECT count(DISTINCT pettype) FROM pets", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT PetType) FROM Pets", "g_str": ["SELECT count(DISTINCT pettype) FROM pets", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' OR T3.PetType  =  'dog'", "g_str": ["SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' OR T3.PetType  =  'dog'", "g_str": ["SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'cat')) INTERSECT SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'dog'))", "g_str": ["select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'cat')) INTERSECT SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'dog'))", "g_str": ["SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat')", "g_str": ["SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Major ,  Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType  =  'cat'))", "g_str": ["SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  'cat')", "g_str": ["SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT PetType ,  weight FROM Pets ORDER BY pet_age ASC LIMIT 1", "g_str": ["SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType ,  weight FROM Pets WHERE pet_age  = (SELECT min(pet_age) FROM Pets)", "g_str": ["SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID ,  weight FROM Pets WHERE pet_age  >  1", "g_str": ["SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID ,  weight FROM Pets WHERE pet_age  >  1", "g_str": ["SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType ,  AVG (pet_age) ,  MAX (pet_age) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType ,  AVG (pet_age) ,  MAX (pet_age) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType ,  AVG (weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType ,  AVG (weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Fname ,  T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID", "g_str": ["SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Fname ,  T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID", "g_str": ["SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT T3.PetID FROM Pets AS T3 JOIN Has_Pet AS T2 ON T3.PetID  =  T2.PetID JOIN Student AS T1 ON T2.StuID  =  T1.StuID WHERE T1.LName  =  'Smith'", "g_str": ["SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID FROM Pets WHERE PetID IN (SELECT PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE LName = 'Smith')", "g_str": ["SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT count(T2.PetID) ,  T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID", "g_str": ["SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT T1.StuID ,  count(T2.PetID) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID", "g_str": ["select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Fname ,  T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1", "g_str": ["SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Fname ,  T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1", "g_str": ["SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.pet_age  =  3", "g_str": ["SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' AND T3.pet_age  =  3", "g_str": ["SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT avg(Age) FROM Student WHERE NOT EXISTS (SELECT * FROM Has_Pet WHERE Student.StuID  =  Has_Pet.StuID)", "g_str": ["select avg(age) from student where stuid not in (select stuid from has_pet)", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT avg(Age) FROM Student WHERE NOT EXISTS (SELECT * FROM Has_Pet WHERE Student.StuID  =  Has_Pet.StuID)", "g_str": ["select avg(age) from student where stuid not in (select stuid from has_pet)", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM continents", "g_str": ["SELECT count(*) FROM CONTINENTS;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM continents", "g_str": ["SELECT count(*) FROM CONTINENTS;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT T1.ContId ,  T1.Continent ,  count(T2.CountryId) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId", "g_str": ["SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T1.ContId ,  T1.Continent ,  count(T2.CountryId) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId", "g_str": ["SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM countries", "g_str": ["SELECT count(*) FROM COUNTRIES;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT CountryId) FROM countries", "g_str": ["SELECT count(*) FROM COUNTRIES;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT T1.FullName, T1.Id, count(T2.Model) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id", "g_str": ["SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight <  (SELECT avg(Weight) FROM cars_data))", "g_str": ["SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "car_1"], "hardness": "extra"}, {"p_str": "SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight  <  (SELECT avg(Weight) FROM cars_data))", "g_str": ["SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Year  =   (SELECT min(Year) FROM cars_data)", "g_str": ["SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Year  >  1980", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T2.Continent ,  count(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T3 ON T1.Country  =  T3.CountryId JOIN continents AS T2 ON T3.Continent  =  T2.ContId GROUP BY T2.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T1.Continent ,  count(DISTINCT T3.Id) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryName ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryName ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T2 ON T2.CountryId  =  T1.Country WHERE T2.CountryName  = 'France'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'France'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  4", "g_str": ["SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT AVG (MPG) FROM cars_data WHERE Cylinders  =  4", "g_str": ["SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND Year  =  1974", "g_str": ["select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "car_1"], "hardness": "medium"}, {"p_str": "SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND Year  =  1974", "g_str": ["select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "car_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE EXISTS (SELECT * FROM car_makers AS T3 WHERE T3.Country  =  T1.CountryId)", "g_str": ["SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.CountryName ,  T1.CountryId FROM countries AS T1 WHERE T1.CountryId  IN  (SELECT T2.Country FROM car_makers AS T2)", "g_str": ["SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Horsepower  >  150", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Horsepower  >  150", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT AVG (Weight) ,  Year FROM cars_data GROUP BY Year", "g_str": ["SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT AVG(Weight), Year FROM cars_data GROUP BY Year", "g_str": ["SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT max(Horsepower) ,  Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE Cylinders  =  3", "g_str": ["SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT Model FROM car_names JOIN cars_data ON MakeId = Id ORDER BY MPG DESC LIMIT 1", "g_str": ["select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT avg(Horsepower) FROM cars_data WHERE Year  <  1980", "g_str": ["SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(Horsepower) FROM cars_data WHERE Year  <  1980", "g_str": ["select avg(horsepower) from cars_data where year  <  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo'", "g_str": ["SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT max(Accelerate) ,  Cylinders FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Cylinders  >  4", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders  >  4", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Year  =  1980", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Year  =  1980", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId  =  T2.Id JOIN model_list AS T3 ON T2.Id  =  T3.Maker WHERE T2.FullName  =  'American Motor Company'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T2.Id  =  T1.MakeId JOIN model_list AS T3 ON T2.Id  =  T3.Maker WHERE T2.FullName  =  'American Motor Company'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT FullName ,  Id FROM car_makers WHERE Id IN (SELECT Maker FROM (SELECT Maker, COUNT(Model) AS ModelCount FROM model_list GROUP BY Maker) AS T1 WHERE ModelCount  >  3)", "g_str": ["SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Year FROM cars_data WHERE Weight  <  4000 UNION SELECT Year FROM cars_data WHERE Weight  >  3000", "g_str": ["select distinct year from cars_data where weight between 3000 and 4000;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT Horsepower FROM cars_data WHERE Accelerate  =  (SELECT max(Accelerate) FROM cars_data)", "g_str": ["SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Horsepower FROM cars_data WHERE Accelerate  =  (SELECT max(Accelerate) FROM cars_data)", "g_str": ["SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders  >  6", "g_str": ["SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders  >  6", "g_str": ["SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE Cylinders  =  4 ORDER BY Horsepower DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Cylinders  =  4 ORDER BY T1.Horsepower DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980", "g_str": ["select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "car_1"], "hardness": "medium"}, {"p_str": "SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980", "g_str": ["select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T2.Id  IS  NULL", "g_str": ["SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId  =  car_makers.Country WHERE car_makers.Country IS NULL", "g_str": ["SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT Country FROM airlines WHERE Airline  =  'JetBlue Airways'", "g_str": ["SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Country FROM airlines WHERE Airline  =  'Jetblue Airways'", "g_str": ["SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Abbreviation FROM airlines WHERE Airline  =  'JetBlue Airways'", "g_str": ["SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Abbreviation FROM airlines WHERE Airline  =  'Jetblue Airways'", "g_str": ["SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Airline ,  Abbreviation FROM airlines WHERE Country  =  'USA'", "g_str": ["SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline ,  Abbreviation FROM airlines WHERE Country  =  'USA'", "g_str": ["SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportCode ,  AirportName FROM airports WHERE City  =  'Anthony'", "g_str": ["SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportCode ,  AirportName FROM airports WHERE City  =  'Anthony'", "g_str": ["SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM airlines", "g_str": ["SELECT count(*) FROM AIRLINES", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airlines", "g_str": ["SELECT count(*) FROM AIRLINES", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airports", "g_str": ["SELECT count(*) FROM AIRPORTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airports", "g_str": ["SELECT count(*) FROM AIRPORTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights", "g_str": ["SELECT count(*) FROM FLIGHTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights", "g_str": ["SELECT count(*) FROM FLIGHTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'", "g_str": ["SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'", "g_str": ["SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airlines WHERE Country  =  'USA'", "g_str": ["SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT City ,  Country FROM airports WHERE AirportName  =  'Alton'", "g_str": ["SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT City ,  Country FROM airports WHERE AirportName  =  'Alton'", "g_str": ["SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportName FROM airports WHERE AirportCode  =  'AKO'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE City  =  'Aberdeen'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE City  =  'Aberdeen'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport  =  'APG'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport  =  'APG'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  'ATO'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  'ATO'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport  =  'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport  =  'ABR'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  'ABR'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  'Aberdeen' AND T3.City  =  'Ashley'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  'Aberdeen' AND T3.City  =  'Ashley'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.Abbreviation  =  'United Airlines' AND T3.AirportCode  =  'ASY'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.Airline  =  'United Airlines' AND T3.AirportName  =  'ASY'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.Airline  =  'United Airlines' AND T3.AirportCode  =  'AHD'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.Airline  =  'United Airlines' AND T3.AirportName  =  'AHD'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(FlightNo) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T1.Airline  =  'United Airlines' AND T2.City  =  'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(FlightNo) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T1.Airline  =  'United Airlines' AND T3.City  =  'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT City FROM airports JOIN flights ON AirportCode  =  DestAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT City FROM airports JOIN flights ON AirportCode  =  SourceAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode GROUP BY T2.City ORDER BY count(T1.SourceAirport) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport JOIN flights AS T3 ON T1.AirportCode  =  T3.DestAirport GROUP BY T1.AirportCode ORDER BY count(T2.SourceAirport) + count(T3.DestAirport) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport JOIN flights AS T3 ON T1.AirportCode  =  T3.DestAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT AirportCode FROM airports JOIN flights ON AirportCode  =  SourceAirport OR AirportCode  =  DestAirport GROUP BY AirportCode ORDER BY count(*) LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT AirportCode FROM airports JOIN flights ON AirportCode  =  SourceAirport OR AirportCode  =  DestAirport GROUP BY AirportCode ORDER BY count(*) ASC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportCode  = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' AND T2.SourceAirport  =  'CVO'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' AND T2.SourceAirport  =  'CVO'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport  =  'APG') EXCEPT SELECT Airline FROM flights WHERE SourceAirport  =  'APG'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT Airline FROM flights WHERE SourceAirport  =  'CVO' EXCEPT SELECT DISTINCT Airline FROM flights WHERE SourceAirport  =  'APG'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline HAVING count(*)  >=  10", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(FlightNo) >= 10)", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(T2.FlightNo)  <  200", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline HAVING count(*)  <  200", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  'United Airlines'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport  =  'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport  =  'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport  =  'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport  =  'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport  =  'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport  =  'ABR'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport  =  'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport  =  'ABR'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  'Aberdeen' OR DestAirport  =  'Abilene'", "g_str": ["SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport  =  'ABR' OR DestAirport  =  'ABI'", "g_str": ["SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)", "g_str": ["SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM employee", "g_str": ["SELECT count(*) FROM employee", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM employee", "g_str": ["SELECT count(*) FROM employee", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT Name FROM employee ORDER BY Age", "g_str": ["SELECT name FROM employee ORDER BY age", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT Name FROM employee ORDER BY Age", "g_str": ["SELECT name FROM employee ORDER BY age", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT count(*) ,  City FROM employee GROUP BY City", "g_str": ["SELECT count(*) ,  city FROM employee GROUP BY city", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT count(Employee_ID) ,  City FROM employee GROUP BY City", "g_str": ["SELECT count(*) ,  city FROM employee GROUP BY city", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age <30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age  <  30 GROUP BY City HAVING count(*)  >  1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT count(Shop_ID) ,  Location FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Manager_name ,  District FROM shop ORDER BY Number_products DESC LIMIT 1", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Manager_name ,  District FROM shop ORDER BY Number_products DESC LIMIT 1", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "g_str": ["SELECT min(Number_products) ,  max(Number_products) FROM shop", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "g_str": ["SELECT min(Number_products) ,  max(Number_products) FROM shop", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Location ,  District FROM shop ORDER BY Number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Location ,  District FROM shop ORDER BY Number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Bonus  =  (SELECT max(Bonus) FROM evaluation)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Bonus  =  (SELECT max(Bonus) FROM evaluation)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Employee_ID  IS NULL", "g_str": ["SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Employee_ID  IS NULL", "g_str": ["SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING count(T2.Employee_ID)  = (SELECT max(T3.count) FROM (SELECT count(T4.Employee_ID) as count FROM hiring AS T4 GROUP BY T4.Shop_ID) AS T3)", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT count(T1.Employee_ID) ,  T2.Name FROM shop AS T2 JOIN hiring AS T1 ON T2.Shop_ID  =  T1.Shop_ID GROUP BY T1.Shop_ID", "g_str": ["SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT count(T1.Employee_ID) ,  T2.Name FROM shop AS T2 JOIN hiring AS T1 ON T2.Shop_ID  =  T1.Shop_ID GROUP BY T1.Shop_ID", "g_str": ["SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT sum(Bonus) FROM evaluation", "g_str": ["SELECT sum(bonus) FROM evaluation", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT sum(Bonus) FROM evaluation", "g_str": ["SELECT sum(bonus) FROM evaluation", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT * FROM hiring", "g_str": ["SELECT * FROM hiring", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT * FROM hiring", "g_str": ["SELECT * FROM hiring", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT District FROM shop WHERE Number_products  <  3000 AND shop.District IN (SELECT District FROM shop WHERE Number_products  >  10000)", "g_str": ["SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT District FROM shop WHERE Number_products  <  3000 AND Number_products  >  10000 GROUP BY District", "g_str": ["SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT count(DISTINCT Location) FROM shop", "g_str": ["SELECT count(DISTINCT LOCATION) FROM shop", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT Location) FROM shop", "g_str": ["SELECT count(DISTINCT LOCATION) FROM shop", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Documents", "g_str": ["SELECT count(*) FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Documents", "g_str": ["SELECT count(*) FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Document_ID ,  Document_Name ,  Document_Description FROM Documents", "g_str": ["SELECT document_id ,  document_name ,  document_description FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID ,  Document_Name ,  Document_Description FROM Documents", "g_str": ["SELECT document_id ,  document_name ,  document_description FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_Name ,  Template_ID FROM Documents WHERE Document_Description  LIKE  '%w%'", "g_str": ["SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_Name ,  Template_ID FROM Documents WHERE Document_Description  LIKE  '%w%'", "g_str": ["SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code  =  'PPT'", "g_str": ["SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code  =  'PPT'", "g_str": ["SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_ID ,  count(T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID", "g_str": ["SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_ID ,  count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID", "g_str": ["SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING count(*)  >  1", "g_str": ["SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING count(*)  >  1", "g_str": ["SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)", "g_str": ["SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)", "g_str": ["SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Templates", "g_str": ["SELECT count(*) FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Templates", "g_str": ["SELECT count(*) FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates", "g_str": ["SELECT template_id ,  version_number ,  template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Templates.Template_ID ,  Templates.Version_Number ,  Ref_Template_Types.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code", "g_str": ["SELECT template_id ,  version_number ,  template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types", "g_str": ["SELECT DISTINCT template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types", "g_str": ["SELECT DISTINCT template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  'PP' OR Template_Type_Code  =  'PPT'", "g_str": ["SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  'PP' OR Template_Type_Code  =  'PPT'", "g_str": ["SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(Template_ID) FROM Templates WHERE Template_Type_Code  =  'CV'", "g_str": ["SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT count(Template_ID) FROM Templates WHERE Template_Type_Code  =  'CV'", "g_str": ["SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Version_Number ,  Template_Type_Code FROM Templates WHERE Version_Number  >  5", "g_str": ["SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Version_Number ,  Template_Type_Code FROM Templates WHERE Version_Number  >  5", "g_str": ["SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_Type_Code ,  count(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code", "g_str": ["SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_Type_Code ,  count(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code", "g_str": ["SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T2.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING count(T2.Template_ID)  <  3", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T2.Template_Type_Code HAVING count(*)  <  3", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base'", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base'", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_Name FROM Documents JOIN Templates ON Templates.Template_ID  =  Documents.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code  = 'BK'", "g_str": ["SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID  =  Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code  = 'BK'", "g_str": ["SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_Type_Code ,  count(T2.Document_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T3 ON T1.Template_Type_Code  =  T3.Template_Type_Code JOIN Documents AS T2 ON T2.Template_ID  =  T3.Template_ID GROUP BY T1.Template_Type_Code", "g_str": ["SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Template_Type_Code ORDER BY count(Document_ID) DESC LIMIT 1", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types", "g_str": ["SELECT template_type_code ,  template_type_description FROM Ref_template_types", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types", "g_str": ["SELECT template_type_code ,  template_type_description FROM Ref_template_types", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  = 'AD'", "g_str": ["SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  =  'AD'", "g_str": ["SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description  =  'Book'", "g_str": ["SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Template_Type_Description  =  'Presentation'", "g_str": ["SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  = 'Presentation'", "g_str": ["SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Paragraphs", "g_str": ["SELECT count(*) FROM Paragraphs", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Paragraphs", "g_str": ["SELECT count(*) FROM Paragraphs", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT count(Paragraph_ID) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Summer Show'", "g_str": ["SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(Paragraph_ID) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Summer Show'", "g_str": ["SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'", "g_str": ["SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'", "g_str": ["SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  = 'Customer reviews'", "g_str": ["SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Customer reviews'", "g_str": ["SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Document_ID ,  count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID", "g_str": ["SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Document_ID ,  count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID", "g_str": ["SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name, count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name", "g_str": ["SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name, count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID", "g_str": ["SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT T1.Document_ID ,  T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ,  T1.Document_Name ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Paragraph_Text  =  'Brazil' AND T2.Paragraph_Text  =  'Ireland'", "g_str": ["SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Paragraph_Text  =  'Brazil' AND T2.Paragraph_Text  =  'Ireland'", "g_str": ["SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM teacher", "g_str": ["SELECT count(*) FROM teacher", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM teacher", "g_str": ["SELECT count(*) FROM teacher", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher ORDER BY Age", "g_str": ["SELECT Name FROM teacher ORDER BY Age ASC", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher ORDER BY Age ASC", "g_str": ["SELECT Name FROM teacher ORDER BY Age ASC", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Age, Hometown FROM teacher", "g_str": ["SELECT Age ,  Hometown FROM teacher", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Age ,  Hometown FROM teacher", "g_str": ["SELECT Age ,  Hometown FROM teacher", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Hometown != ' Little Lever Urban District'", "g_str": ["select name from teacher where hometown != \"little lever urban district\"", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher WHERE Hometown !=  ' Little Lever Urban District'", "g_str": ["select name from teacher where hometown != \"little lever urban district\"", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "g_str": ["SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "g_str": ["SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown ,  count(Teacher_ID) FROM teacher GROUP BY Hometown", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID ORDER BY T1.Name", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID ORDER BY T1.Name", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math'", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math'", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT T1.Name ,  count(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID", "g_str": ["SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  count(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID", "g_str": ["SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING count(*)  >=  2", "g_str": ["SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM (SELECT Teacher_ID, COUNT(Course_ID) AS num_courses FROM course_arrange GROUP BY Teacher_ID) AS T WHERE num_courses  >=  2)", "g_str": ["SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Teacher_ID  IS  NULL", "g_str": ["SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT DISTINCT Teacher_ID FROM course_arrange)", "g_str": ["SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM visitor WHERE Age  <  30", "g_str": ["SELECT count(*) FROM visitor WHERE age  <  30", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT Name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "g_str": ["SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT avg(Age) FROM visitor WHERE Level_of_membership  <=  4", "g_str": ["SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT Museum_ID ,  Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1", "g_str": ["SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT AVG (Num_of_Staff) FROM museum WHERE Open_Year  <  2009", "g_str": ["SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT Open_Year ,  Num_of_Staff FROM museum WHERE Name  =  'Plaza Museum'", "g_str": ["SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT T1.ID ,  T1.Name ,  T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T2.visitor_ID HAVING count(*)  >  1", "g_str": ["SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T2.visitor_ID ORDER BY sum(T2.Num_of_Ticket) DESC LIMIT 1", "g_str": ["SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "museum_visit"], "hardness": "hard"}, {"p_str": "SELECT AVG (Num_of_Ticket) ,  MAX (Num_of_Ticket) FROM visit", "g_str": ["SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT sum(Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID WHERE T2.Level_of_membership  =  1", "g_str": ["SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT Name FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  <  2009) INTERSECT SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2011))", "g_str": ["SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM museum WHERE Open_Year  >  2013 OR Open_Year  <  2008", "g_str": ["SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM players", "g_str": ["SELECT count(*) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM players", "g_str": ["SELECT count(*) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM matches", "g_str": ["SELECT count(*) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM matches", "g_str": ["SELECT count(*) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "g_str": ["SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "g_str": ["SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT country_code) FROM players", "g_str": ["SELECT count(DISTINCT country_code) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT country_code) FROM players", "g_str": ["SELECT count(DISTINCT country_code) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT (DISTINCT loser_name) FROM matches", "g_str": ["SELECT count(DISTINCT loser_name) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "g_str": ["SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "g_str": ["SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM matches WHERE year  = 2013 OR year  = 2016", "g_str": ["SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM matches WHERE year  =  2013 OR year  =  2016", "g_str": ["SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name  =  'WTA Championships') AND player_id IN (SELECT winner_id FROM matches WHERE tourney_name  =  'Australian Open')", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "wta_1"], "hardness": "extra"}, {"p_str": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "g_str": ["SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "g_str": ["SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "g_str": ["SELECT first_name ,  last_name FROM players ORDER BY birth_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  last_name FROM players WHERE hand  =  'left' OR hand  =  'L' ORDER BY birth_date", "g_str": ["SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.tours  =  (SELECT max(tours) FROM rankings)", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT avg(T2.ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "g_str": ["SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "g_str": ["SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  sum(T2.ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "g_str": ["SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(player_id) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "g_str": ["SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "g_str": ["SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  year FROM matches GROUP BY year", "g_str": ["SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  year FROM matches GROUP BY year", "g_str": ["SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T1.tourney_name  = 'WTA Championships' AND T2.hand  = 'left'", "g_str": ["SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT hand ,  count(*) FROM players GROUP BY hand", "g_str": ["SELECT count(*) ,  hand FROM players GROUP BY hand", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT hand ,  count(*) FROM players GROUP BY hand", "g_str": ["SELECT count(*) ,  hand FROM players GROUP BY hand", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "g_str": ["SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "g_str": ["SELECT name ,  tonnage FROM ship ORDER BY name DESC", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT avg(injured) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id JOIN battle AS T3 ON T2.lost_in_battle  =  T3.id", "g_str": ["SELECT avg(injured) FROM death", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT killed ,  injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "g_str": ["SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT name ,  result FROM battle WHERE bulgarian_commander  <>  'Boril'", "g_str": ["SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "g_str": ["SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "g_str": ["SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT result) FROM battle", "g_str": ["SELECT count(DISTINCT RESULT) FROM battle", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT T1.id) FROM battle AS T1 WHERE NOT EXISTS (SELECT * FROM ship AS T2 WHERE T2.tonnage  =  225 AND T2.lost_in_battle  =  T1.id)", "g_str": ["SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT note FROM death WHERE note LIKE '%East%'", "g_str": ["SELECT note FROM death WHERE note LIKE '%East%'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT line_1 ,  line_2 FROM Addresses", "g_str": ["SELECT line_1 ,  line_2 FROM addresses", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT line_1 ,  line_2 FROM Addresses", "g_str": ["SELECT line_1 ,  line_2 FROM addresses", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Courses", "g_str": ["SELECT count(*) FROM Courses", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Courses", "g_str": ["SELECT count(*) FROM Courses", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT course_description FROM Courses WHERE course_name  LIKE  '%math%'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "g_str": ["SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "g_str": ["SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT T1.department_name ,  T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(T2.degree_program_id) DESC LIMIT 1", "g_str": ["SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.department_name ,  T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "g_str": ["select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id", "g_str": ["SELECT count(DISTINCT department_id) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "g_str": ["SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT count(degree_program_id) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  = 'engineering'", "g_str": ["SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT count(degree_program_id) FROM Degree_Programs WHERE department_id  =  'engineering'", "g_str": ["SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT section_name ,  section_description FROM Sections", "g_str": ["SELECT section_name ,  section_description FROM Sections", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT section_name ,  section_description FROM Sections", "g_str": ["SELECT section_name ,  section_description FROM Sections", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT section_name FROM Sections ORDER BY section_name DESC", "g_str": ["SELECT section_name FROM Sections ORDER BY section_name DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT section_name FROM Sections ORDER BY section_name DESC", "g_str": ["SELECT section_name FROM Sections ORDER BY section_name DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT T1.semester_id ,  T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ,  T1.semester_name ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "g_str": ["SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "g_str": ["SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(T2.student_id) DESC LIMIT 1", "g_str": ["SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(T2.student_id) DESC LIMIT 1", "g_str": ["SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.semester_id  IS  NULL", "g_str": ["SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Semesters.semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id WHERE Student_Enrolment.semester_id  IS NULL", "g_str": ["SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "g_str": ["SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id LEFT JOIN Student_Enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  = 'North Carolina' AND T3.student_id  IS NULL", "g_str": ["SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id LEFT JOIN Student_Enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  = 'North Carolina' AND T3.student_id  IS NULL", "g_str": ["SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "g_str": ["SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "g_str": ["select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  middle_name ,  last_name FROM Students WHERE student_id  = (SELECT min(student_id) FROM Student_Enrolment)", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  middle_name ,  last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  middle_name ,  last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name FROM Students WHERE permanent_address_id  !=  current_address_id", "g_str": ["SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id OR T1.address_id  =  T2.permanent_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT AVG(transcript_date) FROM Transcripts", "g_str": ["SELECT avg(transcript_date) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT AVG (transcript_date) FROM Transcripts", "g_str": ["SELECT avg(transcript_date) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "g_str": ["SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "g_str": ["SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Transcripts", "g_str": ["SELECT count(*) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Transcripts", "g_str": ["SELECT count(*) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT max(transcript_date) FROM Transcripts", "g_str": ["SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT max(transcript_date) FROM Transcripts", "g_str": ["SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.current_address_id) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id", "g_str": ["SELECT count(DISTINCT current_address_id) FROM Students", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "g_str": ["SELECT section_description FROM Sections WHERE section_name  =  'h'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' OR T1.cell_mobile_number  =  '09700166582'", "g_str": ["select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' OR T1.cell_mobile_number  =  '09700166582'", "g_str": ["select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Title FROM Cartoon ORDER BY Title", "g_str": ["SELECT Title FROM Cartoon ORDER BY title", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon ORDER BY Title", "g_str": ["SELECT Title FROM Cartoon ORDER BY title", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Cartoon WHERE Written_by  =  'Joseph Kuhr'", "g_str": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Cartoon WHERE Written_by  =  'Joseph Kuhr'", "g_str": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "g_str": ["SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones' OR Directed_by  =  'Brandon Vietti'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by  =  'Ben Jones' OR Directed_by  =  'Brandon Vietti'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Country ,  count(id) FROM TV_Channel GROUP BY Country ORDER BY count(id) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Country ,  count(id) FROM TV_Channel GROUP BY Country ORDER BY count(id) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT COUNT (DISTINCT series_name) ,  COUNT (DISTINCT Content) FROM TV_Channel", "g_str": ["SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT COUNT (DISTINCT series_name) ,  COUNT (DISTINCT Content) FROM TV_Channel", "g_str": ["SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Content FROM TV_Channel WHERE series_name  =  'Sky Radio'", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Content FROM TV_Channel WHERE Series_name  =  'Sky Radio'", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Package_Option FROM TV_Channel WHERE series_name  =  'Sky Radio'", "g_str": ["SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Package_Option FROM TV_Channel WHERE series_name  =  'Sky Radio'", "g_str": ["SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM TV_Channel WHERE Language  =  'English'", "g_str": ["SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM TV_Channel WHERE Language  =  'English'", "g_str": ["SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Language ,  count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) LIMIT 1", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language ,  count(id) FROM TV_Channel GROUP BY Language ORDER BY count(id) LIMIT 1", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language ,  count(id) FROM TV_Channel GROUP BY Language", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Language ,  count(id) FROM TV_Channel GROUP BY Language", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  =  'The Rise of the Blue Beetle!'", "g_str": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  = 'The Rise of the Blue Beetle'", "g_str": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  = 'Sky Radio'", "g_str": ["SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  'Sky Radio'", "g_str": ["SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "g_str": ["SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT min(Share) ,  max(Share) FROM TV_series", "g_str": ["SELECT max(SHARE) , min(SHARE) FROM TV_series;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT max(Share) ,  min(Share) FROM TV_series", "g_str": ["SELECT max(SHARE) , min(SHARE) FROM TV_series;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Air_Date FROM TV_series WHERE Episode  =  'A Love of a Lifetime'", "g_str": ["SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Weekly_Rank FROM TV_series WHERE Episode  =  'A Love of a Lifetime'", "g_str": ["SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'A Love of a Lifetime'", "g_str": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  'Sky Radio'", "g_str": ["SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  Directed_by FROM Cartoon GROUP BY Directed_by", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Directed_by, count(*) FROM Cartoon GROUP BY Directed_by", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1", "g_str": ["select production_code ,  channel from cartoon order by original_air_date desc limit 1", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1", "g_str": ["select production_code ,  channel from cartoon order by original_air_date desc limit 1", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  'Todd Casey'", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  'Todd Casey'", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language  !=  'English'", "g_str": ["SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language  !=  'English'", "g_str": ["SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  'Ben Jones')", "g_str": ["SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM poker_player", "g_str": ["SELECT count(*) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM poker_player", "g_str": ["SELECT count(*) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "g_str": ["SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player ORDER BY Final_Table_Made DESC", "g_str": ["SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "g_str": ["SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT avg(Earnings) FROM poker_player", "g_str": ["SELECT avg(Earnings) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT AVG(Earnings) FROM poker_player", "g_str": ["SELECT avg(Earnings) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "g_str": ["SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "g_str": ["SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "g_str": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT max(Final_Table_Made) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE Earnings  <  200000", "g_str": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Final_Table_Made  >  0 ORDER BY T2.Final_Table_Made", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T2.Name FROM people AS T2 JOIN poker_player AS T1 ON T2.People_ID  =  T1.People_ID WHERE T1.Final_Table_Made  >  0 ORDER BY T1.Final_Table_Made", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  = (SELECT min(Earnings) FROM poker_player)", "g_str": ["SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  = (SELECT min(Earnings) FROM poker_player)", "g_str": ["SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID WHERE people.Height  =  (SELECT max(Height) FROM people)", "g_str": ["SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  =  (SELECT max(Height) FROM people)", "g_str": ["SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200", "g_str": ["SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200", "g_str": ["SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality ,  count(*) FROM people GROUP BY Nationality", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality ,  count(*) FROM people GROUP BY Nationality", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >=  2", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID)  >=  2", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "g_str": ["SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Birth_Date FROM people ORDER BY Name", "g_str": ["SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Name FROM people WHERE Nationality != 'Russia'", "g_str": ["SELECT Name FROM people WHERE Nationality != \"Russia\"", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name FROM people WHERE Nationality !=  'Russia'", "g_str": ["SELECT Name FROM people WHERE Nationality != \"Russia\"", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID  =  poker_player.People_ID WHERE poker_player.Poker_Player_ID  IS  NULL", "g_str": ["SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Poker_Player_ID  IS NULL", "g_str": ["SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT count(DISTINCT Nationality) FROM people", "g_str": ["SELECT count(DISTINCT Nationality) FROM people", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT Nationality) FROM people", "g_str": ["SELECT count(DISTINCT Nationality) FROM people", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT contestant_number ,  contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC", "g_str": ["SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT vote_id ,  phone_number ,  state FROM VOTES", "g_str": ["SELECT vote_id ,  phone_number ,  state FROM votes", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE", "g_str": ["SELECT max(area_code) ,  min(area_code) FROM area_code_state", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT max(created) FROM VOTES WHERE state  =  'CA'", "g_str": ["SELECT max(created) FROM votes WHERE state  =  'CA'", "voter_1"], "hardness": "easy"}, {"p_str": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name  !=  'Jessie Alloway'", "g_str": ["SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "voter_1"], "hardness": "easy"}, {"p_str": "SELECT T1.contestant_number ,  T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T2.contestant_number HAVING count(*)  >=  2", "g_str": ["SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT T1.contestant_number ,  T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(T2.contestant_number) ASC LIMIT 1", "g_str": ["SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.contestant_number) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.contestant_number  IS  NULL", "g_str": ["SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'", "g_str": ["select contestant_name from contestants where contestant_name like \"%al%\"", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE IndepYear  >  1950", "g_str": ["SELECT Name FROM country WHERE IndepYear  >  1950", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE IndepYear  >  1950", "g_str": ["SELECT Name FROM country WHERE IndepYear  >  1950", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic'", "g_str": ["SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic'", "g_str": ["SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  'Caribbean'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Continent FROM country WHERE Name  =  'Anguilla'", "g_str": ["SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Continent FROM country WHERE Name  =  'Anguilla'", "g_str": ["SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  = 'Kabul'", "g_str": ["SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  = 'Kabul'", "g_str": ["SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil'", "g_str": ["SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil'", "g_str": ["SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Region ,  Population FROM country WHERE Name  =  'Angola'", "g_str": ["SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Region ,  Population FROM country WHERE Name  =  'Angola'", "g_str": ["SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  'Central Africa'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'", "g_str": ["SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT sum(Population) FROM city WHERE District  =  'Gelderland' AND CountryCode  IN (SELECT Code FROM country WHERE Name  =  'Netherlands')", "g_str": ["SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT AVG (GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  'US Territory'", "g_str": ["SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Language) FROM countrylanguage", "g_str": ["SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT Language) FROM countrylanguage", "g_str": ["SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa'", "g_str": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT T1.GovernmentForm) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  = 'Africa'", "g_str": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  = 'Aruba'", "g_str": ["SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T1.Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Aruba'", "g_str": ["SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Afghanistan' AND T1.IsOfficial  =  'True'", "g_str": ["SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Afghanistan' AND T1.IsOfficial  =  'T'", "g_str": ["SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY count(T2.CountryCode) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'French')", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM country WHERE Name IN (SELECT Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE Language  =  'English') AND Name IN (SELECT Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE Language  =  'French')", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'official' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French' AND T2.IsOfficial  =  'official'", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT Continent) FROM country JOIN countrylanguage ON Code = CountryCode WHERE Language  =  'Chinese'", "g_str": ["SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T1.Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese'", "g_str": ["SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch'", "g_str": ["SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch' OR T2.Language  =  'English'", "g_str": ["SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch'", "g_str": ["select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE Continent  =  'Asia' GROUP BY Language ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm  =  'Republic') GROUP BY Language HAVING count(*)  =  1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1", "g_str": ["SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE HeadOfState  =  'Beatrix' AND IsOfficial  =  'T'", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage JOIN country ON CountryCode  =  Code WHERE HeadOfState  =  'Beatrix' AND IsOfficial  =  'T'", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.IndepYear  <  1930 AND T2.IsOfficial  =  'official'", "g_str": ["SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Africa' AND Population  <  (SELECT max(Population) FROM country WHERE Continent  =  'Asia')", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Asia' AND Population  >  (SELECT max(Population) FROM country WHERE Continent  =  'Africa')", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Asia' AND T3.Language  =  'Chinese' AND T3.IsOfficial  =  'True'", "g_str": ["select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Asia' AND T3.Language  =  'Chinese' AND T3.IsOfficial  =  1", "g_str": ["SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name ,  IndepYear ,  SurfaceArea FROM country ORDER BY Population LIMIT 1", "g_str": ["SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name ,  IndepYear ,  SurfaceArea FROM country ORDER BY Population LIMIT 1", "g_str": ["SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Population ,  Name ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "g_str": ["SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name ,  Population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "g_str": ["SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  count(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING count(T2.Language)  >=  3", "g_str": ["SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  count(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING count(T2.Language)  >  2", "g_str": ["SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "world_1"], "hardness": "medium"}, {"p_str": "SELECT District ,  count(ID) FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "g_str": ["SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "world_1"], "hardness": "extra"}, {"p_str": "SELECT District ,  count(Name) FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "g_str": ["SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "world_1"], "hardness": "extra"}, {"p_str": "SELECT GovernmentForm, sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "g_str": ["SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT GovernmentForm ,  sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "g_str": ["SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72", "g_str": ["SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Continent ,  sum(Population) ,  avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "g_str": ["SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "g_str": ["SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "g_str": ["SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM country WHERE Continent  =  'Asia'", "g_str": ["SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE Continent  =  'Asia'", "g_str": ["SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Europe' AND Population  =  80000", "g_str": ["SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Europe' AND Population  =  80000", "g_str": ["SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000", "g_str": ["select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "world_1"], "hardness": "hard"}, {"p_str": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000", "g_str": ["select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "g_str": ["SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "g_str": ["select name from city where population between 160000 and 900000", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(CountryCode) DESC LIMIT 1", "g_str": ["SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(CountryCode) DESC LIMIT 1", "g_str": ["SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM conductor", "g_str": ["SELECT count(*) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM conductor", "g_str": ["SELECT count(*) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Age", "g_str": ["SELECT Name FROM conductor ORDER BY Age ASC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Age", "g_str": ["SELECT Name FROM conductor ORDER BY Age ASC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Nationality  <>  'USA'", "g_str": ["SELECT Name FROM conductor WHERE Nationality != 'USA'", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Nationality  !=  'USA'", "g_str": ["SELECT Name FROM conductor WHERE Nationality != 'USA'", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "g_str": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "g_str": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT AVG (Attendance) FROM show", "g_str": ["SELECT avg(Attendance) FROM SHOW", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT AVG(Attendance) FROM show", "g_str": ["SELECT avg(Attendance) FROM SHOW", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT max(Share) as max_share, min(Share) as min_share FROM performance WHERE Type  !=  'Live final'", "g_str": ["SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT max(Share) as max_share, min(Share) as min_share FROM performance WHERE Type  !=  'Live final'", "g_str": ["SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Nationality) FROM conductor", "g_str": ["SELECT count(DISTINCT Nationality) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT Nationality) FROM conductor", "g_str": ["SELECT count(DISTINCT Nationality) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "g_str": ["SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "g_str": ["SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING count(*)  >  1", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING count(*)  >  1", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Year_of_Founded  >  2008", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Year_of_Founded  >  2008", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Record_Company ,  count(Orchestra_ID) FROM orchestra GROUP BY Record_Company", "g_str": ["SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  Record_Company FROM orchestra GROUP BY Record_Company", "g_str": ["SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(Orchestra_ID) DESC LIMIT 1", "g_str": ["SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID WHERE performance.Orchestra_ID  IS NULL", "g_str": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID WHERE performance.Orchestra_ID  IS NULL", "g_str": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <  2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >  2003", "g_str": ["SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD'", "g_str": ["SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD'", "g_str": ["SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID  =  T3.Orchestra_ID JOIN show AS T4 ON T3.Performance_ID  =  T4.Performance_ID GROUP BY T1.Conductor_ID HAVING count(*)  >  1", "g_str": ["SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Highschooler", "g_str": ["SELECT count(*) FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Highschooler", "g_str": ["SELECT count(*) FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name ,  grade FROM Highschooler", "g_str": ["SELECT name ,  grade FROM Highschooler", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name ,  grade FROM Highschooler", "g_str": ["SELECT name ,  grade FROM Highschooler", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler", "g_str": ["SELECT grade FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler", "g_str": ["SELECT grade FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler WHERE name  =  'Kyle'", "g_str": ["SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler WHERE name  =  'Kyle'", "g_str": ["SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler WHERE grade  =  10", "g_str": ["SELECT name FROM Highschooler WHERE grade  =  10", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler WHERE grade  =  10", "g_str": ["SELECT name FROM Highschooler WHERE grade  =  10", "network_1"], "hardness": "easy"}, {"p_str": "SELECT ID FROM Highschooler WHERE name  =  'Kyle'", "g_str": ["SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT ID FROM Highschooler WHERE name  =  'Kyle'", "g_str": ["SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "g_str": ["SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "g_str": ["SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT T1.ID ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID", "g_str": ["SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID", "g_str": ["SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID", "g_str": ["SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID HAVING count(T2.friend_id)  >=  3", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T3 ON T1.ID  =  T3.student_id JOIN Highschooler AS T2 ON T3.friend_id  =  T2.ID WHERE T1.name  =  'Kyle'", "g_str": ["SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "hard"}, {"p_str": "SELECT count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.name  = 'Kyle'", "g_str": ["SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.name  =  'Kyle'", "g_str": ["SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T2.student_id IS NULL", "g_str": ["SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "network_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T2.student_id IS NULL", "g_str": ["SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "network_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)", "g_str": ["SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "network_1"], "hardness": "hard"}, {"p_str": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name ,  count(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name ,  count(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id ORDER BY count(T2.liked_id) DESC LIMIT 1", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id HAVING count(T2.liked_id)  >=  2", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID HAVING count(T2.liked_id)  >=  2", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID HAVING T1.grade  >  5 AND count(*)  >=  2", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "hard"}, {"p_str": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.grade  >  5 GROUP BY T1.ID HAVING count(*)  >=  2", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.ID WHERE T2.name  = 'Kyle'", "g_str": ["SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(liked_id) FROM Likes JOIN Highschooler ON Likes.student_id  =  Highschooler.ID WHERE Highschooler.name  =  'Kyle'", "g_str": ["SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)", "g_str": ["SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "network_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.state FROM Owners AS T1 WHERE T1.state  IN (SELECT T2.state FROM Professionals AS T2)", "g_str": ["SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.state FROM Owners AS T1 WHERE T1.state  IN (SELECT T2.state FROM Professionals AS T2)", "g_str": ["SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT avg(age) FROM Dogs WHERE dog_id  IN (SELECT dog_id FROM Treatments)", "g_str": ["SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT avg(age) FROM Dogs WHERE dog_id  IN (SELECT dog_id FROM Treatments)", "g_str": ["SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT professional_id ,  role_code ,  email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "g_str": ["SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.professional_id  IS NULL", "g_str": ["SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 WHERE T1.owner_id IN (SELECT T2.owner_id FROM Owners AS T2 JOIN Dogs AS T3 ON T2.owner_id = T3.owner_id GROUP BY T2.owner_id ORDER BY count(T3.dog_id) DESC LIMIT 1)", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(T2.dog_id) DESC LIMIT 1", "g_str": ["SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_code ORDER BY count(T1.breed_code) DESC LIMIT 1", "g_str": ["SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T2.cost_of_treatment HAVING T2.cost_of_treatment  = (SELECT min(cost_of_treatment) FROM Treatments)", "g_str": ["SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(T2.treatment_id)  >=  2", "g_str": ["SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Treatments.date_of_treatment ,  Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id", "g_str": ["SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Treatments.date_of_treatment ,  Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id", "g_str": ["SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "g_str": ["SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "g_str": ["SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "g_str": ["SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT date_arrived ,  date_departed FROM Dogs", "g_str": ["SELECT date_arrived ,  date_departed FROM Dogs", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT date_arrived ,  date_departed FROM Dogs", "g_str": ["SELECT date_arrived ,  date_departed FROM Dogs", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.dog_id  IS NOT NULL", "g_str": ["SELECT count(DISTINCT dog_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT dog_id) FROM Treatments", "g_str": ["SELECT count(DISTINCT dog_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT professional_id) FROM Treatments", "g_str": ["SELECT count(DISTINCT professional_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT professional_id) FROM Treatments", "g_str": ["SELECT count(DISTINCT professional_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'", "g_str": ["SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT role_code ,  street ,  city ,  state FROM Professionals WHERE city LIKE '%West%'", "g_str": ["SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "g_str": ["SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "g_str": ["SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT count(dog_id) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)", "g_str": ["SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT count(dog_id) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)", "g_str": ["SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT count(DISTINCT T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.dog_id  IS NULL", "g_str": ["SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.dog_id  IS NULL", "g_str": ["select count(*) from dogs where dog_id not in ( select dog_id from treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.owner_id) FROM Owners AS T1 WHERE NOT EXISTS (SELECT 1 FROM Dogs AS T2 WHERE T2.owner_id = T1.owner_id)", "g_str": ["SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.professional_id  IS  NULL", "g_str": ["SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.professional_id  IS  NULL", "g_str": ["SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "g_str": ["SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "g_str": ["SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT AVG(age) FROM Dogs", "g_str": ["SELECT avg(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT AVG(age) FROM Dogs", "g_str": ["SELECT avg(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT max(age) FROM Dogs", "g_str": ["SELECT max(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT max(age) FROM Dogs", "g_str": ["SELECT max(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT charge_type ,  charge_amount FROM Charges", "g_str": ["SELECT charge_type ,  charge_amount FROM Charges", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT charge_type ,  charge_amount FROM Charges", "g_str": ["SELECT charge_type ,  charge_amount FROM Charges", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT max(charge_amount) FROM Charges", "g_str": ["SELECT max(charge_amount) FROM Charges", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT email_address ,  cell_number ,  home_phone FROM Professionals", "g_str": ["SELECT email_address ,  cell_number ,  home_phone FROM professionals", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT email_address ,  cell_number ,  home_phone FROM Professionals", "g_str": ["SELECT email_address ,  cell_number ,  home_phone FROM professionals", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "singer"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "singer"], "hardness": "easy"}, {"p_str": "SELECT Birth_Year, Citizenship FROM singer", "g_str": ["SELECT Birth_Year ,  Citizenship FROM singer", "singer"], "hardness": "medium"}, {"p_str": "SELECT Birth_Year ,  Citizenship FROM singer", "g_str": ["SELECT Birth_Year ,  Citizenship FROM singer", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Citizenship != 'France'", "g_str": ["SELECT Name FROM singer WHERE Citizenship != \"France\"", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer WHERE Citizenship  !=  'French'", "g_str": ["SELECT Name FROM singer WHERE Citizenship != \"France\"", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "g_str": ["SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "g_str": ["SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship ,  count(*) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) ,  Citizenship FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1", "g_str": ["select citizenship from singer group by citizenship order by count(*) desc limit 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT max(Net_Worth_Millions) ,  Citizenship FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Title ,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "g_str": ["SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Title ,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "g_str": ["SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "g_str": ["SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "g_str": ["SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING count(*)  >  1", "g_str": ["SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING count(*)  >  1", "g_str": ["SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "g_str": ["SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "g_str": ["SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE song.Singer_ID  IS NULL", "g_str": ["SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "g_str": ["SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "singer"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Other_Available_Features", "g_str": ["SELECT count(*) FROM Other_Available_Features", "real_estate_properties"], "hardness": "easy"}, {"p_str": "SELECT T2.feature_type_name FROM Ref_Feature_Types AS T2 JOIN Other_Available_Features AS T1 ON T2.feature_type_code  =  T1.feature_type_code WHERE T1.feature_name  = 'AirCon'", "g_str": ["SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "real_estate_properties"], "hardness": "medium"}]