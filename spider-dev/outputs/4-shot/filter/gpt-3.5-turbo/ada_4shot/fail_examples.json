[
    {
        "p_str": "SELECT Name, Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)",
        "g_str": [
            "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Name, T2.Capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year >= 2014 GROUP BY T1.Stadium_ID HAVING COUNT(T1.concert_ID) = (SELECT MAX(concert_count) FROM (SELECT COUNT(concert_ID) FROM concert WHERE Year >= 2014 GROUP BY Stadium_ID) AS T3)",
        "g_str": [
            "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
            "concert_singer"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID",
        "g_str": [
            "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
            "concert_singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID",
        "g_str": [
            "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
            "concert_singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Model FROM model_list WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))",
        "g_str": [
            "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DISTINCT Maker FROM model_list WHERE Id IN (SELECT Id FROM cars_data WHERE Year = 1970)",
        "g_str": [
            "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Make, Year FROM cars_data WHERE Year = (SELECT MIN(Year) FROM cars_data)",
        "g_str": [
            "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT car_makers.Maker, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data)",
        "g_str": [
            "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DISTINCT Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year > 1980",
        "g_str": [
            "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT DISTINCT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE Continent IN (SELECT ContId FROM continents WHERE Continent = 'cards produced after 1980')))",
        "g_str": [
            "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT cars_data.Accelerate  FROM car_makers  JOIN car_names ON car_makers.Id = car_names.MakeId  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE car_names.Model = 'amc hornet sportabout (sw)'",
        "g_str": [
            "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_names.Model = 'amc hornet sportabout (sw)'",
        "g_str": [
            "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT Id) FROM car_makers WHERE Country = 'France'",
        "g_str": [
            "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE country = (SELECT country_id FROM countries WHERE country_name = \"USA\"))",
        "g_str": [
            "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT car_names.Model) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model WHERE countries.CountryName = \"United States\"",
        "g_str": [
            "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT MAX(Horsepower), car_makers.Maker  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE cars_data.Cylinders = 3",
        "g_str": [
            "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3 ORDER BY cars_data.Horsepower DESC LIMIT 1",
        "g_str": [
            "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT count(*) FROM car_names WHERE Maker IN (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')",
        "g_str": [
            "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = \"American Motor Company\")",
        "g_str": [
            "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT DISTINCT Model FROM car_names  JOIN car_makers ON car_names.MakeId = car_makers.Id  JOIN cars_data ON car_names.Id = cars_data.Id  WHERE car_makers.FullName = \"General Motors\" OR cars_data.Weight > 3500",
        "g_str": [
            "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000",
        "g_str": [
            "select distinct year from cars_data where weight between 3000 and 4000;",
            "car_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT MIN(Cylinders) FROM cars_data WHERE Id = (SELECT MakeId FROM car_names WHERE Model = \"volvo\") AND Accelerate = (SELECT MIN(Accelerate) FROM cars_data WHERE Id = (SELECT MakeId FROM car_names WHERE Model = \"volvo\"))",
        "g_str": [
            "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM car_makers WHERE Maker = \"Volvo\") ORDER BY Accelerate ASC LIMIT 1",
        "g_str": [
            "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)",
        "g_str": [
            "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)",
        "g_str": [
            "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT MakeId, Make FROM car_names WHERE Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND Cylinders < 4",
        "g_str": [
            "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 JOIN model_list AS T3 JOIN car_makers AS T4 ON T1.Id  =  T2.MakeId AND T2.Model  =  T3.Model AND T3.Maker  =  T4.Id WHERE T1.Weight < 3500 AND T4.Maker  !=  \"Ford Motor Company\"",
        "g_str": [
            "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 JOIN cars_data AS T3 JOIN car_makers AS T4 ON T1.ModelId  =  T2.MakeId AND T2.MakeId  =  T3.Id AND T3.Id  =  T4.Id WHERE T3.Weight < 3500 AND T4.Maker  !=  \"Ford Motor Company\"",
        "g_str": [
            "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT * FROM airlines WHERE Abbreviation = 'UAL'",
        "g_str": [
            "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
            "flight_2"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways'",
        "g_str": [
            "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways'",
        "g_str": [
            "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT DISTINCT Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.Abbreviation WHERE SourceAirport = 'AHD'",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT DISTINCT Airline FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE flights.DestAirport = 'AHD'",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT * FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200)",
        "g_str": [
            "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT FlightNo FROM flights WHERE Airline = 'United Airlines'",
        "g_str": [
            "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
            "flight_2"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Documents.Document_ID, Documents.Template_ID, Templates.Template_Details FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV'",
        "g_str": [
            "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT'",
        "g_str": [
            "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT DISTINCT T2.Template_Type_Description FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code  =  T3.Template_Type_Code",
        "g_str": [
            "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea'",
        "g_str": [
            "select other_details from paragraphs where paragraph_text like 'korea'",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",
        "g_str": [
            "select other_details from paragraphs where paragraph_text like 'korea'",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course.Course = \"math\"",
        "g_str": [
            "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
            "course_teach"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age ASC;",
        "g_str": [
            "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
            "museum_visit"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT p.winner_name  FROM matches AS m  JOIN players AS p ON m.winner_id = p.player_id  WHERE m.tourney_name = \"Australian Open\"  ORDER BY m.winner_rank_points DESC  LIMIT 1",
        "g_str": [
            "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name = 'Australian Open' AND m.winner_rank_points = (     SELECT MAX(winner_rank_points)     FROM matches     WHERE tourney_name = 'Australian Open' )",
        "g_str": [
            "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT DISTINCT name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'",
        "g_str": [
            "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
            "battle_death"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs WHERE department_name = 'engineering'",
        "g_str": [
            "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs WHERE department_name = 'engineering'",
        "g_str": [
            "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT course_name, course_id FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) < 2)",
        "g_str": [
            "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Students.first_name, Students.middle_name, Students.last_name, Students.student_id  FROM Students  JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id  JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id  GROUP BY Students.student_id  HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2  AND COUNT(DISTINCT Student_Enrolment.semester_id) = 1",
        "g_str": [
            "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT first_name, middle_name, last_name FROM Students WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor')",
        "g_str": [
            "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
            "student_transcripts_tracking"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = \"Bachelors\"",
        "g_str": [
            "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
            "student_transcripts_tracking"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.transcript_date, T2.* FROM transcripts AS T1 JOIN transcript_contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T1.transcript_date = (SELECT min(transcript_date) FROM transcripts)",
        "g_str": [
            "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT * FROM Cartoon WHERE Directed_by = (SELECT id FROM TV_Channel WHERE series_name = \"Ben Jones\")",
        "g_str": [
            "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
            "tvshow"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = (SELECT id FROM TV_Channel WHERE series_name = \"Joseph Kuhr\")",
        "g_str": [
            "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
            "tvshow"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT series_name FROM TV_Channel WHERE episode = \"A Love of a Lifetime\"",
        "g_str": [
            "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"",
        "g_str": [
            "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT DISTINCT Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_series.id WHERE Cartoon.Written_by = 'Todd Casey'",
        "g_str": [
            "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
            "tvshow"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number",
        "g_str": [
            "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
            "voter_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT SUM(SurfaceArea) FROM country WHERE Continent = \"Caribbean\"",
        "g_str": [
            "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
            "world_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba'",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT AVG(GNP), SUM(Population) FROM country WHERE Continent = \"North America\" AND GovernmentForm = \"Dependent Territory\"",
        "g_str": [
            "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT Continent) FROM countrylanguage WHERE Language = \"Chinese\" AND IsOfficial = \"T\"",
        "g_str": [
            "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' ORDER BY city.Population DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
        "g_str": [
            "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') AND IsOfficial = true",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = \"Beatrix\" LIMIT 1) AND IsOfficial = \"T\"",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT * FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = \"Europe\")",
        "g_str": [
            "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = \"Europe\")",
        "g_str": [
            "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT * FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')",
        "g_str": [
            "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT t1.Name FROM country AS t1 WHERE t1.Continent  =  \"Africa\" AND NOT EXISTS (SELECT * FROM country AS t2 WHERE t2.Continent  =  \"Asia\" AND t2.Population  >  t1.Population)",
        "g_str": [
            "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')",
        "g_str": [
            "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryCode FROM countrylanguage WHERE Language != 'English'",
        "g_str": [
            "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
            "world_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT city.Name FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'",
        "g_str": [
            "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Europe' AND NOT EXISTS (SELECT * FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code AND countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T')",
        "g_str": [
            "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia' AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese' AND IsOfficial = 'T'))",
        "g_str": [
            "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
            "world_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT country.Continent, SUM(country.Population), AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent HAVING AVG(country.LifeExpectancy) < 72",
        "g_str": [
            "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND CountryCode IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(*) = 1)",
        "g_str": [
            "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'",
        "g_str": [
            "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT orchestra.Orchestra FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID",
        "g_str": [
            "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
            "orchestra"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = 'Kyle'",
        "g_str": [
            "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT first_name, last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "g_str": [
            "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT P.first_name, P.last_name FROM Treatments AS T JOIN Professionals AS P ON T.professional_id = P.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "g_str": [
            "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE age = (SELECT min(age) FROM dogs))",
        "g_str": [
            "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT COUNT(*) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id",
        "g_str": [
            "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT COUNT(*) FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",
        "g_str": [
            "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = [provided code]",
        "g_str": [
            "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
            "real_estate_properties"
        ],
        "hardness": "medium"
    }
]