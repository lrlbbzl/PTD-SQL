[{"p_str": "SELECT T1.Name, T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age = (SELECT MIN(Age) FROM singer)", "g_str": ["SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Country FROM Singer JOIN singer_in_concert ON Singer.Singer_ID = singer_in_concert.Singer_ID WHERE Age > 20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Age > (SELECT avg(Age) FROM singer)", "g_str": ["SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM singer_in_concert WHERE concert_ID IN (SELECT concert_ID FROM concert WHERE Year = 2014))", "g_str": ["SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT T2.Name, T2.Country FROM concert AS T1 JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID JOIN singer AS T2 ON T3.Singer_ID = T2.Singer_ID WHERE T2.Song_Name LIKE '%Hey%'", "g_str": ["SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')", "g_str": ["SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID", "g_str": ["SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT petid FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'", "g_str": ["SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Weight < (SELECT avg(Weight) FROM cars_data)", "g_str": ["SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T2.Maker FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Id = T2.Id WHERE T1.Year = 1970", "g_str": ["SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970", "g_str": ["SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT car_makers.Maker, cars_data.Year  FROM car_makers  JOIN car_names ON car_makers.Id = car_names.MakeId  JOIN cars_data ON car_names.Model = cars_data.Id  WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data)", "g_str": ["SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Maker, T2.Year FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id ORDER BY T2.Year ASC LIMIT 1", "g_str": ["SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT Model FROM car_names  JOIN model_list ON car_names.Model = model_list.ModelId  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN countries ON car_makers.Country = countries.CountryId  JOIN continents ON countries.Continent = continents.ContId  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Year > 1980", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM car_makers WHERE Country = 'France'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM car_makers WHERE Country = 'France'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Model) FROM model_list AS T1 JOIN countries AS T2 ON T1.Maker = T2.CountryId WHERE T2.CountryName = 'USA'", "g_str": ["SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "car_1"], "hardness": "hard"}, {"p_str": "SELECT max(T1.Horsepower), T2.Maker FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3", "g_str": ["SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make", "g_str": ["SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT ModelId) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.FullName = \"American Motor Company\"", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Maker = 'American Motor Company'", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T3.Model FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN cars_data AS T3 ON T2.MakeId  =  T3.Id WHERE T1.FullName  =  \"General Motors\" OR T3.Weight  >  3500", "g_str": ["SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;", "g_str": ["select distinct year from cars_data where weight between 3000 and 4000;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT Cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = \"volvo\" ORDER BY Accelerate LIMIT 1", "g_str": ["SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT cylinders FROM cars_data WHERE id = (SELECT makeid FROM car_names WHERE model = (SELECT modelid FROM model_list WHERE maker = \"volvo\")) AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE id = (SELECT makeid FROM car_names WHERE model = (SELECT modelid FROM model_list WHERE maker = \"volvo\")))", "g_str": ["SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM cars_data WHERE accelerate  >  (SELECT max(horsepower) FROM cars_data)", "g_str": ["SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "car_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT max(Horsepower) FROM cars_data)", "g_str": ["SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "car_1"], "hardness": "hard"}, {"p_str": "SELECT car_names.MakeId, model_list.Maker, model_list.Model FROM car_names JOIN model_list ON car_names.Model = model_list.Model WHERE car_names.MakeId IN (     SELECT Id     FROM cars_data     WHERE Horsepower != (         SELECT MIN(Horsepower)         FROM cars_data     ) ) AND cars_data.Cylinders < 4", "g_str": ["select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T2.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  3500 AND NOT EXISTS (SELECT * FROM car_makers WHERE Maker = 'Ford Motor Company' AND T1.Model = T2.Model)", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Id WHERE T1.Weight  <  3500 AND T4.Maker  !=  \"Ford Motor Company\"", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT * FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200)", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE Airline = 'United Airlines'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE Airline = 'United Airlines'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Template_Details FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents)", "g_str": ["SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_Details = 'Presentation'", "g_str": ["SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT * FROM Paragraphs WHERE Paragraph_Text  =  \"Korea\"", "g_str": ["select other_details from paragraphs where paragraph_text like 'korea'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'", "g_str": ["select other_details from paragraphs where paragraph_text like 'korea'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Course = 'Math'", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age ASC", "g_str": ["SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date", "g_str": ["SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T2.first_name, T2.last_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' AND T1.winner_rank_points = (SELECT MAX(rankings.ranking_points) FROM rankings WHERE rankings.player_id = T1.winner_id)", "g_str": ["SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'", "g_str": ["SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT course_description FROM Courses JOIN Departments ON Courses.department_id = Departments.department_id WHERE department_name = 'Mathematics'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT course_id, course_name FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id, Courses.course_name HAVING COUNT(Sections.section_id) < 2", "g_str": ["SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT student_id, first_name, middle_name, last_name  FROM Students  JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id  WHERE Student_Enrolment.semester_id = [semester_id]  GROUP BY Students.student_id  HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2", "g_str": ["SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = \"Bachelor\"", "g_str": ["SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T2.student_id = T1.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id = T2.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'", "g_str": ["SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT * FROM Cartoon WHERE Directed_by = \"Ben Jones\"", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT TV_Channel.Content FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = \"Sky Radio\"", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT T2.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T1.series_name = \"Sky Radio\"", "g_str": ["SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Air_Date FROM TV_series WHERE Title = \"A Love of a Lifetime\"", "g_str": ["SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT T1.Package_Option ,  T1.series_name FROM TV_Channel AS T1 WHERE T1.Hight_definition_TV  =  true", "g_str": ["SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT TV_Channel.package_option, TV_series.name  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_Channel.Hight_definition_TV = true", "g_str": ["SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT t2.Country FROM Cartoon AS t1 JOIN TV_series AS t2 ON t1.id = t2.Channel JOIN TV_Channel AS t3 ON t2.Channel = t3.id WHERE t1.Written_by = \"Todd Casey\"", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id JOIN TV_series ON Cartoon.Channel = TV_series.Channel WHERE Cartoon.Written_by = 'Todd Casey'", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE VOTES.state = 'NY' OR VOTES.state = 'CA'", "g_str": ["SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT region FROM country WHERE name = 'Kabul'", "g_str": ["SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage WHERE CountryCode = \"ABW\" AND IsOfficial = \"T\" ORDER BY Percentage DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT sum(T1.Population), max(T1.GNP) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia'", "g_str": ["SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM city WHERE district = \"Gelderland\";", "g_str": ["SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT AVG(GNP), SUM(Population) FROM country WHERE Continent = 'North America' AND GovernmentForm LIKE '%US territory%'", "g_str": ["SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese' AND IsOfficial = 'T')", "g_str": ["SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.Continent = 'Asia'  ORDER BY Percentage DESC  LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM city WHERE CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') ORDER BY Population DESC LIMIT 1", "g_str": ["SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1", "g_str": ["SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT name ,  population ,  life_expectancy FROM country WHERE continent  =  'Asia' ORDER BY surface_area DESC LIMIT 1", "g_str": ["SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT AVG(LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language != 'English' AND IsOfficial = 'T'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "g_str": ["SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "g_str": ["SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Asia' AND Population  >  (SELECT max(Population) FROM country WHERE Continent  =  'Africa')", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "g_str": ["SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = \"Europe\" AND countrylanguage.Language != \"English\" AND countrylanguage.IsOfficial = \"T\"", "g_str": ["SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "world_1"], "hardness": "extra"}, {"p_str": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND (countrylanguage.Language != 'English' OR countrylanguage.IsOfficial != 'T')", "g_str": ["SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T' AND country.Continent = 'Asia'", "g_str": ["SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT governmentForm, SUM(population) FROM country WHERE LifeExpectancy > 72 GROUP BY governmentForm", "g_str": ["SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT country.Continent, SUM(country.Population) AS total_population, AVG(countrylanguage.Percentage * country.LifeExpectancy) AS average_life_expectancy FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent HAVING average_life_expectancy < 72", "g_str": ["SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM country AS c  JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  WHERE cl.Language = 'Spanish' AND cl.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')", "g_str": ["SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Code FROM countrylanguage WHERE Language = \"Spanish\" AND IsOfficial = \"T\" AND Percentage > 50", "g_str": ["SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)", "g_str": ["SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT P.first_name, P.last_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT avg(cost_of_treatment) FROM Treatments)", "g_str": ["SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT date_arrived, date_departed FROM Dogs INNER JOIN Reservations ON Dogs.dog_id = Reservations.Code", "g_str": ["SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.age  =  (SELECT MIN(age) FROM Dogs)", "g_str": ["SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT professional_id) FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id", "g_str": ["SELECT count(DISTINCT professional_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE Sales > 300000", "g_str": ["SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "singer"], "hardness": "medium"}, {"p_str": "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = [specified code]", "g_str": ["SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "real_estate_properties"], "hardness": "medium"}]