[{"p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT stadium.Name, COUNT(concert.concert_ID) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY concert.Stadium_ID, stadium.Name", "g_str": ["SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme", "g_str": ["SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID, singer.Name", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaximumAge FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT Student.StuID, COUNT(Has_Pet.PetID) AS num_pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID", "g_str": ["SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID", "g_str": ["select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1", "g_str": ["SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS num_countries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent", "g_str": ["SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent", "g_str": ["SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T1.FullName, T1.Id, COUNT(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName, T1.Id", "g_str": ["SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName", "g_str": ["SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS count FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT car_makers.FullName, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName", "g_str": ["select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)", "g_str": ["SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year", "g_str": ["SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY MPG DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT Make) DESC LIMIT 1", "g_str": ["SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT MakeId) DESC LIMIT 1", "g_str": ["SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.ModelId) > 3", "g_str": ["SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "select city, count(*) from airports join flights on airports.airportcode = flights.destairport group by city order by count(*) desc limit 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT airports.City FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY COUNT(flights.DestAirport) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT City FROM airports WHERE AirportCode = (SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City", "g_str": ["SELECT count(*) ,  city FROM employee GROUP BY city", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City", "g_str": ["SELECT count(*) ,  city FROM employee GROUP BY city", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location ORDER BY COUNT(Shop_ID)", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop GROUP BY Name HAVING Number_products > (SELECT AVG(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT T2.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT shop.Name, COUNT(hiring.Employee_ID) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID, shop.Name", "g_str": ["SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Template_ID, COUNT(Document_ID) FROM Documents GROUP BY Template_ID", "g_str": ["SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID", "g_str": ["SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1", "g_str": ["SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code", "g_str": ["SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "select t1.template_type_code, count(*) from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code group by t1.template_type_code", "g_str": ["SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Templates.Template_Type_Code, COUNT(Documents.Document_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code", "g_str": ["SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "select t1.template_type_code, count(*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code", "g_str": ["SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID ASC", "g_str": ["SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID ASC", "g_str": ["SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name, COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name", "g_str": ["SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name", "g_str": ["SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown ORDER BY COUNT(Teacher_ID)", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT teacher.Name, COUNT(course_arrange.Course_ID) AS num_courses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name", "g_str": ["SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "course_teach"], "hardness": "medium"}, {"p_str": "select t1.name, count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.teacher_id", "g_str": ["SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID HAVING COUNT(*) > 1", "g_str": ["SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT T1.Museum_ID, T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T2.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID ORDER BY MAX(T2.Num_of_Ticket) DESC LIMIT 1", "g_str": ["SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "museum_visit"], "hardness": "hard"}, {"p_str": "SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches", "g_str": ["SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(match_num) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT winner_name, winner_rank_points FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)", "g_str": ["SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT year, COUNT(*) FROM matches GROUP BY year", "g_str": ["SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT year, COUNT(*) FROM matches GROUP BY year", "g_str": ["SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY MAX(ranking_points) DESC LIMIT 1)", "g_str": ["SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT players.first_name, players.country_code, players.birth_date  FROM players  JOIN matches ON players.player_id = matches.winner_id  JOIN rankings ON players.player_id = rankings.player_id  ORDER BY rankings.ranking_points DESC  LIMIT 1", "g_str": ["SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT hand, COUNT(player_id) FROM players GROUP BY hand", "g_str": ["SELECT count(*) ,  hand FROM players GROUP BY hand", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT hand, COUNT(*) FROM players GROUP BY hand", "g_str": ["SELECT count(*) ,  hand FROM players GROUP BY hand", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT course_id, course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) <= 2)", "g_str": ["SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT semester_name, semester_id FROM Semesters WHERE semester_id = (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT degree_summary_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY course_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY course_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT transcript_date, transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT student_course_id, COUNT(transcript_id) FROM Transcript_Contents GROUP BY student_course_id ORDER BY COUNT(transcript_id) DESC LIMIT 1", "g_str": ["SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Country, COUNT(id) AS num_channels FROM TV_Channel GROUP BY Country ORDER BY num_channels DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "select language, count(*) from tv_channel group by language order by count(*) asc limit 1", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000", "g_str": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT area_code FROM AREA_CODE_STATE INNER JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state GROUP BY area_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY (SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT country.Name, COUNT(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code HAVING COUNT(countrylanguage.Language) >= 3", "g_str": ["SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "world_1"], "hardness": "medium"}, {"p_str": "SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District", "g_str": ["SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "world_1"], "hardness": "extra"}, {"p_str": "SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District", "g_str": ["SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72", "g_str": ["SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "g_str": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(T2.Orchestra_ID) > 1", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1)", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "extra"}, {"p_str": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "extra"}, {"p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company", "g_str": ["SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company", "g_str": ["SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1", "g_str": ["SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(*) > 1", "g_str": ["SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade ORDER BY grade ASC", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4 ORDER BY grade ASC", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT student_id, COUNT(*) FROM Friend GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT Highschooler.name, COUNT(Friend.friend_id) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID", "g_str": ["SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "hard"}, {"p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY SUM(T2.cost_of_treatment) ASC LIMIT 1", "g_str": ["SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT charge_type, charge_amount FROM Charges", "g_str": ["SELECT charge_type ,  charge_amount FROM Charges", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship ORDER BY COUNT(Singer_ID)", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["select citizenship from singer group by citizenship order by count(*) desc limit 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(*) > 1", "g_str": ["SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID", "g_str": ["SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "g_str": ["SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30", "g_str": ["SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)", "g_str": ["SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT stadium.Name, stadium.Location  FROM stadium  WHERE stadium.Stadium_ID IN (     SELECT concert.Stadium_ID      FROM concert      WHERE concert.Year = 2014 )  AND stadium.Stadium_ID IN (     SELECT concert.Stadium_ID      FROM concert      WHERE concert.Year = 2015 )", "g_str": ["SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2014) AND Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2015)", "g_str": ["SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' UNION SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog'", "g_str": ["SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  \"cat\" INTERSECT SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  \"dog\"", "g_str": ["select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = \"cat\" INTERSECT SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = \"dog\"", "g_str": ["SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat'))", "g_str": ["SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat'))", "g_str": ["SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat'))", "g_str": ["SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Cat')", "g_str": ["SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000", "g_str": ["select distinct year from cars_data where weight between 3000 and 4000;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)", "g_str": ["SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3) OR CountryId IN (SELECT Country FROM car_makers WHERE Maker = 'Fiat')", "g_str": ["select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT airlines.Airline FROM airlines JOIN flights AS f1 ON airlines.uid = f1.Airline JOIN flights AS f2 ON airlines.uid = f2.Airline JOIN airports AS a1 ON f1.SourceAirport = a1.AirportCode JOIN airports AS a2 ON f2.SourceAirport = a2.AirportCode WHERE a1.AirportCode = 'APG' AND a2.AirportCode = 'CVO'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = \"APG\" INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = \"CVO\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'CVO' AND flights.Airline NOT IN (SELECT flights.Airline FROM flights WHERE flights.SourceAirport = 'APG')", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO') EXCEPT SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG')", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DISTINCT SourceAirport FROM flights UNION SELECT DISTINCT DestAirport FROM flights)", "g_str": ["SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "g_str": ["SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "g_str": ["SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop EXCEPT SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID", "g_str": ["SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000", "g_str": ["SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT s1.District FROM shop s1 JOIN shop s2 ON s1.District = s2.District WHERE s1.Number_products < 3000 AND s2.Number_products > 10000", "g_str": ["SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents", "g_str": ["SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID  =  T3.Template_ID", "g_str": ["SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Ireland'", "g_str": ["SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher WHERE Age = 32 UNION SELECT Name FROM teacher WHERE Age = 33", "g_str": ["SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher EXCEPT SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID", "g_str": ["SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher EXCEPT SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID", "g_str": ["SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year < 2009) INTERSECT SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2011))", "g_str": ["SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT winner_name FROM matches WHERE year = 2013 AND winner_name IN (SELECT DISTINCT winner_name FROM matches WHERE year = 2016)", "g_str": ["SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT players.country_code, players.first_name  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE matches.tourney_name = 'WTA Championships'  AND EXISTS (     SELECT *      FROM matches      WHERE matches.winner_id = players.player_id      AND matches.tourney_name = 'Australian Open' )", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "wta_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT p.first_name, p.country_code  FROM players p  JOIN matches m1 ON p.player_id = m1.winner_id  JOIN matches m2 ON p.player_id = m2.winner_id  WHERE m1.tourney_name = 'WTA Championships'  AND m2.tourney_name = 'Australian Open'", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "wta_1"], "hardness": "extra"}, {"p_str": "SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'", "g_str": ["SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)", "g_str": ["SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)", "g_str": ["SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "g_str": ["select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT id FROM TV_Channel EXCEPT SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  \"Ben Jones\"", "g_str": ["SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')", "g_str": ["SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Name FROM people EXCEPT SELECT t1.Name FROM people AS t1 JOIN poker_player AS t2 ON t1.People_ID  =  t2.People_ID", "g_str": ["SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT area_code FROM AREA_CODE_STATE WHERE state IN (SELECT state FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling')) AND state IN (SELECT state FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss'))", "g_str": ["SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"French\"", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT c.Name FROM country c  JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French'", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" AND T2.IsOfficial = \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"French\" AND T2.IsOfficial = \"T\"", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT region FROM country WHERE country.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch'))", "g_str": ["SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT region FROM country WHERE country.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('Dutch', 'English'))", "g_str": ["SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'", "g_str": ["select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'", "g_str": ["SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'", "g_str": ["SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Orchestra FROM orchestra EXCEPT SELECT T1.Orchestra FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID", "g_str": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003", "g_str": ["SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT T1.Record_Company FROM orchestra AS T1 WHERE T1.Year_of_Founded  <  2003 INTERSECT SELECT T1.Record_Company FROM orchestra AS T1 WHERE T1.Year_of_Founded  >  2003", "g_str": ["SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT ID FROM Highschooler EXCEPT SELECT T1.student_id FROM Friend AS T1", "g_str": ["SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "network_1"], "hardness": "hard"}, {"p_str": "SELECT name FROM Highschooler EXCEPT SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id", "g_str": ["SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "network_1"], "hardness": "hard"}, {"p_str": "SELECT t1.ID FROM Highschooler AS t1 JOIN Friend AS t2 ON t1.ID  =  t2.student_id INTERSECT SELECT t1.ID FROM Highschooler AS t1 JOIN Likes AS t2 ON t1.ID  =  t2.liked_id", "g_str": ["SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "network_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT state FROM owners WHERE state IN (SELECT state FROM professionals)", "g_str": ["SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T1.state FROM Owners AS T1 INTERSECT SELECT DISTINCT T2.state FROM Professionals AS T2", "g_str": ["SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "g_str": ["SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "g_str": ["SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT name FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) > 1000)", "g_str": ["select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT first_name FROM (SELECT first_name FROM owners UNION SELECT first_name FROM professionals) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)", "g_str": ["SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT first_name FROM (SELECT first_name FROM owners UNION SELECT first_name FROM professionals) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)", "g_str": ["SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "g_str": ["SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "g_str": ["SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "g_str": ["SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "g_str": ["SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "g_str": ["SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM singer EXCEPT SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "g_str": ["SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "singer"], "hardness": "hard"}, {"p_str": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year  <  1945 INTERSECT SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year  >  1955", "g_str": ["SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955", "g_str": ["SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "singer"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT T2.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID", "g_str": ["SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT T2.series_name, T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = 'Ben Jones' INTERSECT SELECT T2.series_name, T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = 'Michael Chang'", "g_str": ["SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "tvshow"], "hardness": "extra"}, {"p_str": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age > 20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT Country FROM singer WHERE Age > 20", "g_str": ["SELECT DISTINCT country FROM singer WHERE age  >  20", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)", "g_str": ["SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "g_str": ["SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000", "g_str": ["SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM concert WHERE Year = 2014 OR Year = 2015", "g_str": ["SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015", "g_str": ["SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT s.Name, s.Capacity FROM concert AS c JOIN stadium AS s ON c.Stadium_ID = s.Stadium_ID WHERE c.Year >= 2014 GROUP BY c.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT T2.Name ,  T2.Capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T1.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1", "g_str": ["select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "concert_singer"], "hardness": "extra"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)", "g_str": ["SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)", "g_str": ["SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)", "g_str": ["SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT T2.Name FROM concert AS T1 JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID JOIN singer AS T2 ON T3.Singer_ID = T2.Singer_ID WHERE T1.Year = 2014", "g_str": ["SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Name, Country FROM singer WHERE Song_Name LIKE \"%Hey%\"", "g_str": ["SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Pets WHERE weight > 10", "g_str": ["SELECT count(*) FROM pets WHERE weight  >  10", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM pets WHERE weight > 10", "g_str": ["SELECT count(*) FROM pets WHERE weight  >  10", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T3.PetID  =  T2.PetID WHERE T1.Age  >  20", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(PetID) FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Age > 20)", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T2.PetType = \"dog\" AND T3.Sex = \"F\"", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Has_Pet  JOIN Pets ON Has_Pet.PetID = Pets.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = \"dog\" AND Student.Sex = \"female\"", "g_str": ["SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT PetID, weight FROM Pets WHERE pet_age > 1", "g_str": ["SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID, weight FROM Pets WHERE pet_age > 1", "g_str": ["SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT fname, age FROM student WHERE StuID IN (SELECT StuID FROM Has_Pet)", "g_str": ["SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID FROM HAS_PET AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T2.LName  =  'Smith'", "g_str": ["SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE LName = 'Smith')", "g_str": ["SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat' AND pet_age = 3))", "g_str": ["SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT LName FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat' AND pet_age = 3", "g_str": ["SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "g_str": ["select avg(age) from student where stuid not in (select stuid from has_pet)", "pets_1"], "hardness": "extra"}, {"p_str": "SELECT model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id = T2.makeid WHERE weight < (SELECT avg(weight) FROM cars_data)", "g_str": ["SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970", "g_str": ["SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model WHERE T1.Year  >  1980", "g_str": ["SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT COUNT(DISTINCT Model) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = \"USA\";", "g_str": ["SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "car_1"], "hardness": "hard"}, {"p_str": "SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4", "g_str": ["SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4", "g_str": ["SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974", "g_str": ["select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "car_1"], "hardness": "medium"}, {"p_str": "SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974", "g_str": ["select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Horsepower > 150", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Horsepower > 150", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980", "g_str": ["SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980", "g_str": ["select avg(horsepower) from cars_data where year  <  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT avg(T2.Edispl) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo'", "g_str": ["SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT avg(Edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'volvo')))", "g_str": ["SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders  >  4", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders > 4", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company');", "g_str": ["SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "car_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT model_list.Model FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.Model = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE car_makers.FullName = \"General Motors\" OR cars_data.Weight > 3500", "g_str": ["SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders > 6", "g_str": ["SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cars_data WHERE Cylinders > 6", "g_str": ["SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT makeid, make FROM car_names WHERE makeid NOT IN (SELECT id FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)) AND makeid IN (SELECT id FROM cars_data WHERE cylinders < 4)", "g_str": ["select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT MAX(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980", "g_str": ["select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "car_1"], "hardness": "medium"}, {"p_str": "SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980", "g_str": ["select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "car_1"], "hardness": "medium"}, {"p_str": "SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)", "g_str": ["SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT Country FROM airlines WHERE Airline = \"JetBlue Airways\";", "g_str": ["SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'", "g_str": ["SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'", "g_str": ["SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT Airline, Abbreviation FROM airlines WHERE Country = \"USA\"", "g_str": ["SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportCode, AirportName FROM airports WHERE City = \"Anthony\"", "g_str": ["SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'", "g_str": ["SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'", "g_str": ["SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airlines WHERE Country = \"USA\";", "g_str": ["SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM airlines WHERE Country = 'USA'", "g_str": ["SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT City, Country FROM airports WHERE AirportName = 'Alton'", "g_str": ["SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT City, Country FROM airports WHERE AirportName = 'Alton'", "g_str": ["SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE City = 'Aberdeen'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportName FROM airports WHERE City = 'Aberdeen'", "g_str": ["SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport = 'APG';", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport = 'APG'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = \"ATO\"", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = 'ATO'", "g_str": ["SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\";", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = \"Aberdeen\"", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights AS t1 JOIN airports AS t2 ON t1.SourceAirport  =  t2.AirportCode JOIN airports AS t3 ON t1.DestAirport  =  t3.AirportCode WHERE t2.City  =  'Aberdeen' AND t3.City  =  'Ashley'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways')", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE airline = 'United Airlines' AND destAirport = 'ASY'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY'", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights WHERE SourceAirport = 'AHD' AND Airline = 'United Airlines';", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE SourceAirport = \"AHD\" AND Airline = \"United Airlines\"", "g_str": ["SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T1.Airline = 'United Airlines' AND T2.City = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'Aberdeen'", "g_str": ["SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline JOIN airports AS source ON flights.SourceAirport = source.AirportCode JOIN airports AS dest ON flights.DestAirport = dest.AirportCode WHERE source.AirportCode = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT t1.Airline FROM flights AS t1 JOIN airports AS t2 ON t1.SourceAirport = t2.AirportCode WHERE t2.AirportCode = \"AHD\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD'", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT t1.Airline FROM flights AS t1 JOIN airports AS t2 ON t1.DestAirport = t2.AirportCode WHERE t2.AirportCode = \"AHD\"", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200)", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = \"United Airlines\")", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = \"APG\"", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport = \"APG\"", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport = 'APG'", "g_str": ["SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\"", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE SourceAirport = 'Aberdeen'", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\"", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT FlightNo FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')", "g_str": ["SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = \"Aberdeen\")", "g_str": ["SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = \"Aberdeen\" OR City = \"Abilene\")", "g_str": ["SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "flight_2"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)", "g_str": ["SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%'", "g_str": ["SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT document_name, template_id FROM documents WHERE document_description LIKE '%w%'", "g_str": ["SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = \"Robbin CV\";", "g_str": ["SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'", "g_str": ["SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT')", "g_str": ["SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'PPT'", "g_str": ["SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)", "g_str": ["SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')", "g_str": ["SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'", "g_str": ["SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Templates WHERE template_type_code = \"CV\"", "g_str": ["SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV'", "g_str": ["SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT version_number, template_type_code FROM templates WHERE version_number > 5", "g_str": ["SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT version_number, template_type_code FROM templates WHERE version_number > 5", "g_str": ["SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code FROM Templates WHERE Template_ID = (SELECT Template_ID FROM Documents WHERE Document_Name = 'Data base')", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT t2.Document_Name FROM Templates AS t1 JOIN Documents AS t2 ON t1.Template_ID  =  t2.Template_ID WHERE t1.Template_Type_Code  =  'BK'", "g_str": ["SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_Name FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')", "g_str": ["SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = \"AD\"", "g_str": ["SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'", "g_str": ["SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description = \"Book\"", "g_str": ["SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = \"Book\"", "g_str": ["SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT template_id FROM templates WHERE template_type_code IN (SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')", "g_str": ["SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';", "g_str": ["SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = 'Summer Show')", "g_str": ["SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')", "g_str": ["SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')", "g_str": ["SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')", "g_str": ["SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = \"Customer reviews\"", "g_str": ["SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT paragraph_text FROM Paragraphs WHERE document_id  =  (SELECT document_id FROM Documents WHERE document_name  =  'Customer reviews')", "g_str": ["SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT D.Document_ID FROM Documents AS D JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text IN ('Brazil', 'Ireland');", "g_str": ["SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban District\"", "g_str": ["select name from teacher where hometown != \"little lever urban district\"", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban District\"", "g_str": ["select name from teacher where hometown != \"little lever urban district\"", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher WHERE Age = 32 OR Age = 33", "g_str": ["SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)", "g_str": ["SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT T2.name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.teacher_id = T2.teacher_id JOIN course AS T3 ON T1.course_id = T3.course_id WHERE T3.course = 'math'", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'Math'", "g_str": ["SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM visitor WHERE Age < 30", "g_str": ["SELECT count(*) FROM visitor WHERE age  <  30", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC", "g_str": ["SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT AVG(Age) FROM visitor WHERE Level_of_membership  <=  4", "g_str": ["SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT museum_id, name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "g_str": ["SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009", "g_str": ["SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "museum_visit"], "hardness": "easy"}, {"p_str": "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'", "g_str": ["SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT Name FROM museum WHERE Num_of_Staff  >  (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010)", "g_str": ["SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "museum_visit"], "hardness": "hard"}, {"p_str": "SELECT SUM(visit.Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1", "g_str": ["SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > 2010)", "g_str": ["SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008", "g_str": ["SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA'", "g_str": ["SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA'", "g_str": ["SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016", "g_str": ["SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016", "g_str": ["SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE tourney_name = \"Australian Open\" ORDER BY winner_rank_points DESC LIMIT 1", "g_str": ["SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT winner_name  FROM matches  JOIN players ON matches.winner_id = players.player_id  JOIN rankings ON players.player_id = rankings.player_id  WHERE tourney_name = \"Australian Open\"  ORDER BY ranking_points DESC  LIMIT 1", "g_str": ["SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT COUNT(DISTINCT winner_id) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE hand = 'L' AND tourney_name = 'WTA Championships'", "g_str": ["SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured'", "g_str": ["SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'", "g_str": ["SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT id, name FROM battle WHERE id IN (SELECT lost_in_battle FROM ship WHERE ship_type = 'Brig')", "g_str": ["SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'", "g_str": ["SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT b.name, b.date FROM battle AS b JOIN ship AS s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'", "g_str": ["SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')", "g_str": ["SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT note FROM death WHERE note LIKE '%East%'", "g_str": ["SELECT note FROM death WHERE note LIKE '%East%'", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT course_description FROM courses WHERE course_name = 'math'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT course_description FROM Courses WHERE course_name LIKE '%math%'", "g_str": ["SELECT course_description FROM Courses WHERE course_name  =  'math'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\";", "g_str": ["SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\"", "g_str": ["SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE department_name = \"engineering\"", "g_str": ["SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id  =  T2.department_id WHERE department_name  =  \"engineering\"", "g_str": ["SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "g_str": ["SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "g_str": ["SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)", "g_str": ["SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'", "g_str": ["SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT cell_mobile_number FROM Students WHERE first_name = \"Timmothy\" AND last_name = \"Ward\";", "g_str": ["select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id AND T1.current_address_id != T2.address_id", "g_str": ["SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT first_name FROM Students JOIN Addresses AS A1 ON Students.permanent_address_id = A1.address_id JOIN Addresses AS A2 ON Students.current_address_id = A2.address_id WHERE A1.line_1 != A2.line_1 OR A1.line_2 != A2.line_2 OR A1.line_3 != A2.line_3 OR A1.city != A2.city OR A1.zip_postcode != A2.zip_postcode OR A1.state_province_county != A2.state_province_county OR A1.country != A2.country OR A1.other_address_details != A2.other_address_details", "g_str": ["SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT min(transcript_date), other_details FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id", "g_str": ["SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;", "g_str": ["SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT section_description FROM Sections WHERE section_name = \"h\"", "g_str": ["SELECT section_description FROM Sections WHERE section_name  =  'h'", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT first_name FROM Students WHERE student_id IN (SELECT student_id FROM Addresses WHERE country = 'Haiti') OR student_id IN (SELECT student_id FROM Students WHERE cell_mobile_number = '09700166582')", "g_str": ["select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\"", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'", "g_str": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Joseph Kuhr'", "g_str": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\"", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'", "g_str": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "g_str": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"", "g_str": ["SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM tv_channel WHERE language = \"English\"", "g_str": ["SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM tv_channel WHERE language = \"English\"", "g_str": ["SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT TV_Channel.series_name  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Title = \"The Rise of the Blue Beetle!\"", "g_str": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')", "g_str": ["SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = \"Sky Radio\"", "g_str": ["SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "g_str": ["SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT air_date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "g_str": ["SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "g_str": ["SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT weekly_rank FROM TV_series  JOIN TV_Channel ON TV_series.Channel = TV_Channel.id  WHERE Episode = \"A Love of a Lifetime\"", "g_str": ["SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = \"A Love of a Lifetime\"", "g_str": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = \"A Love of a Lifetime\"", "g_str": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\")", "g_str": ["SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "g_str": ["SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT pixel_aspect_ratio_PAR, country FROM TV_Channel WHERE language != 'English'", "g_str": ["SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT pixel_aspect_ratio_PAR, country FROM TV_Channel WHERE language != 'English'", "g_str": ["SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "g_str": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "g_str": ["SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200", "g_str": ["SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "g_str": ["SELECT Name FROM people WHERE Nationality != \"Russia\"", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name FROM people WHERE Nationality != 'Russia'", "g_str": ["SELECT Name FROM people WHERE Nationality != \"Russia\"", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "g_str": ["SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT MAX(created) FROM votes WHERE state = 'CA'", "g_str": ["SELECT max(created) FROM votes WHERE state  =  'CA'", "voter_1"], "hardness": "easy"}, {"p_str": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'", "g_str": ["SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "voter_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(vote_id) FROM VOTES WHERE state = 'NY' OR state = 'CA'", "g_str": ["SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "g_str": ["SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT created, state, phone_number FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling')", "g_str": ["SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'", "g_str": ["select contestant_name from contestants where contestant_name like \"%al%\"", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE IndepYear > 1950", "g_str": ["SELECT Name FROM country WHERE IndepYear  >  1950", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE IndepYear > 1950", "g_str": ["SELECT Name FROM country WHERE IndepYear  >  1950", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE governmentform = 'Republic'", "g_str": ["SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT SUM(SurfaceArea) FROM country WHERE Region = \"Caribbean\"", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT continent FROM country WHERE name = \"Anguilla\"", "g_str": ["SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Continent FROM country WHERE Name = \"Anguilla\"", "g_str": ["SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT region FROM country WHERE code  =  (SELECT CountryCode FROM city WHERE name  =  \"Kabul\")", "g_str": ["SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'", "g_str": ["SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Population, LifeExpectancy FROM country WHERE Name = \"Brazil\"", "g_str": ["SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT region, population FROM country WHERE name = 'Angola'", "g_str": ["SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT region, population FROM country WHERE name = 'Angola'", "g_str": ["SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE Continent = \"Asia\" ORDER BY LifeExpectancy ASC LIMIT 1", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT sum(population) ,  max(GNP) FROM country WHERE continent  =  \"Asia\"", "g_str": ["SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = \"Africa\" AND GovernmentForm = \"Republic\"", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'", "g_str": ["SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT sum(Population) FROM city WHERE District = \"Gelderland\";", "g_str": ["SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT sum(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = \"Gelderland\"", "g_str": ["SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm = 'US territory'", "g_str": ["SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = \"Africa\";", "g_str": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "g_str": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM countrylanguage WHERE CountryCode  =  'ABW'", "g_str": ["SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')", "g_str": ["SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'", "g_str": ["SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'", "g_str": ["SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'", "g_str": ["SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(T2.Language)  =  1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(T2.Language)  =  1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1", "g_str": ["SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  \"English\" AND IsOfficial  =  \"T\")", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "g_str": ["SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English')", "g_str": ["SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT count(DISTINCT Language) FROM countrylanguage WHERE IsOfficial  =  \"T\" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)", "g_str": ["SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT count(DISTINCT Language) FROM countrylanguage WHERE IsOfficial  =  \"T\" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)", "g_str": ["SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE Continent  =  'Africa' AND Population  <  (SELECT min(Population) FROM country WHERE Continent  =  'Asia')", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT country.Name FROM country WHERE country.Continent = 'Asia' AND country.Population > (SELECT MAX(country.Population) FROM country WHERE country.Continent = 'Africa')", "g_str": ["SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")", "world_1"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'", "g_str": ["SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Code FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English')", "g_str": ["SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT DISTINCT city.Name FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = \"Asia\" AND countrylanguage.Language = \"Chinese\" AND countrylanguage.IsOfficial = \"T\"", "g_str": ["select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "world_1"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia'", "g_str": ["SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM country WHERE Continent = 'Asia'", "g_str": ["SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000", "g_str": ["SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000", "g_str": ["SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000", "g_str": ["select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "world_1"], "hardness": "hard"}, {"p_str": "SELECT sum(Population), avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "g_str": ["select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "g_str": ["SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "g_str": ["select name from city where population between 160000 and 900000", "world_1"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Nationality != \"USA\"", "g_str": ["SELECT Name FROM conductor WHERE Nationality != 'USA'", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT name FROM conductor WHERE nationality != 'USA'", "g_str": ["SELECT Name FROM conductor WHERE Nationality != 'USA'", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT MAX(share), MIN(share) FROM performance WHERE type != 'Live final'", "g_str": ["SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T1.Year_of_Founded > 2008", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "g_str": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT COUNT(Orchestra_ID) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "g_str": ["SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM orchestra WHERE major_record_format IN ('CD', 'DVD')", "g_str": ["SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM highschooler WHERE name = \"Kyle\"", "g_str": ["SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler WHERE grade = 10", "g_str": ["SELECT name FROM Highschooler WHERE grade  =  10", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler WHERE grade = 10", "g_str": ["SELECT name FROM Highschooler WHERE grade  =  10", "network_1"], "hardness": "easy"}, {"p_str": "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "g_str": ["SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "network_1"], "hardness": "easy"}, {"p_str": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "g_str": ["SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)", "g_str": ["SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "network_1"], "hardness": "medium"}, {"p_str": "SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.friend_id = Highschooler.ID WHERE Friend.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "g_str": ["SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM friend AS T1 JOIN highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Kyle\"", "g_str": ["SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "g_str": ["SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING T1.grade  >  5 AND COUNT(T2.friend_id)  >=  2", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Kyle\"", "g_str": ["SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = \"Kyle\")", "g_str": ["SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "network_1"], "hardness": "medium"}, {"p_str": "SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "g_str": ["SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "network_1"], "hardness": "hard"}, {"p_str": "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "g_str": ["SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "network_1"], "hardness": "extra"}, {"p_str": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "g_str": ["SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments)", "g_str": ["SELECT count(DISTINCT professional_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT professional_id) FROM Treatments", "g_str": ["SELECT count(DISTINCT professional_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'", "g_str": ["SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT T1.role_code, T1.street, T1.city, T1.state FROM Professionals AS T1 WHERE T1.city LIKE '%West%'", "g_str": ["SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'", "g_str": ["SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE \"%North%\"", "g_str": ["SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT count(*) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)", "g_str": ["SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)", "g_str": ["SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "g_str": ["SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM treatments)", "g_str": ["select count(*) from dogs where dog_id not in ( select dog_id from treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)", "g_str": ["SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)", "g_str": ["SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "g_str": ["SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "g_str": ["SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1", "g_str": ["SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1", "g_str": ["SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "g_str": ["SELECT Name FROM singer WHERE Citizenship != \"France\"", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer WHERE Citizenship != 'French'", "g_str": ["SELECT Name FROM singer WHERE Citizenship != \"France\"", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949", "g_str": ["SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949", "g_str": ["SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales  >  300000)", "g_str": ["SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "singer"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000", "g_str": ["SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "singer"], "hardness": "medium"}, {"p_str": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  'AirCon'", "g_str": ["SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "real_estate_properties"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "concert_singer"], "hardness": "easy"}, {"p_str": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC", "g_str": ["SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC", "g_str": ["SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = \"France\"", "g_str": ["SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = \"France\"", "g_str": ["SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT AVG(capacity), MAX(capacity) FROM stadium", "g_str": ["select avg(capacity) ,  max(capacity) from stadium", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT concert_Name, Theme, COUNT(Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID", "g_str": ["select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)", "g_str": ["select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)", "g_str": ["select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT COUNT(DISTINCT PetType) FROM Pets", "g_str": ["SELECT count(DISTINCT pettype) FROM pets", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT PetType) FROM Pets", "g_str": ["SELECT count(DISTINCT pettype) FROM pets", "pets_1"], "hardness": "easy"}, {"p_str": "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)", "g_str": ["SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)", "g_str": ["SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM continents", "g_str": ["SELECT count(*) FROM CONTINENTS;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM continents", "g_str": ["SELECT count(*) FROM CONTINENTS;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM countries", "g_str": ["SELECT count(*) FROM COUNTRIES;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM countries", "g_str": ["SELECT count(*) FROM COUNTRIES;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT Model FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY Horsepower ASC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT Model FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY Horsepower ASC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName", "g_str": ["SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)", "g_str": ["SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year", "g_str": ["SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY MPG DESC LIMIT 1", "g_str": ["select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT COUNT(*) FROM cars_data WHERE Year = 1980", "g_str": ["SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "car_1"], "hardness": "easy"}, {"p_str": "SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1", "g_str": ["SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1", "g_str": ["SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Airline, Abbreviation FROM airlines WHERE Country = \"USA\"", "g_str": ["SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT Airline) FROM airlines", "g_str": ["SELECT count(*) FROM AIRLINES", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM airlines", "g_str": ["SELECT count(*) FROM AIRLINES", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM airports", "g_str": ["SELECT count(*) FROM AIRPORTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM airports", "g_str": ["SELECT count(*) FROM AIRPORTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM flights", "g_str": ["SELECT count(*) FROM FLIGHTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM flights", "g_str": ["SELECT count(*) FROM FLIGHTS", "flight_2"], "hardness": "easy"}, {"p_str": "SELECT AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY COUNT(flights.FlightNo) ASC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT COUNT(*) FROM employee", "g_str": ["SELECT count(*) FROM employee", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM employee", "g_str": ["SELECT count(*) FROM employee", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT Name FROM employee ORDER BY Age ASC", "g_str": ["SELECT name FROM employee ORDER BY age", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT Name FROM employee ORDER BY Age ASC", "g_str": ["SELECT name FROM employee ORDER BY age", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT MIN(number_products), MAX(number_products) FROM shop", "g_str": ["SELECT min(Number_products) ,  max(Number_products) FROM shop", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT MIN(Number_products), MAX(Number_products) FROM shop", "g_str": ["SELECT min(Number_products) ,  max(Number_products) FROM shop", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT name, location, district FROM shop ORDER BY number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT name FROM employee INNER JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE bonus = (SELECT MAX(bonus) FROM evaluation)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT SUM(bonus) FROM evaluation", "g_str": ["SELECT sum(bonus) FROM evaluation", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT SUM(Bonus) FROM evaluation", "g_str": ["SELECT sum(bonus) FROM evaluation", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT * FROM hiring", "g_str": ["SELECT * FROM hiring", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT * FROM hiring", "g_str": ["SELECT * FROM hiring", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Location) FROM shop", "g_str": ["SELECT count(DISTINCT LOCATION) FROM shop", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Location) FROM shop", "g_str": ["SELECT count(DISTINCT LOCATION) FROM shop", "employee_hire_evaluation"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM documents", "g_str": ["SELECT count(*) FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM documents", "g_str": ["SELECT count(*) FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Document_ID, Document_Name, Document_Description FROM Documents", "g_str": ["SELECT document_id ,  document_name ,  document_description FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID, Document_Name, Document_Description FROM Documents", "g_str": ["SELECT document_id ,  document_name ,  document_description FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT Template_ID) FROM Documents", "g_str": ["SELECT count(DISTINCT template_id) FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Template_ID) FROM Documents", "g_str": ["SELECT count(DISTINCT template_id) FROM Documents", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Templates", "g_str": ["SELECT count(*) FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM templates", "g_str": ["SELECT count(*) FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates", "g_str": ["SELECT template_id ,  version_number ,  template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates", "g_str": ["SELECT template_id ,  version_number ,  template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Template_Type_Code FROM Templates", "g_str": ["SELECT DISTINCT template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code FROM Ref_Template_Types", "g_str": ["SELECT DISTINCT template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT MIN(Version_Number), Template_Type_Code FROM Templates", "g_str": ["SELECT min(Version_Number) ,  template_type_code FROM Templates", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types", "g_str": ["SELECT template_type_code ,  template_type_description FROM Ref_template_types", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types", "g_str": ["SELECT template_type_code ,  template_type_description FROM Ref_template_types", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))", "g_str": ["SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM paragraphs", "g_str": ["SELECT count(*) FROM Paragraphs", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM paragraphs", "g_str": ["SELECT count(*) FROM Paragraphs", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM teacher", "g_str": ["SELECT count(*) FROM teacher", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM teacher", "g_str": ["SELECT count(*) FROM teacher", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher ORDER BY Age ASC", "g_str": ["SELECT Name FROM teacher ORDER BY Age ASC", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Name FROM teacher ORDER BY Age ASC", "g_str": ["SELECT Name FROM teacher ORDER BY Age ASC", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT age, hometown FROM teacher", "g_str": ["SELECT Age ,  Hometown FROM teacher", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT age, hometown FROM teacher", "g_str": ["SELECT Age ,  Hometown FROM teacher", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT name, course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC", "g_str": ["SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)", "g_str": ["SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "museum_visit"], "hardness": "hard"}, {"p_str": "SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit", "g_str": ["SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM players", "g_str": ["SELECT count(*) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM players", "g_str": ["SELECT count(*) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM matches", "g_str": ["SELECT count(*) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM matches", "g_str": ["SELECT count(*) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT AVG(loser_age), AVG(winner_age) FROM matches", "g_str": ["SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT AVG(winner_rank) FROM matches", "g_str": ["SELECT avg(winner_rank) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT AVG(winner_rank) FROM matches", "g_str": ["SELECT avg(winner_rank) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT country_code) FROM players", "g_str": ["SELECT count(DISTINCT country_code) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT country_code) FROM players", "g_str": ["SELECT count(DISTINCT country_code) FROM players", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT loser_name) FROM matches", "g_str": ["SELECT count(DISTINCT loser_name) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT loser_name) FROM matches", "g_str": ["SELECT count(DISTINCT loser_name) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)", "g_str": ["SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)", "g_str": ["SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, last_name FROM players ORDER BY birth_date", "g_str": ["SELECT first_name ,  last_name FROM players ORDER BY birth_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)", "g_str": ["SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, AVG(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name", "g_str": ["SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, SUM(ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name", "g_str": ["SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT winner_name, winner_rank FROM matches  JOIN players ON matches.winner_id = players.player_id  ORDER BY winner_age ASC LIMIT 3", "g_str": ["SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT winner_name, winner_rank FROM matches  JOIN players ON matches.winner_id = players.player_id  ORDER BY winner_age ASC  LIMIT 3", "g_str": ["SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT name, tonnage FROM ship ORDER BY name DESC", "g_str": ["SELECT name ,  tonnage FROM ship ORDER BY name DESC", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT MAX(killed), MIN(killed) FROM death", "g_str": ["SELECT max(killed) ,  min(killed) FROM death", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT AVG(injured) FROM death", "g_str": ["SELECT avg(injured) FROM death", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT result) FROM battle", "g_str": ["SELECT count(DISTINCT RESULT) FROM battle", "battle_death"], "hardness": "easy"}, {"p_str": "SELECT line_1, line_2 FROM addresses", "g_str": ["SELECT line_1 ,  line_2 FROM addresses", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT line_1, line_2 FROM addresses", "g_str": ["SELECT line_1 ,  line_2 FROM addresses", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM Courses", "g_str": ["SELECT count(*) FROM Courses", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Courses", "g_str": ["SELECT count(*) FROM Courses", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs", "g_str": ["SELECT count(DISTINCT department_id) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs", "g_str": ["SELECT count(DISTINCT department_id) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs", "g_str": ["SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs", "g_str": ["SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT section_name, section_description FROM Sections", "g_str": ["SELECT section_name ,  section_description FROM Sections", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT section_name, section_description FROM Sections", "g_str": ["SELECT section_name ,  section_description FROM Sections", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT section_name FROM sections ORDER BY section_name DESC", "g_str": ["SELECT section_name FROM Sections ORDER BY section_name DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT section_name FROM sections ORDER BY section_name DESC", "g_str": ["SELECT section_name FROM Sections ORDER BY section_name DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "g_str": ["SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT course_name FROM Courses INNER JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id", "g_str": ["SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)", "g_str": ["SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_left ASC LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_left ASC LIMIT 1", "g_str": ["SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT AVG(transcript_date) FROM Transcripts", "g_str": ["SELECT avg(transcript_date) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT AVG(transcript_date) FROM Transcripts", "g_str": ["SELECT avg(transcript_date) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "g_str": ["SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM Transcripts", "g_str": ["SELECT count(*) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Transcripts", "g_str": ["SELECT count(*) FROM Transcripts", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "g_str": ["SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT transcript_date, transcript_id FROM transcripts  WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents  GROUP BY transcript_id  ORDER BY COUNT(*) ASC  LIMIT 1)", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT COUNT(DISTINCT current_address_id) FROM Students", "g_str": ["SELECT count(DISTINCT current_address_id) FROM Students", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon ORDER BY Title ASC", "g_str": ["SELECT Title FROM Cartoon ORDER BY title", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title FROM Cartoon ORDER BY Title ASC", "g_str": ["SELECT Title FROM Cartoon ORDER BY title", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "g_str": ["SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "g_str": ["SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT content) FROM TV_Channel", "g_str": ["SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel", "g_str": ["SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3", "g_str": ["SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT MIN(Share), MAX(Share) FROM TV_series", "g_str": ["SELECT max(SHARE) , min(SHARE) FROM TV_series;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT MAX(Share), MIN(Share) FROM TV_series", "g_str": ["SELECT max(SHARE) , min(SHARE) FROM TV_series;", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1", "g_str": ["select production_code ,  channel from cartoon order by original_air_date desc limit 1", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1", "g_str": ["select production_code ,  channel from cartoon order by original_air_date desc limit 1", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM poker_player", "g_str": ["SELECT count(*) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM poker_player", "g_str": ["SELECT count(*) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT earnings FROM poker_player ORDER BY earnings DESC", "g_str": ["SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT earnings FROM poker_player ORDER BY earnings DESC", "g_str": ["SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT final_table_made, best_finish FROM poker_player", "g_str": ["SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT final_table_made, best_finish FROM poker_player", "g_str": ["SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT AVG(Earnings) FROM poker_player", "g_str": ["SELECT avg(Earnings) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT AVG(Earnings) FROM poker_player", "g_str": ["SELECT avg(Earnings) FROM poker_player", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT money_rank FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player)", "g_str": ["SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT money_rank FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player)", "g_str": ["SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT name FROM people INNER JOIN poker_player ON people.People_ID = poker_player.People_ID", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Name FROM people INNER JOIN poker_player ON people.People_ID = poker_player.People_ID", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY final_table_made ASC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT birth_date FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY earnings ASC LIMIT 1", "g_str": ["SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT birth_date FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY earnings ASC LIMIT 1", "g_str": ["SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT money_rank FROM poker_player  INNER JOIN people ON poker_player.People_ID = people.People_ID  ORDER BY height DESC LIMIT 1", "g_str": ["SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT money_rank FROM poker_player  WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)", "g_str": ["SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY earnings DESC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT name FROM people INNER JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC", "g_str": ["SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC", "g_str": ["SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT Nationality) FROM people", "g_str": ["SELECT count(DISTINCT Nationality) FROM people", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Nationality) FROM people", "g_str": ["SELECT count(DISTINCT Nationality) FROM people", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT contestant_number, contestant_name FROM contestants ORDER BY contestant_name DESC", "g_str": ["SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT vote_id, phone_number, state FROM votes", "g_str": ["SELECT vote_id ,  phone_number ,  state FROM votes", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE", "g_str": ["SELECT max(area_code) ,  min(area_code) FROM area_code_state", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT DISTINCT state, created FROM votes", "g_str": ["SELECT DISTINCT state ,  created FROM votes", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY count(*) ASC LIMIT 1)", "g_str": ["SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT COUNT(DISTINCT Language) FROM countrylanguage", "g_str": ["SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "world_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Language) FROM countrylanguage", "g_str": ["SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "world_1"], "hardness": "easy"}, {"p_str": "select country.name from country join (select countrycode, count(*) from countrylanguage group by countrycode order by count(*) desc limit 1) as lang_count on country.code = lang_count.countrycode", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT COUNT(DISTINCT country.Continent) FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE countrylanguage.Language = 'Chinese'", "g_str": ["SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "world_1"], "hardness": "medium"}, {"p_str": "SELECT country.Name, country.Population, country.LifeExpectancy  FROM country  WHERE country.Continent = 'Asia'  ORDER BY country.SurfaceArea DESC  LIMIT 1", "g_str": ["SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT country.Population, country.Name, country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1", "g_str": ["SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1", "g_str": ["SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "g_str": ["SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "g_str": ["SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "g_str": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "world_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM conductor", "g_str": ["SELECT count(*) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM conductor", "g_str": ["SELECT count(*) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Age ASC", "g_str": ["SELECT Name FROM conductor ORDER BY Age ASC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Age", "g_str": ["SELECT Name FROM conductor ORDER BY Age ASC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "g_str": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT AVG(Attendance) FROM show", "g_str": ["SELECT avg(Attendance) FROM SHOW", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT AVG(Attendance) FROM show", "g_str": ["SELECT avg(Attendance) FROM SHOW", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT MAX(share), MIN(share) FROM performance WHERE type <> \"Live final\"", "g_str": ["SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT Nationality) FROM conductor", "g_str": ["SELECT count(DISTINCT Nationality) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT Nationality) FROM conductor", "g_str": ["SELECT count(DISTINCT Nationality) FROM conductor", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT conductor.name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id", "g_str": ["SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT conductor.name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id", "g_str": ["SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY count(*) ASC", "g_str": ["SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM Highschooler", "g_str": ["SELECT count(*) FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM Highschooler", "g_str": ["SELECT count(*) FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name, grade FROM Highschooler", "g_str": ["SELECT name ,  grade FROM Highschooler", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name, grade FROM Highschooler", "g_str": ["SELECT name ,  grade FROM Highschooler", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler", "g_str": ["SELECT grade FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler", "g_str": ["SELECT grade FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler ORDER BY (SELECT COUNT(*) FROM Friend WHERE Friend.student_id = Highschooler.ID OR Friend.friend_id = Highschooler.ID) DESC LIMIT 1", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "g_str": ["SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "network_1"], "hardness": "hard"}, {"p_str": "SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "g_str": ["SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "g_str": ["SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "dog_kennels"], "hardness": "hard"}, {"p_str": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id", "g_str": ["SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id", "g_str": ["SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT cost_of_treatment, treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code", "g_str": ["SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT cost_of_treatment, treatment_type_description FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code", "g_str": ["SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id", "g_str": ["SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "g_str": ["SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT date_arrived, date_departed FROM dogs", "g_str": ["SELECT date_arrived ,  date_departed FROM Dogs", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT date_arrived, date_departed FROM Dogs", "g_str": ["SELECT date_arrived ,  date_departed FROM Dogs", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT dog_id) FROM Treatments", "g_str": ["SELECT count(DISTINCT dog_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT dog_id) FROM treatments", "g_str": ["SELECT count(DISTINCT dog_id) FROM Treatments", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1", "g_str": ["SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1", "g_str": ["SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT AVG(age) FROM dogs", "g_str": ["SELECT avg(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT AVG(age) FROM dogs", "g_str": ["SELECT avg(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT MAX(age) FROM dogs", "g_str": ["SELECT max(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT MAX(age) FROM dogs", "g_str": ["SELECT max(age) FROM Dogs", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT charge_type, charge_amount FROM Charges", "g_str": ["SELECT charge_type ,  charge_amount FROM Charges", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT MAX(charge_amount) FROM charges", "g_str": ["SELECT max(charge_amount) FROM Charges", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1", "g_str": ["SELECT max(charge_amount) FROM Charges", "dog_kennels"], "hardness": "easy"}, {"p_str": "SELECT email_address, cell_number, home_phone FROM Professionals", "g_str": ["SELECT email_address ,  cell_number ,  home_phone FROM professionals", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT email_address, cell_number, home_phone FROM Professionals", "g_str": ["SELECT email_address ,  cell_number ,  home_phone FROM professionals", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "singer"], "hardness": "easy"}, {"p_str": "SELECT COUNT(*) FROM singer", "g_str": ["SELECT count(*) FROM singer", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "singer"], "hardness": "easy"}, {"p_str": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "singer"], "hardness": "easy"}, {"p_str": "SELECT Birth_Year, Citizenship FROM singer", "g_str": ["SELECT Birth_Year ,  Citizenship FROM singer", "singer"], "hardness": "medium"}, {"p_str": "SELECT Birth_Year, Citizenship FROM singer", "g_str": ["SELECT Birth_Year ,  Citizenship FROM singer", "singer"], "hardness": "medium"}, {"p_str": "SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "singer"], "hardness": "medium"}, {"p_str": "SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1", "g_str": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "singer"], "hardness": "medium"}, {"p_str": "SELECT song.title, singer.name FROM song JOIN singer ON song.singer_id = singer.singer_id", "g_str": ["SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "singer"], "hardness": "medium"}, {"p_str": "SELECT title, name FROM song JOIN singer ON song.singer_id = singer.singer_id", "g_str": ["SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "singer"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM Other_Available_Features", "g_str": ["SELECT count(*) FROM Other_Available_Features", "real_estate_properties"], "hardness": "easy"}]