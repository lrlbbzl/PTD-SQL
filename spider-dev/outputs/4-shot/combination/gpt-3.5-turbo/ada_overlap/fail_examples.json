[{"p_str": "SELECT Stadium_ID, COUNT(concert_ID) FROM concert GROUP BY Stadium_ID", "g_str": ["SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT CountryName FROM countries WHERE Continent = 'Europe' GROUP BY CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3", "g_str": ["SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT CountryName FROM countries WHERE Continent = 'Europe' GROUP BY CountryName HAVING COUNT(DISTINCT Maker) >= 3", "g_str": ["SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT Maker, Id FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 3)", "g_str": ["SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T1.CountryName, COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(*) > 2", "g_str": ["select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "car_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2) AS countries_with_more_than_2_car_makers", "g_str": ["select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "car_1"], "hardness": "medium"}, {"p_str": "SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Abbreviation, Country FROM airlines WHERE uid = (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)", "g_str": ["SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T1.Abbreviation, T2.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline = T2.Airline GROUP BY T2.Airline ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT hiring.Shop_ID, shop.Name, COUNT(hiring.Employee_ID) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID, shop.Name", "g_str": ["SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Hometown FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT Hometown FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT T2.ID, T2.Name, T2.Level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID GROUP BY T2.ID, T2.Name, T2.Level_of_membership ORDER BY SUM(T1.Total_spent) DESC LIMIT 1", "g_str": ["SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT tourney_name FROM matches GROUP BY tourney_id HAVING COUNT(*) > 10", "g_str": ["SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT tourney_name FROM matches GROUP BY tourney_id HAVING COUNT(*) > 10", "g_str": ["SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT first_name, country_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT first_name, country_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT p.first_name, p.last_name, r.ranking_points  FROM players p  JOIN matches m ON p.player_id = m.winner_id  JOIN rankings r ON p.player_id = r.player_id  WHERE p.player_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id", "g_str": ["SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date", "g_str": ["SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date ORDER BY ranking_date", "g_str": ["SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T1.id, T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10", "g_str": ["SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "battle_death"], "hardness": "hard"}, {"p_str": "SELECT T2.id, T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T1.caused_by_ship_id ORDER BY SUM(T1.injured) DESC LIMIT 1", "g_str": ["SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT department_name, department_id FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY department_name, department_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT department_id, department_name FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.semester_id, T2.semester_name FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(*) DESC", "g_str": ["SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT first_name, middle_name, last_name, student_id FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment GROUP BY student_id HAVING COUNT(DISTINCT degree_program_id) = 2 AND COUNT(DISTINCT semester_id) = 1)", "g_str": ["SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT degree_summary_name, COUNT(*) FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT degree_program_id, degree_summary_name FROM Degree_Programs  JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id  GROUP BY degree_program_id  ORDER BY COUNT(*) DESC  LIMIT 1", "g_str": ["SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT Students.student_id, Students.first_name, Students.middle_name, Students.last_name, COUNT(Student_Enrolment.student_enrolment_id) AS num_enrollments  FROM Students  JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id  GROUP BY Students.student_id  ORDER BY num_enrollments DESC  LIMIT 1", "g_str": ["SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "select s.first_name, s.middle_name, s.last_name, se.student_id, count(*) from students as s join student_enrolment as se on s.student_id = se.student_id group by se.student_id order by count(*) desc limit 1", "g_str": ["SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "select address_id, line_1, line_2, line_3 from addresses where address_id in (select current_address_id from students group by current_address_id having count(*) = (select max(count) from (select count(*) from students group by current_address_id) as temp))", "g_str": ["SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT address_id, line_1, line_2 FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students UNION SELECT permanent_address_id FROM Students) GROUP BY address_id, line_1, line_2 ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "select course_id, count(*) from student_enrolment_courses group by course_id order by count(*) desc limit 1", "g_str": ["SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)", "g_str": ["SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2", "g_str": ["SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.People_ID ORDER BY COUNT(T2.Final_Table_Made) ASC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player GROUP BY People_ID HAVING COUNT(*) >= 2) GROUP BY Nationality", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "select countrycode, count(*) from countrylanguage group by countrycode having count(*) > 2", "g_str": ["SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "world_1"], "hardness": "medium"}, {"p_str": "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform", "g_str": ["SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code) GROUP BY T1.Code", "g_str": ["SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)", "g_str": ["SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')", "g_str": ["SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "world_1"], "hardness": "extra"}, {"p_str": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')", "g_str": ["SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "select major_record_format, count(*) from orchestra group by major_record_format order by count(*) desc", "g_str": ["SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.name", "g_str": ["SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "select h.name, count(*) from highschooler as h join likes as l on h.id = l.student_id group by h.name", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "select t1.name, count(*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t1.name", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT owner_id, first_name, last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY owner_id, first_name, last_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "select owner_id, first_name, last_name from owners where owner_id in (select owner_id from dogs group by owner_id having count(*) = (select max(count) from (select count(*) from dogs group by owner_id) as dog_count))", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT owner_id, last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY owner_id, last_name ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT owner_id, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) = (SELECT MAX(total_cost) FROM (SELECT dog_id, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY dog_id) AS T)))", "g_str": ["SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT owner_id, zip_code FROM Owners WHERE owner_id = (SELECT owner_id FROM Treatments GROUP BY owner_id ORDER BY SUM(cost_of_treatment) DESC LIMIT 1)", "g_str": ["SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT owner_id, zip_code  FROM Owners  WHERE owner_id IN (     SELECT owner_id      FROM Dogs      WHERE owner_id IN (         SELECT owner_id          FROM Treatments          GROUP BY owner_id          ORDER BY SUM(cost_of_treatment) DESC          LIMIT 1     ) )", "g_str": ["SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)", "g_str": ["SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT professional_id, cell_number  FROM Professionals  WHERE professional_id IN (     SELECT professional_id      FROM Treatments      GROUP BY professional_id      HAVING COUNT(DISTINCT treatment_type_code) >= 2 )", "g_str": ["SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT breed_name, size_description FROM Breeds, Sizes", "g_str": ["SELECT DISTINCT breed_code ,  size_code FROM dogs", "dog_kennels"], "hardness": "medium"}]