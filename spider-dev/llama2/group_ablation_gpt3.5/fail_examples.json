[{"p_str": "SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)", "g_str": ["SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT stadium.Name, stadium.Capacity FROM stadium WHERE stadium.Highest = (SELECT MAX(stadium.Average) FROM stadium)", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT stadium.Name, stadium.Capacity FROM stadium WHERE stadium.Stadium_ID = (SELECT concert.Stadium_ID FROM concert WHERE concert.concert_ID = (SELECT singer_in_concert.concert_ID FROM singer_in_concert WHERE singer_in_concert.Singer_ID = (SELECT singer.Singer_ID FROM singer WHERE singer.Age = (SELECT MAX(singer.Age) FROM singer))))", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT weight FROM pets WHERE pet_type = 'dog' ORDER BY pet_age ASC LIMIT 1", "g_str": ["SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM car_names  JOIN model_list ON car_names.Model = model_list.ModelId  JOIN cars_data ON car_names.MakeId = cars_data.Id  ORDER BY cars_data.MPG DESC LIMIT 1", "g_str": ["select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT CONCAT(players.first_name, ' ', players.last_name) AS full_name FROM players ORDER BY players.birth_date", "g_str": ["SELECT first_name ,  last_name FROM players ORDER BY birth_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT transcript_date, transcript_id  FROM transcripts  GROUP BY transcript_date, transcript_id  ORDER BY count(*) ASC  LIMIT 1", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT transcript_date, transcript_id FROM transcripts ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcript_contents.transcript_id = transcripts.transcript_id) ASC LIMIT 1", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC", "g_str": ["SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT * FROM students ORDER BY last_name DESC", "g_str": ["SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating DESC", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating DESC", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT country.Name, country.IndepYear, country.SurfaceArea  FROM country  WHERE country.Population = (SELECT MIN(Population) FROM country)", "g_str": ["SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor ORDER BY Age DESC", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "orchestra"], "hardness": "easy"}]