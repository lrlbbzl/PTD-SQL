[{"p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country ORDER BY COUNT(Singer_ID)", "g_str": ["SELECT country ,  count(*) FROM singer GROUP BY country", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT stadium.Name, COUNT(concert.concert_ID) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY stadium.Stadium_ID, stadium.Name", "g_str": ["SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "concert_singer"], "hardness": "hard"}, {"p_str": "SELECT concert_Name, Theme, COUNT(Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert_Name, Theme", "g_str": ["SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID, singer.Name", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID", "g_str": ["SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType", "g_str": ["SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID", "g_str": ["SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID", "g_str": ["select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT T1.ContId, T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent", "g_str": ["SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T1.ContId, T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent", "g_str": ["SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T1.FullName, T1.Id, COUNT(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id", "g_str": ["SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT car_makers.FullName, car_makers.Id, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id", "g_str": ["SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT continents.Continent, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT AVG(Weight), Year FROM cars_data GROUP BY Year", "g_str": ["SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3 ORDER BY CountryName ASC", "g_str": ["SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT Make) DESC LIMIT 1", "g_str": ["SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT airports.City, COUNT(flights.DestAirport) AS num_arriving_flights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY num_arriving_flights DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode GROUP BY T2.City ORDER BY COUNT(T1.DestAirport) DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT airports.City, COUNT(flights.FlightNo) AS num_departing_flights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY airports.City ORDER BY num_departing_flights DESC LIMIT 1", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT City FROM airports WHERE AirportCode = (SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode OR T1.DestAirport = T2.AirportCode GROUP BY T2.AirportCode ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City", "g_str": ["SELECT count(*) ,  city FROM employee GROUP BY city", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City, COUNT(*) FROM employee GROUP BY City", "g_str": ["SELECT count(*) ,  city FROM employee GROUP BY city", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1", "g_str": ["SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location", "g_str": ["SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)", "g_str": ["SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC", "g_str": ["SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)", "g_str": ["SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "employee_hire_evaluation"], "hardness": "hard"}, {"p_str": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT Name FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM hiring GROUP BY Shop_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT shop.Name, COUNT(hiring.Employee_ID) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID, shop.Name", "g_str": ["SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "employee_hire_evaluation"], "hardness": "medium"}, {"p_str": "SELECT Template_ID, COUNT(Document_ID) FROM Documents GROUP BY Template_ID", "g_str": ["SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "select template_id, count(*) from documents group by template_id", "g_str": ["SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1", "g_str": ["SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1", "g_str": ["SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code", "g_str": ["SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Templates.Template_Type_Code, COUNT(Documents.Document_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code", "g_str": ["SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "select t1.template_type_code, count(*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code", "g_str": ["SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID", "g_str": ["SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID ASC", "g_str": ["SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name, COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID", "g_str": ["SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "select t1.document_id, t1.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id, t1.document_name", "g_str": ["SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cre_Doc_Template_Mgt"], "hardness": "easy"}, {"p_str": "SELECT Document_ID, Document_Name FROM Documents WHERE Document_ID = (SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown", "g_str": ["SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "course_teach"], "hardness": "hard"}, {"p_str": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT teacher.Name, COUNT(course_arrange.Course_ID) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID", "g_str": ["SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "course_teach"], "hardness": "medium"}, {"p_str": "select t1.name, count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.teacher_id", "g_str": ["SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "medium"}, {"p_str": "SELECT ID, Name, Age FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "museum_visit"], "hardness": "medium"}, {"p_str": "SELECT T2.Museum_ID, T2.Name FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT Name, Age FROM visitor WHERE ID = (SELECT visitor_ID FROM visit ORDER BY Num_of_Ticket DESC LIMIT 1)", "g_str": ["SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "museum_visit"], "hardness": "hard"}, {"p_str": "SELECT AVG(loser_age), AVG(winner_age) FROM matches", "g_str": ["SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10", "g_str": ["SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)", "g_str": ["SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code, COUNT(*) FROM players GROUP BY country_code", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code", "g_str": ["SELECT count(*) ,  country_code FROM players GROUP BY country_code", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50", "g_str": ["SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT year, COUNT(match_num) FROM matches GROUP BY year", "g_str": ["SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT year, COUNT(*) FROM matches GROUP BY year", "g_str": ["SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT winner_id FROM matches WHERE winner_id IN (SELECT player_id FROM rankings WHERE ranking_points = (SELECT MAX(ranking_points) FROM rankings)))", "g_str": ["SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id GROUP BY T1.player_id ORDER BY SUM(T2.winner_rank_points) DESC LIMIT 1", "g_str": ["SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT hand, COUNT(player_id) FROM players GROUP BY hand", "g_str": ["SELECT count(*) ,  hand FROM players GROUP BY hand", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT hand, COUNT(player_id) FROM players GROUP BY hand", "g_str": ["SELECT count(*) ,  hand FROM players GROUP BY hand", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T1.course_id, T2.course_name FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) <= 2", "g_str": ["SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT semester_name, semester_id FROM Semesters WHERE semester_id = (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT degree_summary_name FROM Degree_Programs WHERE degree_program_id = (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT degree_summary_name FROM Degree_Programs WHERE degree_program_id = (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT transcript_date, transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T2.transcript_id HAVING COUNT(*) >= 2", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT student_course_id, COUNT(transcript_id) FROM Transcript_Contents GROUP BY student_course_id ORDER BY COUNT(transcript_id) DESC LIMIT 1", "g_str": ["SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT T1.Directed_by, COUNT(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id GROUP BY T1.Directed_by", "g_str": ["SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "tvshow"], "hardness": "medium"}, {"p_str": "SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2", "g_str": ["SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000", "g_str": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality ORDER BY COUNT(People_ID)", "g_str": ["SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "poker_player"], "hardness": "easy"}, {"p_str": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "voter_1"], "hardness": "medium"}, {"p_str": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code HAVING COUNT(T2.Language) >= 3", "g_str": ["SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "world_1"], "hardness": "medium"}, {"p_str": "select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.code having count(*) > 2 order by t1.name", "g_str": ["SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "world_1"], "hardness": "medium"}, {"p_str": "SELECT GovernmentForm, SUM(Population) FROM country WHERE GovernmentForm IN (SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72) GROUP BY GovernmentForm", "g_str": ["SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72", "g_str": ["SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "world_1"], "hardness": "hard"}, {"p_str": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "g_str": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1)", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "extra"}, {"p_str": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "extra"}, {"p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company", "g_str": ["SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company", "g_str": ["SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1", "g_str": ["SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "orchestra"], "hardness": "hard"}, {"p_str": "SELECT DISTINCT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(*) > 1", "g_str": ["SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(*) > 1", "g_str": ["SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "orchestra"], "hardness": "medium"}, {"p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade ORDER BY grade", "g_str": ["SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "network_1"], "hardness": "medium"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "hard"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(friend_id) DESC LIMIT 1)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id", "g_str": ["SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "network_1"], "hardness": "medium"}, {"p_str": "select t1.name, count(*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "network_1"], "hardness": "hard"}, {"p_str": "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.professional_id, T1.role_code, T1.first_name FROM Treatments AS T2 JOIN Professionals AS T1 ON T2.professional_id = T1.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2", "g_str": ["SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "g_str": ["SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1", "g_str": ["SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.owner_id, T2.zip_code FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT charge_type, charge_amount FROM Charges", "g_str": ["SELECT charge_type ,  charge_amount FROM Charges", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["select citizenship from singer group by citizenship order by count(*) desc limit 1", "singer"], "hardness": "hard"}, {"p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "g_str": ["SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "singer"], "hardness": "medium"}, {"p_str": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "g_str": ["SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID", "g_str": ["SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "singer"], "hardness": "medium"}, {"p_str": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "g_str": ["SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "singer"], "hardness": "medium"}]