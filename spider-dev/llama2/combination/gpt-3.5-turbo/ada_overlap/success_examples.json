[
    {
        "p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country",
        "g_str": [
            "SELECT country ,  count(*) FROM singer GROUP BY country",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country",
        "g_str": [
            "SELECT country ,  count(*) FROM singer GROUP BY country",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT stadium.Name, COUNT(concert.concert_ID) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY concert.Stadium_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType",
        "g_str": [
            "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT PetType, AVG(weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",
        "g_str": [
            "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Has_Pet.StuID, COUNT(Has_Pet.PetID) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY Has_Pet.StuID",
        "g_str": [
            "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.Fname, Student.Sex HAVING COUNT(Has_Pet.PetID) > 1 LIMIT 1",
        "g_str": [
            "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Fname, Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1",
        "g_str": [
            "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent",
        "g_str": [
            "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS num_countries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent",
        "g_str": [
            "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS num_models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id",
        "g_str": [
            "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT continents.Continent, COUNT(car_makers.Id) AS count FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId GROUP BY continents.Continent",
        "g_str": [
            "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT continents.Continent, COUNT(car_makers.Id) FROM continents JOIN countries ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY continents.Continent",
        "g_str": [
            "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryName, CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName, CountryId HAVING COUNT(car_makers.Id) >= 1",
        "g_str": [
            "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT AVG(Weight), Year FROM cars_data GROUP BY Year",
        "g_str": [
            "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT CountryName FROM car_makers  JOIN countries ON car_makers.Country = countries.CountryId  JOIN continents ON countries.Continent = continents.ContId  GROUP BY Country  HAVING COUNT(*) >= 3  AND continents.Continent = 'Europe'",
        "g_str": [
            "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3",
        "g_str": [
            "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",
        "g_str": [
            "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",
        "g_str": [
            "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
            "car_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City FROM airports INNER JOIN flights ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT airports.City, COUNT(flights.DestAirport) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY COUNT(flights.DestAirport) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City FROM airports JOIN flights ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT airports.City FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY flights.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT airports.AirportCode FROM airports JOIN flights ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY COUNT(flights.FlightNo) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "flight_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City",
        "g_str": [
            "SELECT count(*) ,  city FROM employee GROUP BY city",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City",
        "g_str": [
            "SELECT count(*) ,  city FROM employee GROUP BY city",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1",
        "g_str": [
            "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location",
        "g_str": [
            "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location",
        "g_str": [
            "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Manager_name, District FROM shop GROUP BY Shop_ID ORDER BY Number_products DESC LIMIT 1",
        "g_str": [
            "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC",
        "g_str": [
            "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)",
        "g_str": [
            "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
            "employee_hire_evaluation"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)",
        "g_str": [
            "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
            "employee_hire_evaluation"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY COUNT(evaluation.Employee_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY hiring.Shop_ID ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT shop.Name, COUNT(hiring.Employee_ID) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID",
        "g_str": [
            "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT shop.Name, COUNT(hiring.Employee_ID) AS Number_of_employees FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID",
        "g_str": [
            "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
            "employee_hire_evaluation"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Number_of_Documents FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID",
        "g_str": [
            "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Documents.Template_ID, COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Documents.Template_ID",
        "g_str": [
            "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Templates.Template_ID, Templates.Template_Type_Code ORDER BY COUNT(Documents.Document_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Template_ID, Template_Type_Code FROM Templates WHERE Template_ID = (SELECT Template_ID FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Ref_Template_Types.Template_Type_Code, COUNT(Templates.Template_ID) AS Number_of_Templates FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code",
        "g_str": [
            "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Ref_Template_Types.Template_Type_Code, COUNT(Templates.Template_ID) AS Template_Count FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code",
        "g_str": [
            "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Templates.Template_Type_Code, COUNT(Documents.Document_ID) AS Number_of_Documents FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code",
        "g_str": [
            "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Templates.Template_Type_Code FROM Templates  JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code  JOIN Documents ON Documents.Template_ID = Templates.Template_ID  GROUP BY Templates.Template_Type_Code  ORDER BY COUNT(Documents.Document_ID) DESC  LIMIT 1",
        "g_str": [
            "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS Number_of_Paragraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID",
        "g_str": [
            "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Number_of_Paragraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Documents.Document_ID, Documents.Document_Name  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID, Documents.Document_Name  HAVING COUNT(Paragraphs.Paragraph_ID) = (SELECT MAX(paragraph_count)                                           FROM (SELECT COUNT(Paragraphs.Paragraph_ID) AS paragraph_count                                                 FROM Paragraphs                                                 GROUP BY Paragraphs.Document_ID) AS counts)",
        "g_str": [
            "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2",
        "g_str": [
            "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT teacher.Name, COUNT(course_arrange.Course_ID) AS num_courses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID",
        "g_str": [
            "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT teacher.Name, COUNT(course_arrange.Course_ID) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID",
        "g_str": [
            "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM teacher INNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID HAVING COUNT(course_arrange.Course_ID) >= 2",
        "g_str": [
            "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name HAVING COUNT(course_arrange.Course_ID) >= 2",
        "g_str": [
            "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
            "course_teach"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT visitor.ID, visitor.Name, visitor.Age  FROM visitor  JOIN visit ON visitor.ID = visit.visitor_ID  GROUP BY visitor.ID, visitor.Name, visitor.Age  HAVING COUNT(visit.visitor_ID) > 1",
        "g_str": [
            "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
            "museum_visit"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
            "museum_visit"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.Name, visitor.Age ORDER BY MAX(visit.Num_of_Ticket) DESC LIMIT 1",
        "g_str": [
            "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
            "museum_visit"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10",
        "g_str": [
            "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT m.loser_name, m.winner_name  FROM matches m  JOIN players p ON m.loser_id = p.player_id  JOIN players p2 ON m.winner_id = p2.player_id  WHERE m.minutes = (SELECT MAX(minutes) FROM matches)",
        "g_str": [
            "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country_code, COUNT(*) FROM players GROUP BY country_code",
        "g_str": [
            "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code",
        "g_str": [
            "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50",
        "g_str": [
            "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT year, COUNT(match_num) FROM matches GROUP BY year",
        "g_str": [
            "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT year, COUNT(match_num) FROM matches GROUP BY year",
        "g_str": [
            "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT players.first_name, players.country_code, players.birth_date  FROM players  JOIN matches ON matches.winner_id = players.player_id  JOIN rankings ON rankings.player_id = players.player_id  GROUP BY players.first_name, players.country_code, players.birth_date  ORDER BY SUM(matches.winner_rank_points) DESC  LIMIT 1",
        "g_str": [
            "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
            "wta_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT hand, COUNT(*) FROM players GROUP BY hand",
        "g_str": [
            "SELECT count(*) ,  hand FROM players GROUP BY hand",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT hand, COUNT(player_id) FROM players GROUP BY hand",
        "g_str": [
            "SELECT count(*) ,  hand FROM players GROUP BY hand",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T1.department_name, T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT department_id, department_name FROM Departments WHERE department_id = (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(degree_program_id) DESC LIMIT 1)",
        "g_str": [
            "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Semesters.semester_name, Semesters.semester_id FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id GROUP BY Student_Enrolment.semester_id ORDER BY COUNT(Student_Enrolment.student_id) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Semesters.semester_id, Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id GROUP BY Semesters.semester_id, Semesters.semester_name HAVING COUNT(Student_Enrolment.student_id) = (SELECT MAX(student_count) FROM (SELECT COUNT(student_id) AS student_count FROM Student_Enrolment GROUP BY semester_id) AS counts)",
        "g_str": [
            "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT degree_summary_name FROM Degree_Programs WHERE degree_program_id = (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name  FROM Degree_Programs  JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id  GROUP BY Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name  ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC  LIMIT 1",
        "g_str": [
            "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY course_name ORDER BY COUNT(Student_Enrolment_Courses.student_enrolment_id) DESC LIMIT 1",
        "g_str": [
            "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.transcript_date, T1.transcript_id FROM transcripts AS T1 JOIN transcript_contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T2.transcript_id HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
            "student_transcripts_tracking"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT address_id, line_1, line_2 FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students GROUP BY current_address_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1",
        "g_str": [
            "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Country, COUNT(id) AS num_channels FROM TV_Channel GROUP BY Country ORDER BY num_channels DESC LIMIT 1",
        "g_str": [
            "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Language, COUNT(id) AS num_channels FROM TV_Channel GROUP BY Language ORDER BY num_channels ASC LIMIT 1",
        "g_str": [
            "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Language, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language ORDER BY channel_count ASC LIMIT 1",
        "g_str": [
            "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
            "tvshow"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT MAX(Final_Table_Made) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Earnings < 200000",
        "g_str": [
            "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
            "poker_player"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality",
        "g_str": [
            "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
            "poker_player"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality",
        "g_str": [
            "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
            "poker_player"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
            "poker_player"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2",
        "g_str": [
            "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
            "poker_player"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number, CONTESTANTS.contestant_name HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
            "voter_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT area_code FROM AREA_CODE_STATE WHERE state = (SELECT state FROM VOTES GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1) LIMIT 1",
        "g_str": [
            "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
            "voter_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT country.Name, COUNT(DISTINCT countrylanguage.Language) AS num_languages  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  GROUP BY country.Name  HAVING num_languages >= 3",
        "g_str": [
            "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country.Name, COUNT(countrylanguage.Language) AS Language_Count FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING Language_Count > 2",
        "g_str": [
            "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",
        "g_str": [
            "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",
        "g_str": [
            "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
            "world_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72",
        "g_str": [
            "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "g_str": [
            "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
            "orchestra"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
        "g_str": [
            "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY conductor.Conductor_ID HAVING COUNT(DISTINCT performance.Orchestra_ID) > 1",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "orchestra"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company",
        "g_str": [
            "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT orchestra.Record_Company, COUNT(orchestra.Orchestra_ID) AS num_orchestras FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY orchestra.Record_Company",
        "g_str": [
            "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(performance.Performance_ID) > 1",
        "g_str": [
            "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
            "orchestra"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade",
        "g_str": [
            "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade",
        "g_str": [
            "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
            "network_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4",
        "g_str": [
            "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
            "network_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Friend.student_id, COUNT(Friend.friend_id) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Friend.student_id ORDER BY COUNT(Friend.friend_id) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING COUNT(Friend.friend_id) >= 3",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING COUNT(friend_id) >= 3",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT student_id, COUNT(student_id) FROM Likes GROUP BY student_id",
        "g_str": [
            "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Highschooler.name, COUNT(Likes.student_id) AS number_of_likes FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Likes.student_id",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Highschooler.name, COUNT(Likes.liked_id) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Likes.student_id",
        "g_str": [
            "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Highschooler.name FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "network_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Highschooler.name FROM Likes, Highschooler WHERE Likes.student_id = Highschooler.ID GROUP BY Likes.student_id HAVING COUNT(Likes.liked_id) >= 2",
        "g_str": [
            "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
            "network_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE grade > 5 GROUP BY name HAVING COUNT(friend_id) >= 2",
        "g_str": [
            "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
            "network_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(*) >= 2",
        "g_str": [
            "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Owners.owner_id, Owners.last_name  FROM Treatments  JOIN Dogs ON Treatments.dog_id = Dogs.dog_id  JOIN Owners ON Dogs.owner_id = Owners.owner_id  GROUP BY Owners.owner_id  ORDER BY COUNT(Treatments.treatment_id) DESC  LIMIT 1",
        "g_str": [
            "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Treatment_Types.treatment_type_description  FROM Treatments  JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code  GROUP BY Treatment_Types.treatment_type_description  ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT charge_type, charge_amount FROM Charges",
        "g_str": [
            "SELECT charge_type ,  charge_amount FROM Charges",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1",
        "g_str": [
            "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
            "singer"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "g_str": [
            "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(song.Song_ID) > 1",
        "g_str": [
            "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(*) > 1",
        "g_str": [
            "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT singer.Name, SUM(song.Sales) AS total_sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID",
        "g_str": [
            "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
            "singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT singer.Name, SUM(song.Sales) AS Total_Sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name",
        "g_str": [
            "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
            "singer"
        ],
        "hardness": "medium"
    }
]