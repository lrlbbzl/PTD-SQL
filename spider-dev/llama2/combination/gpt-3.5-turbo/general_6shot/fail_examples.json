[{"p_str": "SELECT T1.Stadium_ID, COUNT(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID", "g_str": ["SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT T2.FullName, T1.Id, COUNT(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T1.Maker, T2.FullName, T1.Id", "g_str": ["SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T2.Continent, COUNT(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN continents AS T3 ON T2.Continent = T3.ContId GROUP BY T2.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T1.Continent, COUNT(T2.Maker) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent", "g_str": ["SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T1.FullName, COUNT(*) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.FullName", "g_str": ["select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.Continent = 'Europe' GROUP BY T2.CountryName HAVING COUNT(*) >= 3", "g_str": ["SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(*) >= 3 AND T1.Continent = 'Europe'", "g_str": ["SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT Cylinders FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Cylinders FROM cars_data GROUP BY Cylinders", "g_str": ["SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM model_list GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT T1.Maker, T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Maker, T1.Id HAVING COUNT(T2.Model) > 3", "g_str": ["SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T2.Country ,  COUNT(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId GROUP BY T2.Country HAVING COUNT(*) > 2", "g_str": ["select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T2.Country ,  COUNT(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId GROUP BY T2.Country HAVING COUNT(*) > 2", "g_str": ["select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "car_1"], "hardness": "medium"}, {"p_str": "SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 GROUP BY T2.Model ORDER BY MAX(T1.Horsepower) DESC LIMIT 1", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 GROUP BY T2.Model HAVING T1.Horsepower = MAX(T1.Horsepower)", "g_str": ["SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "car_1"], "hardness": "extra"}, {"p_str": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Abbreviation, Country FROM airlines WHERE uid = (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)", "g_str": ["SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline = T2.Airline GROUP BY T2.Airline ORDER BY COUNT(*) ASC LIMIT 1", "g_str": ["SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "flight_2"], "hardness": "extra"}, {"p_str": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(FlightNo) >= 10", "g_str": ["SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "flight_2"], "hardness": "medium"}, {"p_str": "SELECT Employee_ID FROM evaluation GROUP BY Employee_ID ORDER BY MAX(Bonus) DESC LIMIT 1This SQL query will give you the Employee_ID of the employee who received the most awards in evaluations. If you need the employee's name as well, you can join the result with the 'employee' table to retrieve the name.", "g_str": ["SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "employee_hire_evaluation"], "hardness": "extra"}, {"p_str": "SELECT Template_ID FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT T2.Template_Type_Code, COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code", "g_str": ["SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "cre_Doc_Template_Mgt"], "hardness": "medium"}, {"p_str": "SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_ID) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT T2.Template_Type_Code, COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "hard"}, {"p_str": "SELECT Template_Type_Code FROM Documents GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cre_Doc_Template_Mgt"], "hardness": "extra"}, {"p_str": "SELECT T2.Hometown, COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Hometown HAVING COUNT(*) >= 2", "g_str": ["SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "course_teach"], "hardness": "easy"}, {"p_str": "SELECT T2.ID, T2.Name, T2.Level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID GROUP BY T1.visitor_ID ORDER BY SUM(T1.Total_spent) DESC LIMIT 1", "g_str": ["SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "museum_visit"], "hardness": "extra"}, {"p_str": "SELECT T2.first_name, T2.country_code FROM players AS T2 JOIN rankings AS T1 ON T2.player_id = T1.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT T2.first_name, T2.last_name, T3.ranking_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T1.winner_id = T3.player_id GROUP BY T1.winner_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT T2.first_name, T2.last_name, T3.ranking_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id GROUP BY T1.winner_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT players.first_name, SUM(rankings.ranking_points) FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id", "g_str": ["SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date", "g_str": ["SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date", "g_str": ["SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT T2.first_name, T2.country_code, T2.birth_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T1.winner_id = T3.player_id WHERE T3.ranking_points = (SELECT MAX(ranking_points) FROM rankings)", "g_str": ["SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "wta_1"], "hardness": "hard"}, {"p_str": "SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 10", "g_str": ["SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "battle_death"], "hardness": "hard"}, {"p_str": "SELECT T2.id, T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T1.caused_by_ship_id ORDER BY SUM(T1.injured) DESC LIMIT 1", "g_str": ["SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "battle_death"], "hardness": "extra"}, {"p_str": "SELECT department_id, department_name FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT semester_id FROM student_enrolment GROUP BY semester_id ORDER BY COUNT(student_id) DESC LIMIT 1", "g_str": ["SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.degree_program_id, T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "select t1.student_id, t1.first_name, t1.middle_name, t1.last_name, count(*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id, t1.first_name, t1.middle_name, t1.last_name order by count(*) desc limit 1", "g_str": ["SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1", "g_str": ["SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT T2.transcript_id, T1.transcript_date FROM transcript_contents AS T1 JOIN transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T2.transcript_id HAVING COUNT(T1.student_course_id) >= 2", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(course_id) >= 2", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "student_transcripts_tracking"], "hardness": "medium"}, {"p_str": "SELECT current_address_id FROM Students GROUP BY current_address_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT address_id, line_1, line_2 FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students UNION SELECT permanent_address_id FROM Students) GROUP BY address_id, line_1, line_2 ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT course_id FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "student_transcripts_tracking"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC", "g_str": ["SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "tvshow"], "hardness": "hard"}, {"p_str": "SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2", "g_str": ["SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT T2.Name, COUNT(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.People_ID ORDER BY COUNT(*) ASC", "g_str": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "poker_player"], "hardness": "medium"}, {"p_str": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT Nationality FROM people ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "poker_player"], "hardness": "hard"}, {"p_str": "SELECT T2.area_code, COUNT(*) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.area_code ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "voter_1"], "hardness": "extra"}, {"p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1", "g_str": ["SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "world_1"], "hardness": "extra"}, {"p_str": "SELECT District, COUNT(*) FROM city GROUP BY District HAVING Population > (SELECT AVG(Population) FROM city)", "g_str": ["SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "world_1"], "hardness": "extra"}, {"p_str": "SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm", "g_str": ["SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T2.Name, T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.CountryCode HAVING T1.Percentage = MAX(T1.Percentage)", "g_str": ["SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code", "g_str": ["SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT cl.CountryCode) FROM countrylanguage AS cl WHERE cl.Language = 'Spanish' AND cl.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')", "g_str": ["SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "world_1"], "hardness": "extra"}, {"p_str": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' GROUP BY CountryCode ORDER BY MAX(Percentage) DESC", "g_str": ["SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY MAX(Year_of_Founded) DESC", "g_str": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4", "g_str": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "network_1"], "hardness": "easy"}, {"p_str": "SELECT name FROM Highschooler GROUP BY ID ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "network_1"], "hardness": "extra"}, {"p_str": "SELECT name FROM Highschooler GROUP BY name HAVING COUNT(friend_id) >= 3", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT name FROM Highschooler GROUP BY name HAVING COUNT(friend_id) >= 3", "g_str": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name, COUNT(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT T1.name, COUNT(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name", "g_str": ["SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "network_1"], "hardness": "medium"}, {"p_str": "SELECT owner_id, first_name, last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.owner_id, T2.last_name FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id, T2.last_name ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.owner_id, T2.last_name FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id, T2.last_name ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1", "g_str": ["SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2", "g_str": ["SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2", "g_str": ["SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT breed_name, size_description FROM Breeds, Sizes", "g_str": ["SELECT DISTINCT breed_code ,  size_code FROM dogs", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Citizenship FROM singer ORDER BY COUNT(*) DESC LIMIT 1", "g_str": ["select citizenship from singer group by citizenship order by count(*) desc limit 1", "singer"], "hardness": "hard"}]