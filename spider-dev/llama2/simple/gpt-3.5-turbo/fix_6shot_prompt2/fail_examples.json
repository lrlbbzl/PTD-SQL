[
    {
        "p_str": "SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)",
        "g_str": [
            "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT MAX(capacity), AVG(capacity) FROM stadium",
        "g_str": [
            "select max(capacity), average from stadium",
            "concert_singer"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT weight FROM pets WHERE pet_type = 'dog' ORDER BY pet_age ASC LIMIT 1",
        "g_str": [
            "SELECT weight FROM pets WHERE PetType = 'dog' ORDER BY pet_age LIMIT 1",
            "pets_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT MIN(pet_age) FROM pets WHERE pet_type = 'dog'",
        "g_str": [
            "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
            "pets_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model",
        "g_str": [
            "SELECT Maker ,  Model FROM MODEL_LIST;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model",
        "g_str": [
            "SELECT Maker ,  Model FROM MODEL_LIST;",
            "car_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name FROM employee ORDER BY bonus DESC LIMIT 1",
        "g_str": [
            "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
            "employee_hire_evaluation"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT MIN(Version_Number), Template_Type_Code FROM Templates GROUP BY Template_Type_Code",
        "g_str": [
            "SELECT min(Version_Number) ,  template_type_code FROM Templates",
            "cre_Doc_Template_Mgt"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT MAX(loser_rank) FROM matches",
        "g_str": [
            "SELECT min(loser_rank) FROM matches",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT MAX(loser_rank) FROM matches",
        "g_str": [
            "SELECT min(loser_rank) FROM matches",
            "wta_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT CONCAT(first_name, ' ', last_name) FROM players ORDER BY birth_date",
        "g_str": [
            "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT players.first_name, AVG(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name",
        "g_str": [
            "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "wta_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT name, date, result FROM battle",
        "g_str": [
            "SELECT name ,  date FROM battle",
            "battle_death"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT transcript_date, transcript_id FROM transcripts ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcript_contents.transcript_id = transcripts.transcript_id) ASC LIMIT 1",
        "g_str": [
            "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
            "student_transcripts_tracking"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT permanent_address_id FROM students UNION SELECT current_address_id FROM students)",
        "g_str": [
            "SELECT count(DISTINCT current_address_id) FROM Students",
            "student_transcripts_tracking"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC",
        "g_str": [
            "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
            "student_transcripts_tracking"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT * FROM Students ORDER BY last_name DESC",
        "g_str": [
            "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
            "student_transcripts_tracking"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Episode FROM TV_series ORDER BY Rating DESC",
        "g_str": [
            "SELECT Episode FROM TV_series ORDER BY rating",
            "tvshow"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE",
        "g_str": [
            "SELECT count(*) FROM area_code_state",
            "voter_1"
        ],
        "hardness": "easy"
    },
    {
        "p_str": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)",
        "g_str": [
            "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT country.Name, country.IndepYear, country.SurfaceArea  FROM country  WHERE country.Population = (SELECT MIN(Population) FROM country)",
        "g_str": [
            "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
            "world_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT treatment_type_description FROM treatment_types ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code",
        "g_str": [
            "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  JOIN Sizes ON Dogs.size_code = Sizes.size_code",
        "g_str": [
            "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Dogs.name, Treatments.date_of_treatment  FROM Dogs  JOIN Breeds ON Dogs.breed_code = Breeds.breed_code  JOIN Treatments ON Dogs.dog_id = Treatments.dog_id  WHERE Breeds.breed_name = (SELECT breed_name FROM Breeds ORDER BY count(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name, date_of_treatment FROM dogs  JOIN breeds ON dogs.breed_code = breeds.breed_code  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE breeds.breed_name = (SELECT breed_name FROM breeds ORDER BY count(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE age = (SELECT MIN(age) FROM dogs))",
        "g_str": [
            "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
            "dog_kennels"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DISTINCT breed_name, size_description FROM breeds, sizes, dogs WHERE dogs.breed_code = breeds.breed_code AND dogs.size_code = sizes.size_code",
        "g_str": [
            "SELECT DISTINCT breed_code ,  size_code FROM dogs",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Professionals.first_name, Treatment_Types.treatment_type_description  FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id  JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code",
        "g_str": [
            "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
            "dog_kennels"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Professionals.first_name, Treatment_Types.treatment_type_description  FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id  JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code",
        "g_str": [
            "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
            "dog_kennels"
        ],
        "hardness": "medium"
    }
]