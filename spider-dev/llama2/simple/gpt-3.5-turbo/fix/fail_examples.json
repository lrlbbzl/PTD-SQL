[{"p_str": "SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)", "g_str": ["SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT MAX(Capacity), AVG(Capacity) FROM stadium", "g_str": ["select max(capacity), average from stadium", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT stadium.Name, stadium.Capacity FROM stadium WHERE stadium.Highest = (SELECT MAX(stadium.Average) FROM stadium)", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT stadium.Name, stadium.Capacity FROM stadium WHERE stadium.Stadium_ID = (SELECT concert.Stadium_ID FROM concert WHERE concert.concert_ID = (SELECT singer_in_concert.concert_ID FROM singer_in_concert WHERE singer_in_concert.Singer_ID = (SELECT singer.Singer_ID FROM singer WHERE singer.Age = (SELECT MAX(singer.Age) FROM singer))))", "g_str": ["SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "concert_singer"], "hardness": "medium"}, {"p_str": "SELECT weight FROM pets WHERE pet_type = 'dog' ORDER BY pet_age ASC LIMIT 1", "g_str": ["SELECT weight FROM pets WHERE PetType = 'dog' ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "hard"}, {"p_str": "SELECT weight FROM pets WHERE pet_type = 'dog' ORDER BY pet_age ASC LIMIT 1", "g_str": ["SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "pets_1"], "hardness": "medium"}, {"p_str": "SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model", "g_str": ["SELECT Maker ,  Model FROM MODEL_LIST;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT car_makers.Maker, car_names.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.MakeId", "g_str": ["SELECT Maker ,  Model FROM MODEL_LIST;", "car_1"], "hardness": "medium"}, {"p_str": "SELECT Model FROM car_names  JOIN model_list ON car_names.Model = model_list.ModelId  JOIN cars_data ON car_names.MakeId = cars_data.Id  ORDER BY cars_data.MPG DESC LIMIT 1", "g_str": ["select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "car_1"], "hardness": "hard"}, {"p_str": "SELECT AVG(rankings.ranking) FROM matches INNER JOIN rankings ON matches.winner_id = rankings.player_id", "g_str": ["SELECT avg(winner_rank) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT AVG(rankings.ranking) FROM matches INNER JOIN players ON matches.winner_id = players.player_id INNER JOIN rankings ON players.player_id = rankings.player_id", "g_str": ["SELECT avg(winner_rank) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT MAX(loser_rank) FROM matches", "g_str": ["SELECT min(loser_rank) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT MAX(loser_rank) FROM matches", "g_str": ["SELECT min(loser_rank) FROM matches", "wta_1"], "hardness": "easy"}, {"p_str": "SELECT CONCAT(players.first_name, ' ', players.last_name) AS full_name FROM players ORDER BY players.birth_date", "g_str": ["SELECT first_name ,  last_name FROM players ORDER BY birth_date", "wta_1"], "hardness": "medium"}, {"p_str": "SELECT name, date, result FROM battle", "g_str": ["SELECT name ,  date FROM battle", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT battle.id, MAX(death.killed) AS max_death_toll, MIN(death.killed) AS min_death_toll FROM battle JOIN death ON death.caused_by_ship_id = ship.id GROUP BY battle.id", "g_str": ["SELECT max(killed) ,  min(killed) FROM death", "battle_death"], "hardness": "medium"}, {"p_str": "SELECT COUNT(DISTINCT degree_program_id) FROM degree_programs", "g_str": ["SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT transcript_date, transcript_id  FROM transcripts  GROUP BY transcript_date, transcript_id  ORDER BY count(*) ASC  LIMIT 1", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT transcript_date, transcript_id FROM transcripts ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcript_contents.transcript_id = transcripts.transcript_id) ASC LIMIT 1", "g_str": ["SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "student_transcripts_tracking"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM addresses WHERE address_id IN (SELECT permanent_address_id FROM students UNION SELECT current_address_id FROM students)", "g_str": ["SELECT count(DISTINCT current_address_id) FROM Students", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC", "g_str": ["SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT * FROM students ORDER BY last_name DESC", "g_str": ["SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "student_transcripts_tracking"], "hardness": "easy"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating DESC", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT Episode FROM TV_series ORDER BY Rating DESC", "g_str": ["SELECT Episode FROM TV_series ORDER BY rating", "tvshow"], "hardness": "easy"}, {"p_str": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE", "g_str": ["SELECT count(*) FROM area_code_state", "voter_1"], "hardness": "easy"}, {"p_str": "SELECT country.Name, country.IndepYear, country.SurfaceArea  FROM country  WHERE country.Population = (SELECT MIN(Population) FROM country)", "g_str": ["SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "world_1"], "hardness": "medium"}, {"p_str": "SELECT Name FROM conductor ORDER BY Age DESC", "g_str": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "orchestra"], "hardness": "easy"}, {"p_str": "SELECT name, grade FROM Highschooler", "g_str": ["SELECT grade FROM Highschooler", "network_1"], "hardness": "easy"}, {"p_str": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  JOIN Sizes ON Dogs.size_code = Sizes.size_code", "g_str": ["SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  JOIN Sizes ON Dogs.size_code = Sizes.size_code", "g_str": ["SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Dogs.name, Treatments.date_of_treatment  FROM Dogs  JOIN Breeds ON Dogs.breed_code = Breeds.breed_code  JOIN Treatments ON Dogs.dog_id = Treatments.dog_id  WHERE Breeds.breed_name = (SELECT breed_name FROM Breeds GROUP BY breed_name ORDER BY count(*) ASC LIMIT 1)", "g_str": ["SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code JOIN treatments t ON d.dog_id = t.dog_id WHERE b.breed_name = (SELECT breed_name FROM breeds GROUP BY breed_name ORDER BY count(*) ASC LIMIT 1)", "g_str": ["SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id", "g_str": ["SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE age = (SELECT MIN(age) FROM dogs))", "g_str": ["SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "dog_kennels"], "hardness": "extra"}, {"p_str": "SELECT DISTINCT breed_name, size_description FROM breeds, sizes, dogs WHERE dogs.breed_code = breeds.breed_code AND dogs.size_code = sizes.size_code", "g_str": ["SELECT DISTINCT breed_code ,  size_code FROM dogs", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Professionals.first_name, Treatment_Types.treatment_type_description  FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id  JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code", "g_str": ["SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "dog_kennels"], "hardness": "medium"}, {"p_str": "SELECT Professionals.first_name, Treatment_Types.treatment_type_description  FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id  JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code", "g_str": ["SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "dog_kennels"], "hardness": "medium"}]