SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)
SELECT Song_Name FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity >= 5000 AND Capacity <= 10000
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Stadium_ID HAVING COUNT(concert.concert_ID) = (     SELECT MAX(concert_count)     FROM (         SELECT COUNT(concert.concert_ID)         FROM concert         WHERE concert.Year >= 2014         GROUP BY concert.Stadium_ID     ) AS counts )
SELECT s.Name, s.Capacity  FROM stadium s  JOIN concert c ON s.Stadium_ID = c.Stadium_ID  WHERE c.Year > 2013  GROUP BY s.Stadium_ID  ORDER BY COUNT(c.concert_ID) DESC  LIMIT 1
SELECT Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert_ID IS NULL
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014
SELECT Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.Year = 2014
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT singer.Name, singer.Country  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  WHERE singer.Song_Name LIKE '%Hey%'
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT count(*) FROM Pets WHERE weight > 10
SELECT COUNT(*) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Age > 20)
SELECT COUNT(*) FROM Pets WHERE PetType = "dog" AND PetID IN (SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Sex = "F"))
SELECT COUNT(DISTINCT Pets.PetID)  FROM Pets  INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  INNER JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = 'dog' AND Student.Sex = 'female'
SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT DISTINCT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID
SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE LName = 'Smith')
SELECT Pets.PetID FROM Has_Pet INNER JOIN Student ON Has_Pet.StuID = Student.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
SELECT LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = "cat" AND pet_age = 3
SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat' AND pet_age = 3))
SELECT AVG(age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT AVG(Age) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE PetID IS NULL
SELECT Model FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))
SELECT model FROM model_list WHERE ModelId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))
SELECT Maker FROM car_makers WHERE Id IN (SELECT MakeId FROM car_names WHERE ModelId IN (SELECT ModelId FROM cars_data WHERE Year = 1970))
SELECT DISTINCT Maker FROM car_makers  WHERE Id IN (SELECT MakeId FROM car_names               WHERE Model IN (SELECT Model FROM cars_data WHERE Year = 1970))
SELECT car_makers.Maker, cars_data.Year  FROM car_makers  JOIN cars_data ON car_makers.Id = cars_data.Id  WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data)
SELECT car_makers.Maker, cars_data.Year FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data)
SELECT DISTINCT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980
SELECT DISTINCT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Year > 1980)
SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'amc' AND model_list.Model = 'hornet sportabout (sw)'
SELECT Accelerate  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'amc'  AND car_names.Model = 'hornet sportabout (sw)'
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France'
SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = 'France'
SELECT COUNT(DISTINCT Model) FROM car_names JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'USA'
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'United States'
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT count(*) FROM cars_data WHERE Horsepower > 150
SELECT count(*) FROM cars_data WHERE Horsepower > 150
SELECT MAX(cars_data.Horsepower), car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3
SELECT car_makers.Maker, car_names.Model, cars_data.Horsepower  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE cars_data.Cylinders = 3  ORDER BY cars_data.Horsepower DESC  LIMIT 1
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
SELECT AVG(Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Maker = 'volvo'
SELECT AVG(Edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'Volvo')))
SELECT count(*) FROM cars_data WHERE Cylinders > 4
SELECT count(*) FROM cars_data WHERE Cylinders > 4
SELECT count(*) FROM cars_data WHERE Year = 1980
SELECT COUNT(*) FROM car_names  WHERE MakeId IN (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT count(distinct car_names.Model) FROM car_names JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor Company'
SELECT DISTINCT Model FROM car_names  WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight > 3500)  AND MakeId IN (SELECT Id FROM car_makers WHERE FullName = 'General Motors')
SELECT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT Cylinders FROM cars_data  WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo')  ORDER BY Accelerate ASC  LIMIT 1
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'volvo' AND cars_data.Accelerate = (SELECT MIN(Accelerate) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'volvo')
SELECT count(*) FROM cars_data WHERE Accelerate > (SELECT max(Horsepower) FROM cars_data)
SELECT count(*) FROM cars_data WHERE accelerate > (SELECT max(horsepower) FROM cars_data)
SELECT count(*) FROM cars_data WHERE Cylinders > 6
SELECT count(*) FROM cars_data WHERE Cylinders > 6
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3
SELECT MakeId, Make FROM car_names WHERE MakeId NOT IN (SELECT Id FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data) AND Cylinders < 4)
SELECT MAX(MPG) FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.MakeId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor Company'
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker != 'Ford Motor Company' AND cars_data.Weight < 3500
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways"
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways"
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA";
SELECT AirportCode, AirportName FROM airports WHERE City = "Anthony";
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
SELECT COUNT(DISTINCT Airline) FROM airlines WHERE Country = 'USA'
SELECT COUNT(DISTINCT Airline) FROM airlines WHERE Country = "USA"
SELECT City, Country FROM airports WHERE AirportName = 'Alton'
SELECT City, Country FROM airports WHERE AirportName = 'Alton'
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
SELECT AirportName FROM airports WHERE City = 'Aberdeen'
SELECT AirportName FROM airports WHERE City = 'Aberdeen'
SELECT count(*) FROM flights WHERE SourceAirport = 'APG'
SELECT count(*) FROM flights WHERE SourceAirport = 'APG'
SELECT count(*) FROM flights WHERE DestAirport = 'ATO'
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'ATO'
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')
SELECT COUNT(*) FROM flights WHERE SourceAirport = "Aberdeen";
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')
SELECT COUNT(*) FROM flights WHERE DestAirport = "Aberdeen"
SELECT count(*) FROM flights JOIN airports AS source_airport ON flights.SourceAirport = source_airport.AirportCode JOIN airports AS dest_airport ON flights.DestAirport = dest_airport.AirportCode WHERE source_airport.City = 'Aberdeen' AND dest_airport.City = 'Ashley'
SELECT count(*) FROM flights  JOIN airports AS source ON flights.SourceAirport = source.AirportCode  JOIN airports AS dest ON flights.DestAirport = dest.AirportCode  WHERE source.City = 'Aberdeen' AND dest.City = 'Ashley'
SELECT count(*) FROM flights WHERE Airline = 'JetBlue Airways'
SELECT count(*) FROM flights WHERE Airline = "Jetblue Airways"
SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY'
SELECT count(*) FROM flights WHERE Airline = "United Airlines" AND DestAirport = "ASY";
SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD'
SELECT count(*) FROM flights WHERE Airline = "United Airlines" AND SourceAirport = "AHD Airport"
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'United Airlines' AND airports.City = 'Aberdeen'
SELECT count(*) FROM flights WHERE Airline = "United Airlines" AND DestAirport = "Aberdeen"
SELECT Airline FROM airlines WHERE EXISTS (SELECT * FROM flights WHERE SourceAirport = 'AHD' AND airlines.uid = flights.Airline)
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'AHD'
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'
SELECT DISTINCT Airline FROM flights WHERE DestAirport = 'AHD'
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline GROUP BY airlines.Airline HAVING COUNT(*) < 200
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY Airline HAVING COUNT(*) < 200
SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = "United Airlines"
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines'
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'
SELECT FlightNo FROM flights WHERE DestAirport = "APG"
SELECT FlightNo FROM flights WHERE DestAirport = "APG"
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')
SELECT FlightNo FROM flights WHERE SourceAirport = "Aberdeen"
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen";
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = "Aberdeen" OR City = "Abilene")
SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen' or DestAirport = 'Abilene'
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = "Robbin CV"
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = "Robbin CV";
SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'PPT'
SELECT count(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = "PPT"
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'
SELECT Template_ID FROM Templates WHERE Template_Type_Code = "PP" OR Template_Type_Code = "PPT"
SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV'
SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV'
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT version_number, template_type_code FROM Templates WHERE version_number > 5;
SELECT Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT template_type_code FROM templates WHERE template_id = (SELECT template_id FROM documents WHERE document_name = "Data base")
SELECT Templates.template_type_code FROM Documents JOIN Templates ON Documents.template_id = Templates.template_id WHERE Documents.document_name = "Data base"
SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'BK';
SELECT Document_Name FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  WHERE Templates.Template_Type_Code = 'BK'
SELECT template_type_description FROM Ref_Template_Types WHERE template_type_code = "AD";
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = "AD"
SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description = "Book"
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = "Book"
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = "Presentation";
SELECT Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Template_Type_Description = 'Presentation'
SELECT COUNT(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Summer Show'
SELECT COUNT(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Summer Show'
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE document_name = 'Welcome to NY'
SELECT paragraph_id, paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Welcome to NY'
SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = "Customer reviews")
SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
SELECT Document_ID  FROM Documents  WHERE Document_ID IN (     SELECT Document_ID      FROM Paragraphs      GROUP BY Document_ID      HAVING COUNT(*) BETWEEN 1 AND 2 )
SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) BETWEEN 1 AND 2;
SELECT Document_ID FROM Documents WHERE Document_ID IN (SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' or Paragraph_Text = 'Ireland')
SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban District"
SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban District"
SELECT name FROM teacher WHERE age = 32 OR age = 33;
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course_arrange.Course_ID = (SELECT Course_ID FROM course WHERE Course = "math")
SELECT Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'math'
SELECT count(*) FROM visitor WHERE age < 30
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT AVG(Age) FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE Level_of_membership <= 4
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age ASC;
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010)
SELECT SUM(Total_spent) FROM visit WHERE visitor_ID IN (SELECT ID FROM visitor WHERE Level_of_membership = 1)
SELECT COUNT(*) FROM visitor WHERE NOT EXISTS (SELECT * FROM visit JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > 2010 AND visit.visitor_ID = visitor.ID)
SELECT count(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008
SELECT first_name, birth_date FROM players WHERE country_code = "USA";
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT count(*) FROM matches WHERE YEAR(tourney_date) = 2013 OR YEAR(tourney_date) = 2016
SELECT first_name, last_name FROM players WHERE hand = "L" ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT players.first_name, players.last_name  FROM players  JOIN matches ON players.player_id = matches.winner_id  WHERE matches.tourney_name = "Australian Open"  ORDER BY players.ranking_points DESC  LIMIT 1;
SELECT p.first_name, p.last_name  FROM players p  JOIN matches m ON p.player_id = m.winner_id  JOIN rankings r ON p.player_id = r.player_id  WHERE m.tourney_name = 'Australian Open'  ORDER BY r.ranking_points DESC  LIMIT 1
SELECT COUNT(DISTINCT winner_id) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.hand = "left" AND matches.tourney_name = "WTA Championships";
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'
SELECT death.note, death.killed, death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT id, name FROM battle WHERE id IN (SELECT lost_in_battle FROM ship WHERE ship_type = 'Brig')
SELECT DISTINCT name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT count(*) FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  JOIN death ON ship.id = death.caused_by_ship_id  WHERE tonnage != '225' OR tonnage IS NULL
SELECT battle.name, battle.date FROM battle INNER JOIN ship ON ship.lost_in_battle = battle.id WHERE ship.name = 'Lettice' or ship.name = 'HMS Atalanta'
SELECT battle.name, battle.result, battle.bulgarian_commander  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  JOIN death ON ship.id = death.caused_by_ship_id  WHERE battle.location = 'English Channel' AND ship.id IS NULL;
SELECT note FROM death WHERE note LIKE '%East%'
SELECT course_description FROM Courses WHERE course_name = 'math'
SELECT course_description FROM Courses WHERE course_name = "math"
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT COUNT(degree_program_id) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'engineering')
SELECT COUNT(degree_program_id) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'engineering')
SELECT course_name, course_id FROM Courses  WHERE course_id IN (SELECT course_id FROM Sections                      GROUP BY course_id                      HAVING COUNT(*) < 2)
SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT first_name, middle_name, last_name, student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY Students.student_id HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2 AND COUNT(DISTINCT Student_Enrolment.semester_id) = 1;
SELECT first_name, middle_name, last_name FROM students JOIN degree_programs ON students.degree_program_id = degree_programs.degree_program_id WHERE degree_summary_name = "Bachelor"
SELECT first_name, middle_name, last_name FROM Students WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = "Bachelors")
SELECT semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.student_enrolment_id IS NULL
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name FROM students WHERE permanent_address_id != current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id != current_address_id
SELECT MIN(transcript_date), other_details FROM Transcripts
SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT section_name, section_description, other_details FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = "Haiti") OR cell_mobile_number = "09700166582"
SELECT * FROM Cartoon WHERE Directed_by = "Ben Jones"
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr"
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"
SELECT count(*) FROM TV_Channel WHERE Language = "English"
SELECT count(*) FROM TV_Channel WHERE Language = 'English'
SELECT TV_Channel.series_name  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Title = "The Rise of the Blue Beetle!"
SELECT TV_Channel.series_name  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Title = "The Rise of the Blue Beetle"
SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = "Sky Radio")
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio"
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"
SELECT Air_Date FROM TV_series WHERE Title = "A Love of a Lifetime"
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"
SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE Episode = "A Love of a Lifetime"
SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = "Sky Radio")
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE series_name = "Sky Radio"
SELECT package_option, series_name FROM TV_Channel WHERE high_definition_TV = true;
SELECT Package_Option, series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE Hight_definition_TV = true
SELECT DISTINCT Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'
SELECT DISTINCT Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id JOIN TV_series ON TV_series.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT pixel_aspect_ratio_PAR, country  FROM TV_Channel  WHERE id NOT IN (SELECT Channel FROM TV_series WHERE Language = 'English')
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000;
SELECT people.Name FROM people INNER JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000;
SELECT AVG(earnings) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE height > 200
SELECT AVG(earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE height > 200;
SELECT Name FROM people WHERE Nationality != "Russia"
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
SELECT COUNT(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT created, state, phone_number  FROM VOTES  JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number  WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'
SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'
SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT continent FROM country WHERE name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'
SELECT Region FROM country WHERE Name = 'Kabul'
SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1
SELECT Population, LifeExpectancy FROM country WHERE Code = 'BRA'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = "Asia" AND lifeExpectancy = (SELECT MIN(lifeExpectancy) FROM country WHERE continent = "Asia")
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE Continent = "North America" AND GovernmentForm = "US territory";
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.Name = 'Aruba'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = true
SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = true
SELECT COUNT(DISTINCT Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language = 'Chinese'
SELECT Language  FROM countrylanguage  WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')  GROUP BY Language  ORDER BY SUM(Percentage) DESC  LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(*) = 1
SELECT Language FROM countrylanguage  WHERE CountryCode IN (     SELECT Code FROM country      WHERE GovernmentForm = 'Republic'     GROUP BY Code     HAVING COUNT(*) = 1 )
SELECT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  WHERE countrylanguage.Language = 'English'  ORDER BY city.Population DESC  LIMIT 1
SELECT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language = 'English'  ORDER BY city.Population DESC  LIMIT 1
SELECT name, population, lifeexpectancy  FROM country  WHERE continent = 'Asia'  ORDER BY surfacearea DESC  LIMIT 1
SELECT AVG(LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial != 'T'
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English" AND IsOfficial = "T");
SELECT SUM(Population) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language != 'English'
SELECT SUM(population) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English'
SELECT Language FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'
SELECT Language FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE c.IndepYear < 1930 AND cl.IsOfficial = 'T'
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English')
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English")
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'
SELECT Name FROM city  WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Europe')  AND NOT EXISTS (SELECT * FROM countrylanguage WHERE CountryCode = city.CountryCode AND Language = 'English' AND IsOfficial = 'T')
SELECT DISTINCT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  AND countrylanguage.Language = 'Chinese'  AND countrylanguage.IsOfficial = 'T'
SELECT DISTINCT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese" AND countrylanguage.IsOfficial = "T" AND city.CountryCode IN (SELECT country.Code FROM country WHERE country.Continent = "Asia")
SELECT governmentform, SUM(population) FROM country WHERE governmentform IN (     SELECT governmentform     FROM country     GROUP BY governmentform     HAVING AVG(lifeexpectancy) > 72 ) GROUP BY governmentform
SELECT Continent, SUM(Population), AVG(LifeExpectancy) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT count(*) FROM country WHERE Continent = 'Asia'
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT name FROM country WHERE continent = 'Europe' AND population = 80000
SELECT name FROM country WHERE continent = "Europe" AND population = 80000;
SELECT SUM(Population), AVG(SurfaceArea) FROM country  WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(population), AVG(surfacearea) FROM country WHERE continent = "North America" AND surfacearea > 3000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT name FROM city WHERE population BETWEEN 160000 AND 900000;
SELECT count(*) FROM countrylanguage WHERE Language = "Spanish" AND Percentage > 50
SELECT CountryCode FROM countrylanguage WHERE Language = "Spanish" AND IsOfficial = "T"
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality != "USA"
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != "Live final"
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008
SELECT Orchestra FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
SELECT count(*) FROM orchestra WHERE Major_Record_Format = "CD" or Major_Record_Format = "DVD"
SELECT COUNT(DISTINCT orchestra_id) FROM orchestra WHERE record_format = 'CD' OR record_format = 'DVD'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT ID FROM Highschooler WHERE name = "Kyle"
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10
SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10;
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Friend.student_id = (SELECT ID FROM Highschooler WHERE name = "Kyle")
SELECT Highschooler.name  FROM Highschooler  JOIN Friend ON Friend.friend_id = Highschooler.ID  WHERE Friend.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = "Kyle")
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING Highschooler.grade > 5 AND COUNT(Friend.friend_id) >= 2;
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = "Kyle")
SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT first_name, last_name  FROM Professionals  WHERE professional_id IN (     SELECT professional_id      FROM Treatments      WHERE cost_of_treatment < (         SELECT AVG(cost_of_treatment)          FROM Treatments     ) )
SELECT first_name, last_name FROM Professionals  WHERE professional_id IN (SELECT professional_id FROM Treatments                            WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia";
SELECT Owners.first_name, Dogs.name  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  WHERE Owners.state = "Virginia";
SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT last_name FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  WHERE age = (SELECT MIN(age) FROM Dogs)
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE "%North%";
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatments.treatment_id IS NULL
SELECT COUNT(*) FROM Dogs WHERE NOT EXISTS (SELECT * FROM Treatments WHERE Treatments.dog_id = Dogs.dog_id)
SELECT count(*) FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM Owners WHERE NOT EXISTS (SELECT * FROM Dogs WHERE Dogs.owner_id = Owners.owner_id);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT Name FROM singer WHERE Citizenship != "France"
SELECT name FROM singer WHERE citizenship != "French"
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Sales > 300000;
SELECT feature_type_name FROM Ref_Feature_Types  JOIN Other_Available_Features ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code  WHERE feature_name = 'AirCon'
SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = [given code]